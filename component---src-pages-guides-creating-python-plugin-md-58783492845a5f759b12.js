"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[169],{38023:function(e,a,n){n.r(a),n.d(a,{_frontmatter:function(){return p},default:function(){return o}});var t=n(87462),s=n(63366),l=(n(15007),n(64983)),m=n(91515),r=["components"],p={},i={_frontmatter:p},d=m.Z;function o(e){var a=e.components,n=(0,s.Z)(e,r);return(0,l.mdx)(d,(0,t.Z)({},i,n,{components:a,mdxType:"MDXLayout"}),(0,l.mdx)("p",null,"yolo"),(0,l.mdx)("dl",{className:"py method"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.resource.Shelf.import_resource"},(0,l.mdx)("span",{className:"sig-name descname"},(0,l.mdx)("span",{className:"pre"},"import_resource")),(0,l.mdx)("span",{className:"sig-paren"},"("),(0,l.mdx)("em",{className:"sig-param"},(0,l.mdx)("span",{className:"n"},(0,l.mdx)("span",{className:"pre"},"file_path")),(0,l.mdx)("span",{className:"p"},(0,l.mdx)("span",{className:"pre"},":")),(0,l.mdx)("span",{className:"w"}," "),(0,l.mdx)("span",{className:"n"},(0,l.mdx)("span",{className:"pre"},"str"))),", ",(0,l.mdx)("em",{className:"sig-param"},(0,l.mdx)("span",{className:"n"},(0,l.mdx)("span",{className:"pre"},"resource_usage")),(0,l.mdx)("span",{className:"p"},(0,l.mdx)("span",{className:"pre"},":")),(0,l.mdx)("span",{className:"w"}," "),(0,l.mdx)("span",{className:"n"},(0,l.mdx)("a",{className:"reference internal",href:"#substance_painter.resource.Usage",title:"substance_painter.resource.Usage"},(0,l.mdx)("span",{className:"pre"},"Usage")))),", ",(0,l.mdx)("em",{className:"sig-param"},(0,l.mdx)("span",{className:"n"},(0,l.mdx)("span",{className:"pre"},"name")),(0,l.mdx)("span",{className:"p"},(0,l.mdx)("span",{className:"pre"},":")),(0,l.mdx)("span",{className:"w"}," "),(0,l.mdx)("span",{className:"n"},(0,l.mdx)("span",{className:"pre"},"str"),(0,l.mdx)("span",{className:"w"}," "),(0,l.mdx)("span",{className:"p"},(0,l.mdx)("span",{className:"pre"},"|")),(0,l.mdx)("span",{className:"w"}," "),(0,l.mdx)("span",{className:"pre"},"None")),(0,l.mdx)("span",{className:"w"}," "),(0,l.mdx)("span",{className:"o"},(0,l.mdx)("span",{className:"pre"},"=")),(0,l.mdx)("span",{className:"w"}," "),(0,l.mdx)("span",{className:"default_value"},(0,l.mdx)("span",{className:"pre"},"None"))),", ",(0,l.mdx)("em",{className:"sig-param"},(0,l.mdx)("span",{className:"n"},(0,l.mdx)("span",{className:"pre"},"group")),(0,l.mdx)("span",{className:"p"},(0,l.mdx)("span",{className:"pre"},":")),(0,l.mdx)("span",{className:"w"}," "),(0,l.mdx)("span",{className:"n"},(0,l.mdx)("span",{className:"pre"},"str"),(0,l.mdx)("span",{className:"w"}," "),(0,l.mdx)("span",{className:"p"},(0,l.mdx)("span",{className:"pre"},"|")),(0,l.mdx)("span",{className:"w"}," "),(0,l.mdx)("span",{className:"pre"},"None")),(0,l.mdx)("span",{className:"w"}," "),(0,l.mdx)("span",{className:"o"},(0,l.mdx)("span",{className:"pre"},"=")),(0,l.mdx)("span",{className:"w"}," "),(0,l.mdx)("span",{className:"default_value"},(0,l.mdx)("span",{className:"pre"},"None"))),", ",(0,l.mdx)("em",{className:"sig-param"},(0,l.mdx)("span",{className:"n"},(0,l.mdx)("span",{className:"pre"},"uuid")),(0,l.mdx)("span",{className:"p"},(0,l.mdx)("span",{className:"pre"},":")),(0,l.mdx)("span",{className:"w"}," "),(0,l.mdx)("span",{className:"n"},(0,l.mdx)("span",{className:"pre"},"str"),(0,l.mdx)("span",{className:"w"}," "),(0,l.mdx)("span",{className:"p"},(0,l.mdx)("span",{className:"pre"},"|")),(0,l.mdx)("span",{className:"w"}," "),(0,l.mdx)("span",{className:"pre"},"None")),(0,l.mdx)("span",{className:"w"}," "),(0,l.mdx)("span",{className:"o"},(0,l.mdx)("span",{className:"pre"},"=")),(0,l.mdx)("span",{className:"w"}," "),(0,l.mdx)("span",{className:"default_value"},(0,l.mdx)("span",{className:"pre"},"None"))),(0,l.mdx)("span",{className:"sig-paren"},")")," ",(0,l.mdx)("span",{className:"sig-return"},(0,l.mdx)("span",{className:"sig-return-icon"},"→")," ",(0,l.mdx)("span",{className:"sig-return-typehint"},(0,l.mdx)("a",{className:"reference internal",href:"#substance_painter.resource.Resource",title:"substance_painter.resource.Resource"},(0,l.mdx)("span",{className:"pre"},"Resource")))),(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.resource.Shelf.import_resource",title:"Link to this definition"},"")),(0,l.mdx)("dd",null,(0,l.mdx)("p",null,"Import a resource into this shelf."),(0,l.mdx)("dl",{className:"field-list simple"},(0,l.mdx)("dt",{className:"field-odd"},"Parameters",(0,l.mdx)("span",{className:"colon"},":")),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("ul",{className:"simple"},(0,l.mdx)("li",null,(0,l.mdx)("p",null,(0,l.mdx)("strong",null,"file_path")," (",(0,l.mdx)("em",null,"str"),") – The file path to the resource to be imported.")),(0,l.mdx)("li",null,(0,l.mdx)("p",null,(0,l.mdx)("strong",null,"resource_usage")," (",(0,l.mdx)("a",{className:"reference internal",href:"#substance_painter.resource.Usage",title:"substance_painter.resource.Usage"},(0,l.mdx)("em",null,"Usage")),") – The resource usage.")),(0,l.mdx)("li",null,(0,l.mdx)("p",null,(0,l.mdx)("strong",null,"name")," (",(0,l.mdx)("em",null,"str"),(0,l.mdx)("em",null,", "),(0,l.mdx)("em",null,"optional"),") – The name of the resource if different from the file name.")),(0,l.mdx)("li",null,(0,l.mdx)("p",null,(0,l.mdx)("strong",null,"group")," (",(0,l.mdx)("em",null,"str"),(0,l.mdx)("em",null,", "),(0,l.mdx)("em",null,"opional"),") – An optional group name, can be used in resource queries.")),(0,l.mdx)("li",null,(0,l.mdx)("p",null,(0,l.mdx)("strong",null,"uuid")," (",(0,l.mdx)("em",null,"str"),(0,l.mdx)("em",null,", "),(0,l.mdx)("em",null,"opional"),") – An optional uuid. If a resource already exists with the same uuid, it will be replaced.")))),(0,l.mdx)("dt",{className:"field-even"},"Returns",(0,l.mdx)("span",{className:"colon"},":")),(0,l.mdx)("dd",{className:"field-even"},(0,l.mdx)("p",null,"The imported resource object.")),(0,l.mdx)("dt",{className:"field-odd"},"Return type",(0,l.mdx)("span",{className:"colon"},":")),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("p",null,(0,l.mdx)("a",{className:"reference internal",href:"#substance_painter.resource.Resource",title:"substance_painter.resource.Resource"},"Resource"))),(0,l.mdx)("dt",{className:"field-even"},"Raises",(0,l.mdx)("span",{className:"colon"},":")),(0,l.mdx)("dd",{className:"field-even"},(0,l.mdx)("ul",{className:"simple"},(0,l.mdx)("li",null,(0,l.mdx)("p",null,(0,l.mdx)("strong",null,"ValueError")," – If parameters validation failed.")),(0,l.mdx)("li",null,(0,l.mdx)("p",null,(0,l.mdx)("strong",null,"RuntimeError")," – If import failed.")),(0,l.mdx)("li",null,(0,l.mdx)("p",null,(0,l.mdx)("a",{className:"reference internal",href:"exception.html#substance_painter.exception.ServiceNotFoundError",title:"substance_painter.exception.ServiceNotFoundError"},(0,l.mdx)("strong",null,"ServiceNotFoundError"))," – If Substance 3D Painter has not started all its services yet."))))))),(0,l.mdx)("h1",{id:"creating-a-python-plugin"},"Creating a Python plugin"),(0,l.mdx)("p",null,"This step by step guide describes how to create a simple Python plugin that allows to export channels of a Texture Set with a specific export preset."),(0,l.mdx)("h2",{id:"1---navigate-to-the-plugins-folder"},"1 - Navigate to the plugins folder"),(0,l.mdx)("p",null,"To add a new Python plugin, a simple script file can be created into the plugin folder of Substance 3D Painter."),(0,l.mdx)("p",null,"To access the python folder, navigate to:"),(0,l.mdx)("table",{columnWidths:"20,20,60"},(0,l.mdx)("tr",null,(0,l.mdx)("th",null,"Platform"),(0,l.mdx)("th",null,"Version"),(0,l.mdx)("th",null,"Path")),(0,l.mdx)("tr",null,(0,l.mdx)("td",null,"Windows"),(0,l.mdx)("td",null,(0,l.mdx)("strong",null,"7.2")," or newer"),(0,l.mdx)("td",null,"C:\\Users\\username\\Documents\\Adobe\\Adobe Substance 3D Painter")),(0,l.mdx)("tr",null,(0,l.mdx)("td",null),(0,l.mdx)("td",null,"Legacy"),(0,l.mdx)("td",null,"C:\\Users\\username\\Documents\\Allegorithmic\\Substance Painter")),(0,l.mdx)("tr",null,(0,l.mdx)("td",null,"Mac"),(0,l.mdx)("td",null,(0,l.mdx)("strong",null,"7.2")," or newer"),(0,l.mdx)("td",null,"/Users/username/Documents/Adobe/Adobe Substance 3D Painter")),(0,l.mdx)("tr",null,(0,l.mdx)("td",null),(0,l.mdx)("td",null,"Legacy"),(0,l.mdx)("td",null,"/Users/username/Documents/Allegorithmic/Substance Painter")),(0,l.mdx)("tr",null,(0,l.mdx)("td",null,"Linux"),(0,l.mdx)("td",null,(0,l.mdx)("strong",null,"7.2")," or newer"),(0,l.mdx)("td",null,"/home/username/Documents/Adobe/Adobe Substance 3D Painter")),(0,l.mdx)("tr",null,(0,l.mdx)("td",null),(0,l.mdx)("td",null,"Legacy"),(0,l.mdx)("td",null,"/home/username/Documents/Allegorithmic/Substance Painter"))),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Test"),(0,l.mdx)("th",{parentName:"tr",align:null},"Test2"))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null},"Value"),(0,l.mdx)("td",{parentName:"tr",align:null},"Value 2")))),(0,l.mdx)("blockquote",null,(0,l.mdx)("p",{parentName:"blockquote"},(0,l.mdx)("strong",{parentName:"p"},"Note"),': The folder "',(0,l.mdx)("strong",{parentName:"p"},"plugins"),'" is for Javascript plugins. Python plugins need to go under the "',(0,l.mdx)("strong",{parentName:"p"},"python/plugins"),'" folder.')),(0,l.mdx)("h2",{id:"2---creating-the-new-plugin-file"},"2 - Creating the new plugin file"),(0,l.mdx)("p",null,"At the root of the plugin folder, create a new text file and give it the name of ",(0,l.mdx)("strong",{parentName:"p"},"custom_export.py"),"."),(0,l.mdx)("h2",{id:"3---script-content"},"3 - Script content"),(0,l.mdx)("p",null,"Open the empty script file into a text editor and paste the following code snippet. Take a look at the code comments for more details on its behavior."),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-python"},'import os\n\n# Substance 3D Painter modules\nimport substance_painter.ui\nimport substance_painter.export\nimport substance_painter.project\nimport substance_painter.textureset\n\n# PySide module to build custom UI\nfrom PySide2 import QtWidgets\n\nplugin_widgets = []\n\n\ndef export_textures() :\n    # Verify if a project is open before trying to export something\n    if not substance_painter.project.is_open() :\n        return\n\n    # Get the currently active layer stack (paintable)\n    stack = substance_painter.textureset.get_active_stack()\n\n    # Get the parent Texture Set of this layer stack\n    material = stack.material()\n\n    # Build Export Preset resource URL\n    # - Context: name of the library where the resource is located\n    # - Name: name of the resource (filename without extension or Substance graph path)\n    export_preset = substance_painter.resource.ResourceID(\n        context="starter_assets",\n        name="PBR Metallic Roughness" )\n\n    print( "Preset:" )\n    print( export_preset.url() )\n\n    # Setup the export settings\n    resolution = material.get_resolution()\n\n    # Setup the export path, in this case the textures\n    # will be put next to the spp project file on the disk\n    Path = substance_painter.project.file_path()\n    Path = os.path.dirname(Path) + "/"\n\n    # Build the configuration\n    config = {\n        "exportShaderParams"  : False,\n        "exportPath" : Path,\n        "exportList" : [ { "rootPath" : str(stack) } ],\n        "exportPresets" : [ { "name" : "default", "maps" : [] } ],\n        "defaultExportPreset" : export_preset.url(),\n        "exportParameters" : [\n            {\n                "parameters" : { "paddingAlgorithm": "infinite" }\n            }\n        ]\n    }\n\n    substance_painter.export.export_project_textures( config )\n\n\ndef start_plugin():\n    # Create a text widget for a menu\n    Action = QtWidgets.QAction("Custom Python Export",\n            triggered=export_textures)\n\n    # Add this widget to the existing File menu of the application\n    substance_painter.ui.add_action(\n    substance_painter.ui.ApplicationMenu.File,\n    Action )\n\n    # Store the widget for proper cleanup later when stopping the plugin\n    plugin_widgets.append(Action)\n\n\ndef close_plugin():\n    # Remove all widgets that have been added to the UI\n    for widget in plugin_widgets:\n    substance_painter.ui.delete_ui_element(widget)\n\n    plugin_widgets.clear()\n\n\nif __name__ == "__main__":\n    start_plugin()\n')),(0,l.mdx)("h2",{id:"4---loading-and-enabling-the-plugin"},"4 - Loading and enabling the plugin"),(0,l.mdx)("p",null,"Launch Substance 3D Painter to make the application discover the plugin."),(0,l.mdx)("p",null,"Click on the Python menu and then click on the plugin name to enable it:"),(0,l.mdx)("p",null,(0,l.mdx)("span",{parentName:"p",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"195px"}},"\n      ",(0,l.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"62.56410256410256%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,l.mdx)("picture",{parentName:"span"},"\n          ",(0,l.mdx)("source",{parentName:"picture",srcSet:["/painter-python-api/static/3d153b3ab6998c0c54bd8c6723b6dda8/798b8/enable-python-plugin.webp 195w"],sizes:"(max-width: 195px) 100vw, 195px",type:"image/webp"}),"\n          ",(0,l.mdx)("source",{parentName:"picture",srcSet:["/painter-python-api/static/3d153b3ab6998c0c54bd8c6723b6dda8/25fa3/enable-python-plugin.png 195w"],sizes:"(max-width: 195px) 100vw, 195px",type:"image/png"}),"\n          ",(0,l.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/painter-python-api/static/3d153b3ab6998c0c54bd8c6723b6dda8/25fa3/enable-python-plugin.png",alt:"Enable plugin",title:"Enable plugin",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    ")),(0,l.mdx)("p",null,"Finally click on the File menu and select Custom Python Export to trigger the export function of the script:"),(0,l.mdx)("p",null,(0,l.mdx)("span",{parentName:"p",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"234px"}},"\n      ",(0,l.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"188.88888888888889%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,l.mdx)("picture",{parentName:"span"},"\n          ",(0,l.mdx)("source",{parentName:"picture",srcSet:["/painter-python-api/static/7933191896a8956de1591a2e5430e951/db4e9/export-textures-python.webp 234w"],sizes:"(max-width: 234px) 100vw, 234px",type:"image/webp"}),"\n          ",(0,l.mdx)("source",{parentName:"picture",srcSet:["/painter-python-api/static/7933191896a8956de1591a2e5430e951/f7db0/export-textures-python.png 234w"],sizes:"(max-width: 234px) 100vw, 234px",type:"image/png"}),"\n          ",(0,l.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/painter-python-api/static/7933191896a8956de1591a2e5430e951/f7db0/export-textures-python.png",alt:"Run plugin",title:"Run plugin",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    ")))}o.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-guides-creating-python-plugin-md-58783492845a5f759b12.js.map