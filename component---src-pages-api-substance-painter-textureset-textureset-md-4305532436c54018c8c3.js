"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[6245],{26446:function(e,t,r){r.r(t),r.d(t,{_frontmatter:function(){return m},default:function(){return p}});var n=r(87462),a=r(63366),s=(r(15007),r(64983)),i=r(91515),l=["components"],m={},u={_frontmatter:m},o=i.Z;function p(e){var t=e.components,r=(0,a.Z)(e,l);return(0,s.mdx)(o,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,s.mdx)("p",null,"TextureSet class — Substance 3D Painter Python API 0.2.11 documentation"),(0,s.mdx)("h1",{id:"textureset-class"},"TextureSet class"),(0,s.mdx)("hr",null),(0,s.mdx)("p",null,(0,s.mdx)("em",{parentName:"p"},"class")," substance_painter.textureset.TextureSet(",(0,s.mdx)("em",{parentName:"p"},"material_id: int"),")\nA Substance 3D Painter Texture Set. A Texture Set has a resolution and a\nnumber of stacks, and can be layered or not.\nIt optionally also has a number of UV Tiles."),(0,s.mdx)("p",null,"It uses a set of baked Mesh map textures. Each Mesh map has a defined MeshMapUsage."),(0,s.mdx)("p",null,"If the corresponding material is not layered, the Texture Set has just one\nstack, which is transparent to the user. If the material is layered, the\nTexture Set has several stacks."),(0,s.mdx)("p",null,"Example"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-python"},'import substance_painter.textureset\n\n# Get the Texture Set "TextureSetName":\nmy_texture_set = substance_painter.textureset.TextureSet.from_name("TextureSetName")\n\n# Show the resolution of the Texture Set:\nresolution = my_texture_set.get_resolution()\nprint("The resolution is {0}x{1}".format(resolution.width, resolution.height))\n\n# Change the resolution of the Texture Set:\nmy_texture_set.set_resolution(substance_painter.textureset.Resolution(512, 512))\n\n# Show information about layering:\nif my_texture_set.is_layered_material():\n    print("{0} is a layered material".format(my_texture_set.name()))\n\n    # Get the stack called "Mask1" from the Texture Set:\n    mask_stack = my_texture_set.get_stack("Mask1")\n\n    # Print "TextureSetName/Mask1":\n    print(mask_stack)\n\nelse:\n    print("{0} is not a layered material".format(my_texture_set.name()))\n\n# Show information about UV Tiles:\nif my_texture_set.has_uv_tiles():\n    print("{0} has UV Tiles:".format(my_texture_set.name()))\n    for tile in my_texture_set.all_uv_tiles():\n        print("Tile {0} {1}".format(tile.u, tile.v))\n\n# List all the stacks of the Texture Set "TextureSetName":\nfor stack in my_texture_set.all_stacks():\n    print(stack)\n\n# Query ambiant occlusion Mesh map of the Texture Set "TextureSetName":\nusage = substance_painter.textureset.MeshMapUsage.AO\nmeshMapResource = my_texture_set.get_mesh_map_resource(usage)\n\nif meshMapResource is None :\n    print("{0} does not have a Mesh map defined for usage {1}"\n        .format(my_texture_set.name(), usage))\nelse:\n    print("{0} uses {1} Mesh map for usage {2}"\n        .format(my_texture_set.name(), meshMapResource, usage))\n\n# Unset ambiant occlusion Mesh map of the Texture Set "TextureSetName":\nmy_texture_set.set_mesh_map_resource(usage, None)\n\n')),(0,s.mdx)("p",null,"See also"),(0,s.mdx)("p",null,(0,s.mdx)("a",{parentName:"p",href:"stack.html#substance_painter.textureset.Stack",title:"substance_painter.textureset.Stack"},(0,s.mdx)("inlineCode",{parentName:"a"},"Stack")),",\n",(0,s.mdx)("a",{parentName:"p",href:"uvtile.html#substance_painter.textureset.UVTile",title:"substance_painter.textureset.UVTile"},(0,s.mdx)("inlineCode",{parentName:"a"},"UVTile")),",\n",(0,s.mdx)("a",{parentName:"p",href:"index.html#substance_painter.textureset.MeshMapUsage",title:"substance_painter.textureset.MeshMapUsage"},(0,s.mdx)("inlineCode",{parentName:"a"},"MeshMapUsage")),",\n",(0,s.mdx)("a",{parentName:"p",href:"https://www.adobe.com/go/painter-texture-set"},"Texture Set documentation"),"."),(0,s.mdx)("p",null,(0,s.mdx)("em",{parentName:"p"},"static")," from_name(",(0,s.mdx)("em",{parentName:"p"},"texture_set_name: str"),")\nGet the Texture Set from its name."),(0,s.mdx)("p",null,"Parameters:\n",(0,s.mdx)("strong",{parentName:"p"},"texture_set_name")," (",(0,s.mdx)("em",{parentName:"p"},"str"),") – The name of the Texture Set."),(0,s.mdx)("p",null,"Note"),(0,s.mdx)("p",null,"The Texture Set name is case sensitive."),(0,s.mdx)("p",null,"Raises:"),(0,s.mdx)("ul",null,(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("a",{parentName:"li",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,s.mdx)("strong",{parentName:"a"},"ProjectError"))," – If no project is opened."),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("a",{parentName:"li",href:"../exception.html#substance_painter.exception.ServiceNotFoundError",title:"substance_painter.exception.ServiceNotFoundError"},(0,s.mdx)("strong",{parentName:"a"},"ServiceNotFoundError"))," – If Substance 3D Painter has not started all its services yet."),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("strong",{parentName:"li"},"TypeError")," – If ",(0,s.mdx)("inlineCode",{parentName:"li"},"texture_set_name")," is missing or not a string."),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("strong",{parentName:"li"},"ValueError")," – If ",(0,s.mdx)("inlineCode",{parentName:"li"},"texture_set_name")," is empty."),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("strong",{parentName:"li"},"ValueError")," – If there is no Texture Set with the name ",(0,s.mdx)("inlineCode",{parentName:"li"},"texture_set_name"),".")),(0,s.mdx)("p",null,"name() → str\nGet the Texture Set name."),(0,s.mdx)("p",null,"Returns:\nThe name of the Texture Set."),(0,s.mdx)("p",null,"Return type:\nstr"),(0,s.mdx)("p",null,"Raises:"),(0,s.mdx)("ul",null,(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("a",{parentName:"li",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,s.mdx)("strong",{parentName:"a"},"ProjectError"))," – If no project is opened."),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("a",{parentName:"li",href:"../exception.html#substance_painter.exception.ServiceNotFoundError",title:"substance_painter.exception.ServiceNotFoundError"},(0,s.mdx)("strong",{parentName:"a"},"ServiceNotFoundError"))," – If Substance 3D Painter has not started all its services yet."),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("strong",{parentName:"li"},"ValueError")," – If the Texture Set is invalid.")),(0,s.mdx)("p",null,"is_layered_material() → bool\nQuery if this Texture Set uses material layering."),(0,s.mdx)("p",null,"Returns:\n",(0,s.mdx)("inlineCode",{parentName:"p"},"True")," if the Texture Set uses material layering, ",(0,s.mdx)("inlineCode",{parentName:"p"},"False")," otherwise."),(0,s.mdx)("p",null,"Return type:\nbool"),(0,s.mdx)("p",null,"Raises:"),(0,s.mdx)("ul",null,(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("a",{parentName:"li",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,s.mdx)("strong",{parentName:"a"},"ProjectError"))," – If no project is opened."),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("a",{parentName:"li",href:"../exception.html#substance_painter.exception.ServiceNotFoundError",title:"substance_painter.exception.ServiceNotFoundError"},(0,s.mdx)("strong",{parentName:"a"},"ServiceNotFoundError"))," – If Substance 3D Painter has not started all its services yet."),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("strong",{parentName:"li"},"ValueError")," – If the Texture Set is invalid.")),(0,s.mdx)("p",null,"all_stacks() → List[",(0,s.mdx)("a",{parentName:"p",href:"stack.html#substance_painter.textureset.Stack",title:"substance_painter.textureset.Stack"},"Stack"),"]\nList all the stacks from this Texture Set."),(0,s.mdx)("p",null,"Returns:\nAll the stacks of this Texture Set."),(0,s.mdx)("p",null,"Return type:\nlist[",(0,s.mdx)("a",{parentName:"p",href:"stack.html#substance_painter.textureset.Stack",title:"substance_painter.textureset.Stack"},"Stack"),"]"),(0,s.mdx)("p",null,"Raises:"),(0,s.mdx)("ul",null,(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("a",{parentName:"li",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,s.mdx)("strong",{parentName:"a"},"ProjectError"))," – If no project is opened."),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("a",{parentName:"li",href:"../exception.html#substance_painter.exception.ServiceNotFoundError",title:"substance_painter.exception.ServiceNotFoundError"},(0,s.mdx)("strong",{parentName:"a"},"ServiceNotFoundError"))," – If Substance 3D Painter has not started all its services yet."),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("strong",{parentName:"li"},"ValueError")," – If the Texture Set is invalid.")),(0,s.mdx)("p",null,"See also"),(0,s.mdx)("p",null,(0,s.mdx)("a",{parentName:"p",href:"#substance_painter.textureset.TextureSet.get_stack",title:"substance_painter.textureset.TextureSet.get_stack"},(0,s.mdx)("inlineCode",{parentName:"a"},"TextureSet.get_stack()")),"."),(0,s.mdx)("p",null,"get_stack(",(0,s.mdx)("em",{parentName:"p"},"stack_name: str = ''"),") → ",(0,s.mdx)("a",{parentName:"p",href:"stack.html#substance_painter.textureset.Stack",title:"substance_painter.textureset.Stack"},"Stack"),"\nGet a stack of this Texture Set from its name."),(0,s.mdx)("p",null,"Parameters:\n",(0,s.mdx)("strong",{parentName:"p"},"stack_name")," (",(0,s.mdx)("em",{parentName:"p"},"str"),") – The stack name.\nLeave empty if the Texture Set does not use material layering."),(0,s.mdx)("p",null,"Note"),(0,s.mdx)("p",null,"The stack name is case sensitive."),(0,s.mdx)("p",null,"Returns:\nThe stack."),(0,s.mdx)("p",null,"Return type:\n",(0,s.mdx)("a",{parentName:"p",href:"stack.html#substance_painter.textureset.Stack",title:"substance_painter.textureset.Stack"},"Stack")),(0,s.mdx)("p",null,"Raises:"),(0,s.mdx)("ul",null,(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("a",{parentName:"li",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,s.mdx)("strong",{parentName:"a"},"ProjectError"))," – If no project is opened."),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("a",{parentName:"li",href:"../exception.html#substance_painter.exception.ServiceNotFoundError",title:"substance_painter.exception.ServiceNotFoundError"},(0,s.mdx)("strong",{parentName:"a"},"ServiceNotFoundError"))," – If Substance 3D Painter has not started all its services yet."),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("strong",{parentName:"li"},"ValueError")," – If the Texture Set is invalid.")),(0,s.mdx)("p",null,"See also"),(0,s.mdx)("p",null,(0,s.mdx)("a",{parentName:"p",href:"#substance_painter.textureset.TextureSet.all_stacks",title:"substance_painter.textureset.TextureSet.all_stacks"},(0,s.mdx)("inlineCode",{parentName:"a"},"TextureSet.all_stacks()")),"."),(0,s.mdx)("p",null,"get_resolution() → ",(0,s.mdx)("a",{parentName:"p",href:"index.html#substance_painter.textureset.Resolution",title:"substance_painter.textureset.Resolution"},"Resolution"),"\nGet the Texture Set resolution."),(0,s.mdx)("p",null,"Returns:\nThe resolution of this Texture Set in pixels."),(0,s.mdx)("p",null,"Return type:\n",(0,s.mdx)("a",{parentName:"p",href:"index.html#substance_painter.textureset.Resolution",title:"substance_painter.textureset.Resolution"},"Resolution")),(0,s.mdx)("p",null,"Raises:"),(0,s.mdx)("ul",null,(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("a",{parentName:"li",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,s.mdx)("strong",{parentName:"a"},"ProjectError"))," – If no project is opened."),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("a",{parentName:"li",href:"../exception.html#substance_painter.exception.ServiceNotFoundError",title:"substance_painter.exception.ServiceNotFoundError"},(0,s.mdx)("strong",{parentName:"a"},"ServiceNotFoundError"))," – If Substance 3D Painter has not started all its services yet."),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("strong",{parentName:"li"},"ValueError")," – If the Texture Set is invalid.")),(0,s.mdx)("p",null,"See also"),(0,s.mdx)("p",null,(0,s.mdx)("a",{parentName:"p",href:"#substance_painter.textureset.TextureSet.set_resolution",title:"substance_painter.textureset.TextureSet.set_resolution"},(0,s.mdx)("inlineCode",{parentName:"a"},"TextureSet.set_resolution()")),",\n",(0,s.mdx)("a",{parentName:"p",href:"index.html#substance_painter.textureset.set_resolutions",title:"substance_painter.textureset.set_resolutions"},(0,s.mdx)("inlineCode",{parentName:"a"},"set_resolutions()")),"."),(0,s.mdx)("p",null,"set_resolution(",(0,s.mdx)("em",{parentName:"p"},"new_resolution: ",(0,s.mdx)("a",{parentName:"em",href:"index.html#substance_painter.textureset.Resolution",title:"substance_painter.textureset.Resolution"},"Resolution")),")\nSet the resolution of the Texture Set."),(0,s.mdx)("p",null,"See resolution restrictions: ",(0,s.mdx)("a",{parentName:"p",href:"index.html#substance_painter.textureset.Resolution",title:"substance_painter.textureset.Resolution"},(0,s.mdx)("inlineCode",{parentName:"a"},"Resolution")),"."),(0,s.mdx)("p",null,"Note"),(0,s.mdx)("p",null,"For any Texture Set, you can find its accepted resolutions in the\n“Texture Set Settings” window, in the “Size” menu."),(0,s.mdx)("p",null,"Parameters:\n",(0,s.mdx)("strong",{parentName:"p"},"new_resolution")," (",(0,s.mdx)("a",{parentName:"p",href:"index.html#substance_painter.textureset.Resolution",title:"substance_painter.textureset.Resolution"},(0,s.mdx)("em",{parentName:"a"},"Resolution")),") – The new resolution for this Texture Set."),(0,s.mdx)("p",null,"Raises:"),(0,s.mdx)("ul",null,(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("a",{parentName:"li",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,s.mdx)("strong",{parentName:"a"},"ProjectError"))," – If no project is opened."),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("a",{parentName:"li",href:"../exception.html#substance_painter.exception.ServiceNotFoundError",title:"substance_painter.exception.ServiceNotFoundError"},(0,s.mdx)("strong",{parentName:"a"},"ServiceNotFoundError"))," – If Substance 3D Painter has not started all its services yet."),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("strong",{parentName:"li"},"ValueError")," – If ",(0,s.mdx)("inlineCode",{parentName:"li"},"new_resolution")," is not a valid resolution."),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("strong",{parentName:"li"},"ValueError")," – If the Texture Set is invalid.")),(0,s.mdx)("p",null,"See also"),(0,s.mdx)("p",null,(0,s.mdx)("a",{parentName:"p",href:"#substance_painter.textureset.TextureSet.get_resolution",title:"substance_painter.textureset.TextureSet.get_resolution"},(0,s.mdx)("inlineCode",{parentName:"a"},"TextureSet.get_resolution()")),",\n",(0,s.mdx)("a",{parentName:"p",href:"index.html#substance_painter.textureset.set_resolutions",title:"substance_painter.textureset.set_resolutions"},(0,s.mdx)("inlineCode",{parentName:"a"},"set_resolutions()")),"."),(0,s.mdx)("p",null,"has_uv_tiles() → bool\nCheck if the Texture Set uses the UV Tiles workflow."),(0,s.mdx)("p",null,"Returns:\n",(0,s.mdx)("inlineCode",{parentName:"p"},"True")," if the Texture Set uses the UV Tiles workflow, ",(0,s.mdx)("inlineCode",{parentName:"p"},"False")," otherwise."),(0,s.mdx)("p",null,"Return type:\nbool"),(0,s.mdx)("p",null,"Raises:\n",(0,s.mdx)("a",{parentName:"p",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,s.mdx)("strong",{parentName:"a"},"ProjectError"))," – If no project is opened."),(0,s.mdx)("p",null,"See also"),(0,s.mdx)("p",null,(0,s.mdx)("a",{parentName:"p",href:"#substance_painter.textureset.TextureSet.all_uv_tiles",title:"substance_painter.textureset.TextureSet.all_uv_tiles"},(0,s.mdx)("inlineCode",{parentName:"a"},"all_uv_tiles()"))),(0,s.mdx)("p",null,"uv_tile(",(0,s.mdx)("em",{parentName:"p"},"u_coord: int"),", ",(0,s.mdx)("em",{parentName:"p"},"v_coord: int"),") → ",(0,s.mdx)("a",{parentName:"p",href:"uvtile.html#substance_painter.textureset.UVTile",title:"substance_painter.textureset.UVTile"},"UVTile"),"\nGet the Texture Set UV Tile at (u, v) coordinates."),(0,s.mdx)("p",null,"Parameters:"),(0,s.mdx)("ul",null,(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("strong",{parentName:"li"},"u_coord")," (",(0,s.mdx)("em",{parentName:"li"},"int"),") – The u coordinate of the UV Tile."),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("strong",{parentName:"li"},"v_coord")," (",(0,s.mdx)("em",{parentName:"li"},"int"),") – The v coordinate of the UV Tile.")),(0,s.mdx)("p",null,"Returns:\nThe Texture Set UV Tile at (u, v) coordinate."),(0,s.mdx)("p",null,"Return type:\n",(0,s.mdx)("a",{parentName:"p",href:"uvtile.html#substance_painter.textureset.UVTile",title:"substance_painter.textureset.UVTile"},"UVTile")),(0,s.mdx)("p",null,"Raises:\n",(0,s.mdx)("a",{parentName:"p",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,s.mdx)("strong",{parentName:"a"},"ProjectError"))," – If no project is opened."),(0,s.mdx)("p",null,"all_uv_tiles() → List[",(0,s.mdx)("a",{parentName:"p",href:"uvtile.html#substance_painter.textureset.UVTile",title:"substance_painter.textureset.UVTile"},"UVTile"),"]\nGet the list of the Texture Set UV Tiles, ordered by U then V coordinates."),(0,s.mdx)("p",null,"Returns:\nList of the Texture Set UV Tiles, ordered by U then V coordinates."),(0,s.mdx)("p",null,"Return type:\n",(0,s.mdx)("em",{parentName:"p"},"List"),"[",(0,s.mdx)("a",{parentName:"p",href:"uvtile.html#substance_painter.textureset.UVTile",title:"substance_painter.textureset.UVTile"},"UVTile"),"]"),(0,s.mdx)("p",null,"Raises:\n",(0,s.mdx)("a",{parentName:"p",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,s.mdx)("strong",{parentName:"a"},"ProjectError"))," – If no project is opened."),(0,s.mdx)("p",null,"See also"),(0,s.mdx)("p",null,(0,s.mdx)("a",{parentName:"p",href:"#substance_painter.textureset.TextureSet.has_uv_tiles",title:"substance_painter.textureset.TextureSet.has_uv_tiles"},(0,s.mdx)("inlineCode",{parentName:"a"},"has_uv_tiles()"))),(0,s.mdx)("p",null,"get_uvtiles_resolution() → Dict[",(0,s.mdx)("a",{parentName:"p",href:"uvtile.html#substance_painter.textureset.UVTile",title:"substance_painter.textureset.UVTile"},"UVTile"),", ",(0,s.mdx)("a",{parentName:"p",href:"index.html#substance_painter.textureset.Resolution",title:"substance_painter.textureset.Resolution"},"Resolution"),"]\nGet all UV Tiles that have a different resolution from the Texture Set, associated\nto their effective resolution."),(0,s.mdx)("p",null,"Returns:\nThe dictionary of uvtiles and their associated resolution."),(0,s.mdx)("p",null,"Return type:\n",(0,s.mdx)("em",{parentName:"p"},"Dict"),"[",(0,s.mdx)("a",{parentName:"p",href:"uvtile.html#substance_painter.textureset.UVTile",title:"substance_painter.textureset.UVTile"},"UVTile"),", ",(0,s.mdx)("a",{parentName:"p",href:"index.html#substance_painter.textureset.Resolution",title:"substance_painter.textureset.Resolution"},"Resolution"),"]"),(0,s.mdx)("p",null,"Raises:\n",(0,s.mdx)("a",{parentName:"p",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,s.mdx)("strong",{parentName:"a"},"ProjectError"))," – If no project is opened."),(0,s.mdx)("p",null,"See also"),(0,s.mdx)("p",null,(0,s.mdx)("a",{parentName:"p",href:"uvtile.html#substance_painter.textureset.UVTile.get_resolution",title:"substance_painter.textureset.UVTile.get_resolution"},(0,s.mdx)("inlineCode",{parentName:"a"},"UVTile.get_resolution()"))),(0,s.mdx)("p",null,"set_uvtiles_resolution(",(0,s.mdx)("em",{parentName:"p"},"resolutions: Dict[",(0,s.mdx)("a",{parentName:"em",href:"uvtile.html#substance_painter.textureset.UVTile",title:"substance_painter.textureset.UVTile"},"UVTile"),", ",(0,s.mdx)("a",{parentName:"em",href:"index.html#substance_painter.textureset.Resolution",title:"substance_painter.textureset.Resolution"},"Resolution"),"]"),")\nSet the resolution of the given UV Tiles to the associated resolution."),(0,s.mdx)("p",null,"Parameters:\n",(0,s.mdx)("strong",{parentName:"p"},"resolutions")," (",(0,s.mdx)("em",{parentName:"p"},"Dict**["),(0,s.mdx)("a",{parentName:"p",href:"uvtile.html#substance_painter.textureset.UVTile",title:"substance_painter.textureset.UVTile"},(0,s.mdx)("em",{parentName:"a"},"UVTile")),(0,s.mdx)("em",{parentName:"p"},",")," ",(0,s.mdx)("a",{parentName:"p",href:"index.html#substance_painter.textureset.Resolution",title:"substance_painter.textureset.Resolution"},(0,s.mdx)("em",{parentName:"a"},"Resolution")),(0,s.mdx)("em",{parentName:"p"},"]"),") – The dictionary of UV Tiles\nand their associated resolution."),(0,s.mdx)("p",null,"Raises:\n",(0,s.mdx)("a",{parentName:"p",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,s.mdx)("strong",{parentName:"a"},"ProjectError"))," – If no project is opened."),(0,s.mdx)("p",null,"See also"),(0,s.mdx)("p",null,(0,s.mdx)("a",{parentName:"p",href:"uvtile.html#substance_painter.textureset.UVTile.set_resolution",title:"substance_painter.textureset.UVTile.set_resolution"},(0,s.mdx)("inlineCode",{parentName:"a"},"UVTile.set_resolution()"))),(0,s.mdx)("p",null,"reset_uvtiles_resolution(",(0,s.mdx)("em",{parentName:"p"},"uvtiles: List[",(0,s.mdx)("a",{parentName:"em",href:"uvtile.html#substance_painter.textureset.UVTile",title:"substance_painter.textureset.UVTile"},"UVTile"),"]"),")\nReset the resolution of the given UV Tiles to the parent Texture Set’s resolution."),(0,s.mdx)("p",null,"Parameters:\n",(0,s.mdx)("strong",{parentName:"p"},"uvtiles")," (",(0,s.mdx)("em",{parentName:"p"},"List**["),(0,s.mdx)("a",{parentName:"p",href:"uvtile.html#substance_painter.textureset.UVTile",title:"substance_painter.textureset.UVTile"},(0,s.mdx)("em",{parentName:"a"},"UVTile")),(0,s.mdx)("em",{parentName:"p"},"]"),") – The list of UV Tiles to be reset."),(0,s.mdx)("p",null,"Raises:\n",(0,s.mdx)("a",{parentName:"p",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,s.mdx)("strong",{parentName:"a"},"ProjectError"))," – If no project is opened."),(0,s.mdx)("p",null,"See also"),(0,s.mdx)("p",null,(0,s.mdx)("a",{parentName:"p",href:"uvtile.html#substance_painter.textureset.UVTile.reset_resolution",title:"substance_painter.textureset.UVTile.reset_resolution"},(0,s.mdx)("inlineCode",{parentName:"a"},"UVTile.reset_resolution()"))),(0,s.mdx)("p",null,"all_mesh_names() → List","[str]","\nGet the list of meshes of the Texture Set.\nWhen using UV Tiles, the result is the union of the mesh names of every UV Tiles."),(0,s.mdx)("p",null,"Raises:"),(0,s.mdx)("ul",null,(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("a",{parentName:"li",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,s.mdx)("strong",{parentName:"a"},"ProjectError"))," – If no project is opened."),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("a",{parentName:"li",href:"../exception.html#substance_painter.exception.ServiceNotFoundError",title:"substance_painter.exception.ServiceNotFoundError"},(0,s.mdx)("strong",{parentName:"a"},"ServiceNotFoundError"))," – If Substance Painter has not started all its services yet.")),(0,s.mdx)("p",null,"See also"),(0,s.mdx)("p",null,(0,s.mdx)("a",{parentName:"p",href:"uvtile.html#substance_painter.textureset.UVTile.all_mesh_names",title:"substance_painter.textureset.UVTile.all_mesh_names"},(0,s.mdx)("inlineCode",{parentName:"a"},"UVTile.all_mesh_names()"))),(0,s.mdx)("p",null,"get_mesh_map_resource(",(0,s.mdx)("em",{parentName:"p"},"usage: ",(0,s.mdx)("a",{parentName:"em",href:"index.html#substance_painter.textureset.MeshMapUsage",title:"substance_painter.textureset.MeshMapUsage"},"MeshMapUsage")),") → ",(0,s.mdx)("a",{parentName:"p",href:"../resource.html#substance_painter.resource.ResourceID",title:"substance_painter.resource.ResourceID"},"ResourceID")," | None\nQuery the Mesh map for the given usage of the Texture Set."),(0,s.mdx)("p",null,"Parameters:\n",(0,s.mdx)("strong",{parentName:"p"},"usage")," (",(0,s.mdx)("a",{parentName:"p",href:"index.html#substance_painter.textureset.MeshMapUsage",title:"substance_painter.textureset.MeshMapUsage"},(0,s.mdx)("em",{parentName:"a"},"MeshMapUsage")),") – Which Mesh map usage is queried."),(0,s.mdx)("p",null,"Returns:\nThe Mesh map resource or None."),(0,s.mdx)("p",null,"Return type:\n",(0,s.mdx)("a",{parentName:"p",href:"../resource.html#substance_painter.resource.ResourceID",title:"substance_painter.resource.ResourceID"},"ResourceID")),(0,s.mdx)("p",null,"set_mesh_map_resource(",(0,s.mdx)("em",{parentName:"p"},"usage: ",(0,s.mdx)("a",{parentName:"em",href:"index.html#substance_painter.textureset.MeshMapUsage",title:"substance_painter.textureset.MeshMapUsage"},"MeshMapUsage")),", ",(0,s.mdx)("em",{parentName:"p"},"new_mesh_map: ",(0,s.mdx)("a",{parentName:"em",href:"../resource.html#substance_painter.resource.ResourceID",title:"substance_painter.resource.ResourceID"},"ResourceID")," | None"),") → None\nReplace the Mesh map for the given usage of the Texture Set."),(0,s.mdx)("p",null,"Parameters:"),(0,s.mdx)("ul",null,(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("strong",{parentName:"li"},"usage")," (",(0,s.mdx)("a",{parentName:"li",href:"index.html#substance_painter.textureset.MeshMapUsage",title:"substance_painter.textureset.MeshMapUsage"},(0,s.mdx)("em",{parentName:"a"},"MeshMapUsage")),") – Which Mesh map usage to replace."),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("strong",{parentName:"li"},"new_mesh_map")," (",(0,s.mdx)("a",{parentName:"li",href:"../resource.html#substance_painter.resource.ResourceID",title:"substance_painter.resource.ResourceID"},(0,s.mdx)("em",{parentName:"a"},"ResourceID")),(0,s.mdx)("em",{parentName:"li"},",")," ",(0,s.mdx)("em",{parentName:"li"},"optional"),") – The new Mesh map or None to unset.")),(0,s.mdx)("p",null,"Raises:"),(0,s.mdx)("ul",null,(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("a",{parentName:"li",href:"../exception.html#substance_painter.exception.ResourceNotFoundError",title:"substance_painter.exception.ResourceNotFoundError"},(0,s.mdx)("strong",{parentName:"a"},"ResourceNotFoundError"))," – If the resource ",(0,s.mdx)("inlineCode",{parentName:"li"},"new_mesh_map")," is not found or is not of type\nIMAGE."),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("strong",{parentName:"li"},"ValueError")," – If the resource is already used for another Mesh map usage for the\nTexture Set.")))}p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-api-substance-painter-textureset-textureset-md-4305532436c54018c8c3.js.map