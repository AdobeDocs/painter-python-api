"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[2840],{15008:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return a},default:function(){return s}});var l=n(87462),r=n(63366),p=(n(15007),n(64983)),o=n(91515),u=["components"],a={},m={_frontmatter:a},d=o.Z;function s(e){var t=e.components,n=(0,r.Z)(e,u);return(0,p.mdx)(d,(0,l.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,p.mdx)("p",null,"properties module — Substance 3D Painter Python API 0.2.11 documentation"),(0,p.mdx)("h1",{id:"properties-module"},"properties module"),(0,p.mdx)("p",null,"The ",(0,p.mdx)("inlineCode",{parentName:"p"},"properties")," module introduces the description of dynamic attributes."),(0,p.mdx)("hr",null),(0,p.mdx)("p",null,(0,p.mdx)("em",{parentName:"p"},"class")," substance_painter.properties.Property(",(0,p.mdx)("em",{parentName:"p"},"handle: _substance_painter.data_tweak.PythonTweak"),")\nRead only access to a property data."),(0,p.mdx)("p",null,"value() → bool | int | Tuple","[int, int]"," | Tuple","[int, int, int]"," | Tuple","[int, int, int, int]"," | float | Tuple","[float, float]"," | Tuple","[float, float, float]"," | Tuple","[float, float, float, float]"," | str\nGet the current porperty value."),(0,p.mdx)("p",null,"Returns:\nthe current value."),(0,p.mdx)("p",null,"Return type:\nPropertyValue"),(0,p.mdx)("p",null,"name() → str\nGet the porperty name."),(0,p.mdx)("p",null,"Returns:\nThe property name."),(0,p.mdx)("p",null,"Return type:\nstr"),(0,p.mdx)("p",null,"short_name() → str\nGet the shortened property name."),(0,p.mdx)("p",null,"Returns:\nThe property short name."),(0,p.mdx)("p",null,"Return type:\nstr"),(0,p.mdx)("p",null,"label() → str\nGet the property label."),(0,p.mdx)("p",null,"Returns:\nThe property label."),(0,p.mdx)("p",null,"Return type:\nstr"),(0,p.mdx)("p",null,"widget_type() → str\nGet the widget type that should be used to edit the property."),(0,p.mdx)("p",null,"Returns:\nOne of: ‘Slider’, ‘Angle’, ‘Color’, ‘Togglebutton’,\n‘Combobox’, ‘RandomSeed’, ‘File’, ‘FileList’, ‘LineEdit’,\n‘Resource’, ‘TextEdit’."),(0,p.mdx)("p",null,"Return type:\nstr"),(0,p.mdx)("p",null,"enum_values() → Dict","[str, int]","\nThe possible enum values with corresponding text for ‘Combobox’\nwidget type."),(0,p.mdx)("p",null,"Returns:\nEnum label to enum value dictionary."),(0,p.mdx)("p",null,"Return type:\n",(0,p.mdx)("em",{parentName:"p"},"Dict"),"[str, int]"),(0,p.mdx)("p",null,"enum_value(",(0,p.mdx)("em",{parentName:"p"},"enum_label: str"),") → int\nGet the enum value for the given enum label for ‘Combobox’\nwidget type."),(0,p.mdx)("p",null,"Parameters:\n",(0,p.mdx)("strong",{parentName:"p"},"enum_label")," (",(0,p.mdx)("em",{parentName:"p"},"str"),") – A valid enum label."),(0,p.mdx)("p",null,"Returns:\nThe enum value for the corresponding label."),(0,p.mdx)("p",null,"Return type:\n",(0,p.mdx)("em",{parentName:"p"},"Dict"),"[str, int]"),(0,p.mdx)("p",null,"properties() → Dict","[str, Any]","\nGet a json object that describes all available meta properties of this\nproperty. For example: value range, editor step, possible values, tooltip, etc."),(0,p.mdx)("p",null,"Returns:\nA json object."),(0,p.mdx)("p",null,"Return type:\n",(0,p.mdx)("em",{parentName:"p"},"Dict"),"[str, ",(0,p.mdx)("em",{parentName:"p"},"Any"),"]"))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-api-substance-painter-properties-md-04a35e96af6509c64687.js.map