"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[5390],{53209:function(e,t,a){a.r(t),a.d(t,{_frontmatter:function(){return c},default:function(){return x}});var s=a(87462),n=a(63366),l=(a(15007),a(64983)),r=a(91515),m=["components"],c={},d={_frontmatter:c},i=r.Z;function x(e){var t=e.components,a=(0,n.Z)(e,m);return(0,l.mdx)(i,(0,s.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,l.mdx)("h1",null,"Stack class",(0,l.mdx)("a",{className:"headerlink",href:"#stack-class",title:"Link to this heading"}," ")),(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.textureset.Stack"},(0,l.mdx)("em",{className:"property"},"class "),"substance_painter.textureset.Stack(",(0,l.mdx)("em",{className:"sig-param"},"stack_id: int | None = None"),")",(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.textureset.Stack",title:"Link to this definition"}," ")),(0,l.mdx)("p",{className:!0},"A ",(0,l.mdx)("cite",null,"Substance 3D Painter")," paintable stack."),(0,l.mdx)("p",{className:!0},"A stack can contain a number of channels (BaseColor, Specular, Roughness, etc.), that correspond to the material. The stack belongs to a Texture Set, which may contain one or more stacks."),(0,l.mdx)("p",{className:!0},"Typically, only one stack is used and that stack is transparent to the user. Selecting the Texture Set will select its stack. However, a Texture Set can use layered materials with custom shaders, in which case a specific stack needs to be selected."),(0,l.mdx)("p",{className:!0},"If the Texture Set doesn’t use material layering, you can retrieve its stack as follows:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-python"},'import substance_painter.textureset\n\n# Get the unnamed stack of "TextureSetName":\npaintable_stack = substance_painter.textureset.Stack.from_name("TextureSetName")\n\n# Alternatively, get the stack from a Texture Set instance:\nmy_texture_set = substance_painter.textureset.TextureSet.from_name("TextureSetName")\npaintable_stack = my_texture_set.get_stack()\n')),(0,l.mdx)("p",{className:!0},"If the Texture Set ",(0,l.mdx)("cite",null,"does")," use material layering, you can retrieve its stacks as follows:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-python"},'import substance_painter.textureset\n\n# Get the stack called "Mask1" from the Texture Set "TextureSetName":\npaintable_stack = substance_painter.textureset.Stack.from_name("TextureSetName",\n                                                               "Mask1")\n\n# Alternatively, get the stack from a Texture Set instance:\nmy_texture_set = substance_painter.textureset.TextureSet.from_name("TextureSetName")\npaintable_stack = my_texture_set.get_stack("Mask1")\n\n# Show the name of the stack:\nprint(paintable_stack.name())\n')),(0,l.mdx)("p",{className:!0},"It is possible to query, add, remove or edit the channels of a stack:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-python"},'import substance_painter.textureset\n\n# Get the unnamed stack of "TextureSetName":\npaintable_stack = substance_painter.textureset.Stack.from_name("TextureSetName")\n\n# List all the channels of the "TextureSetName" Texture Set:\nfor k,v in paintable_stack.all_channels().items():\n    print("{0}: {1}".format(k, str(v.format())))\n\n# Add a scattering channel to the "TextureSetName" Texture Set:\npaintable_stack.add_channel(substance_painter.textureset.ChannelType.Scattering,\n                            substance_painter.textureset.ChannelFormat.L8)\n\n# Query details of the added scattering channel:\nif paintable_stack.has_channel(substance_painter.textureset.ChannelType.Scattering):\n    channel = paintable_stack.get_channel(\n        substance_painter.textureset.ChannelType.Scattering)\n    print("The Texture Set now has a scattering channel with {0} bits per pixel."\n        .format(channel.bit_depth()))\n\n# Change the scattering channel to 16 bits inside the "TextureSetName" Texture Set:\npaintable_stack.edit_channel(\n    channel_type = substance_painter.textureset.ChannelType.Scattering,\n    channel_format = substance_painter.textureset.ChannelFormat.L16)\n\n# Remove the scattering channel from "TextureSetName":\npaintable_stack.remove_channel(substance_painter.textureset.ChannelType.Scattering)\n')),(0,l.mdx)("div",{className:"admonition seealso"},(0,l.mdx)("p",{className:!0},"See also"),(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},(0,l.mdx)("code",{className:"xref py py-class docutils literal notranslate"},"TextureSet")),",",(0,l.mdx)("a",{className:"reference external",href:"https://www.adobe.com/go/painter-texture-set"},"Texture Set documentation"),".")),(0,l.mdx)("dl",{className:"py method"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.textureset.Stack.from_name"},(0,l.mdx)("em",{className:"property"},"static "),"from_name(",(0,l.mdx)("em",{className:"sig-param"},"texture_set_name: str"),", ",(0,l.mdx)("em",{className:"sig-param"},"stack_name: str = ''"),")",(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.textureset.Stack.from_name",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Get a stack from its name."),(0,l.mdx)("dl",{className:"field-list simple"},(0,l.mdx)("dt",{className:"field-odd"},"Parameters:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("ul",{className:"simple"},(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"texture_set_name")," (",(0,l.mdx)("em",null,"str"),") – Texture Set name.")),(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"stack_name")," (",(0,l.mdx)("em",null,"str"),") – Stack name. Leave empty if the Texture Set does not use material layering."))))),(0,l.mdx)("div",{className:"admonition note"},(0,l.mdx)("p",{className:!0},"Note"),(0,l.mdx)("p",{className:!0},"The Texture Set and stack names are case sensitive.")),(0,l.mdx)("dl",{className:"field-list simple"},(0,l.mdx)("dt",{className:"field-odd"},"Raises:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("ul",{className:"simple"},(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,l.mdx)("strong",null,"ProjectError"))," – If no project is opened.")),(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ServiceNotFoundError",title:"substance_painter.exception.ServiceNotFoundError"},(0,l.mdx)("strong",null,"ServiceNotFoundError"))," – If Substance 3D Painter has not started all its services yet.")),(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"ValueError")," – If ",(0,l.mdx)("code",{className:"docutils literal notranslate"},"texture_set_name")," is not string.")),(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"ValueError")," – If there is no Texture Set with the name ",(0,l.mdx)("code",{className:"docutils literal notranslate"},"texture_set_name"),".")),(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"ValueError")," – If there is no stack with the name ",(0,l.mdx)("code",{className:"docutils literal notranslate"},"stack_name"),"."))))),(0,l.mdx)("div",{className:"admonition seealso"},(0,l.mdx)("p",{className:!0},"See also"),(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"textureset.html#substance_painter.textureset.TextureSet.all_stacks",title:"substance_painter.textureset.TextureSet.all_stacks"},(0,l.mdx)("code",{className:"xref py py-meth docutils literal notranslate"},"TextureSet.all_stacks()")),",",(0,l.mdx)("a",{className:"reference internal",href:"textureset.html#substance_painter.textureset.TextureSet.get_stack",title:"substance_painter.textureset.TextureSet.get_stack"},(0,l.mdx)("code",{className:"xref py py-meth docutils literal notranslate"},"TextureSet.get_stack()")),".")))),(0,l.mdx)("dl",{className:"py method"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.textureset.Stack.name"},"name() → str",(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.textureset.Stack.name",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Get the stack name. A stack name is empty if the Texture Set it belongs to uses material layering."),(0,l.mdx)("dl",{className:"field-list simple"},(0,l.mdx)("dt",{className:"field-odd"},"Returns:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("p",{className:!0},"The stack name.")),(0,l.mdx)("dt",{className:"field-even"},"Return type:"),(0,l.mdx)("dd",{className:"field-even"},(0,l.mdx)("p",{className:!0},"str")),(0,l.mdx)("dt",{className:"field-odd"},"Raises:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("ul",{className:"simple"},(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,l.mdx)("strong",null,"ProjectError"))," – If no project is opened.")),(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ServiceNotFoundError",title:"substance_painter.exception.ServiceNotFoundError"},(0,l.mdx)("strong",null,"ServiceNotFoundError"))," – If Substance 3D Painter has not started all its services yet.")),(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"ValueError")," – If the stack is invalid."))))))),(0,l.mdx)("dl",{className:"py method"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.textureset.Stack.material"},"material()",(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.textureset.Stack.material",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Get the Texture Set this stack belongs to."),(0,l.mdx)("dl",{className:"field-list simple"},(0,l.mdx)("dt",{className:"field-odd"},"Returns:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("p",{className:!0},"The Texture Set this stack belongs to.")),(0,l.mdx)("dt",{className:"field-even"},"Return type:"),(0,l.mdx)("dd",{className:"field-even"},(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},"TextureSet"))),(0,l.mdx)("dt",{className:"field-odd"},"Raises:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("ul",{className:"simple"},(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,l.mdx)("strong",null,"ProjectError"))," – If no project is opened.")),(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ServiceNotFoundError",title:"substance_painter.exception.ServiceNotFoundError"},(0,l.mdx)("strong",null,"ServiceNotFoundError"))," – If Substance 3D Painter has not started all its services yet.")),(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"ValueError")," – If the stack is invalid."))))),(0,l.mdx)("div",{className:"admonition seealso"},(0,l.mdx)("p",{className:!0},"See also"),(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},(0,l.mdx)("code",{className:"xref py py-class docutils literal notranslate"},"TextureSet")),",",(0,l.mdx)("a",{className:"reference internal",href:"index.html#substance_painter.textureset.all_texture_sets",title:"substance_painter.textureset.all_texture_sets"},(0,l.mdx)("code",{className:"xref py py-func docutils literal notranslate"},"all_texture_sets()")),".")))),(0,l.mdx)("dl",{className:"py method"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.textureset.Stack.all_channels"},"all_channels() → Dict[",(0,l.mdx)("a",{className:"reference internal",href:"index.html#substance_painter.textureset.ChannelType",title:"substance_painter.textureset.ChannelType"},"ChannelType"),", ",(0,l.mdx)("a",{className:"reference internal",href:"channel.html#substance_painter.textureset.Channel",title:"substance_painter.textureset.Channel"},"Channel"),"]",(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.textureset.Stack.all_channels",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"List all the channels of a stack."),(0,l.mdx)("dl",{className:"field-list simple"},(0,l.mdx)("dt",{className:"field-odd"},"Returns:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("p",{className:!0},"Map of all the channels of the stack.")),(0,l.mdx)("dt",{className:"field-even"},"Return type:"),(0,l.mdx)("dd",{className:"field-even"},(0,l.mdx)("p",{className:!0},"dict[",(0,l.mdx)("a",{className:"reference internal",href:"index.html#substance_painter.textureset.ChannelType",title:"substance_painter.textureset.ChannelType"},"ChannelType"),", ",(0,l.mdx)("a",{className:"reference internal",href:"channel.html#substance_painter.textureset.Channel",title:"substance_painter.textureset.Channel"},"Channel"),"]")),(0,l.mdx)("dt",{className:"field-odd"},"Raises:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("ul",{className:"simple"},(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,l.mdx)("strong",null,"ProjectError"))," – If no project is opened.")),(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ServiceNotFoundError",title:"substance_painter.exception.ServiceNotFoundError"},(0,l.mdx)("strong",null,"ServiceNotFoundError"))," – If Substance 3D Painter has not started all its services yet."))))),(0,l.mdx)("div",{className:"admonition seealso"},(0,l.mdx)("p",{className:!0},"See also"),(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"#substance_painter.textureset.Stack.add_channel",title:"substance_painter.textureset.Stack.add_channel"},(0,l.mdx)("code",{className:"xref py py-meth docutils literal notranslate"},"Stack.add_channel()")),",",(0,l.mdx)("a",{className:"reference internal",href:"#substance_painter.textureset.Stack.remove_channel",title:"substance_painter.textureset.Stack.remove_channel"},(0,l.mdx)("code",{className:"xref py py-meth docutils literal notranslate"},"Stack.remove_channel()")),".")))),(0,l.mdx)("dl",{className:"py method"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.textureset.Stack.add_channel"},"add_channel(",(0,l.mdx)("em",{className:"sig-param"},"channel_type: ",(0,l.mdx)("a",{className:"reference internal",href:"index.html#substance_painter.textureset.ChannelType",title:"substance_painter.textureset.ChannelType"},"ChannelType")),", ",(0,l.mdx)("em",{className:"sig-param"},"channel_format: ",(0,l.mdx)("a",{className:"reference internal",href:"index.html#substance_painter.textureset.ChannelFormat",title:"substance_painter.textureset.ChannelFormat"},"ChannelFormat")),", ",(0,l.mdx)("em",{className:"sig-param"},"label: str | None = None"),") → ",(0,l.mdx)("a",{className:"reference internal",href:"channel.html#substance_painter.textureset.Channel",title:"substance_painter.textureset.Channel"},"Channel"),(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.textureset.Stack.add_channel",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Add a new channel to a stack."),(0,l.mdx)("div",{className:"admonition note"},(0,l.mdx)("p",{className:!0},"Note"),(0,l.mdx)("p",{className:!0},(0,l.mdx)("cite",null,"add_channel")," is not available with material layering.")),(0,l.mdx)("dl",{className:"field-list simple"},(0,l.mdx)("dt",{className:"field-odd"},"Parameters:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("ul",{className:"simple"},(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"channel_type")," (",(0,l.mdx)("a",{className:"reference internal",href:"index.html#substance_painter.textureset.ChannelType",title:"substance_painter.textureset.ChannelType"},(0,l.mdx)("em",null,"ChannelType")),") – The channel type.")),(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"channel_format")," (",(0,l.mdx)("a",{className:"reference internal",href:"index.html#substance_painter.textureset.ChannelFormat",title:"substance_painter.textureset.ChannelFormat"},(0,l.mdx)("em",null,"ChannelFormat")),") – The texture format of the new channel.")),(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"label")," (",(0,l.mdx)("em",null,"str"),(0,l.mdx)("em",null,", "),(0,l.mdx)("em",null,"optional"),") – The label of the channel in case of User channel as type.")))),(0,l.mdx)("dt",{className:"field-even"},"Returns:"),(0,l.mdx)("dd",{className:"field-even"},(0,l.mdx)("p",{className:!0},"The created channel.")),(0,l.mdx)("dt",{className:"field-odd"},"Return type:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"channel.html#substance_painter.textureset.Channel",title:"substance_painter.textureset.Channel"},"Channel"))),(0,l.mdx)("dt",{className:"field-even"},"Raises:"),(0,l.mdx)("dd",{className:"field-even"},(0,l.mdx)("ul",{className:"simple"},(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,l.mdx)("strong",null,"ProjectError"))," – If no project is opened.")),(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"ValueError")," – If a channel of type ",(0,l.mdx)("code",{className:"docutils literal notranslate"},"channel_type")," already exists in this Texture Set.")),(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"ValueError")," – If a label was provided but ",(0,l.mdx)("code",{className:"docutils literal notranslate"},"channel_type")," is not a user type. Standard channel types have fixed labels.")),(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"ValueError")," – If the stack is invalid.")),(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"ValueError")," – If the Texture Set uses material layering."))))),(0,l.mdx)("div",{className:"admonition seealso"},(0,l.mdx)("p",{className:!0},"See also"),(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"#substance_painter.textureset.Stack.all_channels",title:"substance_painter.textureset.Stack.all_channels"},(0,l.mdx)("code",{className:"xref py py-meth docutils literal notranslate"},"Stack.all_channels()")),",",(0,l.mdx)("a",{className:"reference internal",href:"#substance_painter.textureset.Stack.remove_channel",title:"substance_painter.textureset.Stack.remove_channel"},(0,l.mdx)("code",{className:"xref py py-meth docutils literal notranslate"},"Stack.remove_channel()")),",",(0,l.mdx)("a",{className:"reference internal",href:"#substance_painter.textureset.Stack.edit_channel",title:"substance_painter.textureset.Stack.edit_channel"},(0,l.mdx)("code",{className:"xref py py-meth docutils literal notranslate"},"Stack.edit_channel()")),".")))),(0,l.mdx)("dl",{className:"py method"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.textureset.Stack.remove_channel"},"remove_channel(",(0,l.mdx)("em",{className:"sig-param"},"channel_type: ",(0,l.mdx)("a",{className:"reference internal",href:"index.html#substance_painter.textureset.ChannelType",title:"substance_painter.textureset.ChannelType"},"ChannelType")),") → None",(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.textureset.Stack.remove_channel",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Remove a channel from a stack."),(0,l.mdx)("div",{className:"admonition note"},(0,l.mdx)("p",{className:!0},"Note"),(0,l.mdx)("p",{className:!0},(0,l.mdx)("cite",null,"remove_channel")," is not available with material layering.")),(0,l.mdx)("dl",{className:"field-list simple"},(0,l.mdx)("dt",{className:"field-odd"},"Parameters:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"channel_type")," (",(0,l.mdx)("a",{className:"reference internal",href:"index.html#substance_painter.textureset.ChannelType",title:"substance_painter.textureset.ChannelType"},(0,l.mdx)("em",null,"ChannelType")),") – The channel type.")),(0,l.mdx)("dt",{className:"field-even"},"Raises:"),(0,l.mdx)("dd",{className:"field-even"},(0,l.mdx)("ul",{className:"simple"},(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,l.mdx)("strong",null,"ProjectError"))," – If no project is opened.")),(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"ValueError")," – If there is no channel of type ",(0,l.mdx)("code",{className:"docutils literal notranslate"},"channel_type")," in this Texture Set.")),(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"ValueError")," – If the stack is invalid.")),(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"ValueError")," – If the Texture Set uses material layering."))))),(0,l.mdx)("div",{className:"admonition seealso"},(0,l.mdx)("p",{className:!0},"See also"),(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"#substance_painter.textureset.Stack.all_channels",title:"substance_painter.textureset.Stack.all_channels"},(0,l.mdx)("code",{className:"xref py py-meth docutils literal notranslate"},"Stack.all_channels()")),",",(0,l.mdx)("a",{className:"reference internal",href:"#substance_painter.textureset.Stack.add_channel",title:"substance_painter.textureset.Stack.add_channel"},(0,l.mdx)("code",{className:"xref py py-meth docutils literal notranslate"},"Stack.add_channel()")),",",(0,l.mdx)("a",{className:"reference internal",href:"#substance_painter.textureset.Stack.edit_channel",title:"substance_painter.textureset.Stack.edit_channel"},(0,l.mdx)("code",{className:"xref py py-meth docutils literal notranslate"},"Stack.edit_channel()")),".")))),(0,l.mdx)("dl",{className:"py method"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.textureset.Stack.edit_channel"},"edit_channel(",(0,l.mdx)("em",{className:"sig-param"},"channel_type: ",(0,l.mdx)("a",{className:"reference internal",href:"index.html#substance_painter.textureset.ChannelType",title:"substance_painter.textureset.ChannelType"},"ChannelType")),", ",(0,l.mdx)("em",{className:"sig-param"},"channel_format: ",(0,l.mdx)("a",{className:"reference internal",href:"index.html#substance_painter.textureset.ChannelFormat",title:"substance_painter.textureset.ChannelFormat"},"ChannelFormat")),", ",(0,l.mdx)("em",{className:"sig-param"},"label: str | None = None"),") → None",(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.textureset.Stack.edit_channel",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Change the texture format and label of a channel."),(0,l.mdx)("dl",{className:"field-list simple"},(0,l.mdx)("dt",{className:"field-odd"},"Parameters:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("ul",{className:"simple"},(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"channel_type")," (",(0,l.mdx)("a",{className:"reference internal",href:"index.html#substance_painter.textureset.ChannelType",title:"substance_painter.textureset.ChannelType"},(0,l.mdx)("em",null,"ChannelType")),") – The channel type.")),(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"channel_format")," (",(0,l.mdx)("a",{className:"reference internal",href:"index.html#substance_painter.textureset.ChannelFormat",title:"substance_painter.textureset.ChannelFormat"},(0,l.mdx)("em",null,"ChannelFormat")),") – The new texture format of the channel.")),(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"label")," (",(0,l.mdx)("em",null,"str"),(0,l.mdx)("em",null,", "),(0,l.mdx)("em",null,"optional"),") – The label of the channel in case of User channel as type.")))),(0,l.mdx)("dt",{className:"field-even"},"Raises:"),(0,l.mdx)("dd",{className:"field-even"},(0,l.mdx)("ul",{className:"simple"},(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,l.mdx)("strong",null,"ProjectError"))," – If no project is opened.")),(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"ValueError")," – If there is no stack labeled ",(0,l.mdx)("code",{className:"docutils literal notranslate"},"stack_id")," in this Texture Set.")),(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"ValueError")," – If there is no channel of type ",(0,l.mdx)("code",{className:"docutils literal notranslate"},"channel_type")," in this Texture Set.")),(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"ValueError")," – If a label was provided but ",(0,l.mdx)("code",{className:"docutils literal notranslate"},"channel_type")," is not a user type. Standard channel types have fixed labels.")),(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"ValueError")," – If the stack is invalid."))))),(0,l.mdx)("div",{className:"admonition seealso"},(0,l.mdx)("p",{className:!0},"See also"),(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"#substance_painter.textureset.Stack.add_channel",title:"substance_painter.textureset.Stack.add_channel"},(0,l.mdx)("code",{className:"xref py py-meth docutils literal notranslate"},"Stack.add_channel()")),",",(0,l.mdx)("a",{className:"reference internal",href:"#substance_painter.textureset.Stack.remove_channel",title:"substance_painter.textureset.Stack.remove_channel"},(0,l.mdx)("code",{className:"xref py py-meth docutils literal notranslate"},"Stack.remove_channel()")),".")))),(0,l.mdx)("dl",{className:"py method"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.textureset.Stack.has_channel"},"has_channel(",(0,l.mdx)("em",{className:"sig-param"},"channel_type: ",(0,l.mdx)("a",{className:"reference internal",href:"index.html#substance_painter.textureset.ChannelType",title:"substance_painter.textureset.ChannelType"},"ChannelType")),") → bool",(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.textureset.Stack.has_channel",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Check if a channel exists in a stack."),(0,l.mdx)("dl",{className:"field-list simple"},(0,l.mdx)("dt",{className:"field-odd"},"Parameters:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"channel_type")," (",(0,l.mdx)("a",{className:"reference internal",href:"index.html#substance_painter.textureset.ChannelType",title:"substance_painter.textureset.ChannelType"},(0,l.mdx)("em",null,"ChannelType")),") – The channel type.")),(0,l.mdx)("dt",{className:"field-even"},"Returns:"),(0,l.mdx)("dd",{className:"field-even"},(0,l.mdx)("p",{className:!0},(0,l.mdx)("code",{className:"docutils literal notranslate"},"True")," if the stack has a channel of the given type, ",(0,l.mdx)("code",{className:"docutils literal notranslate"},"False")," otherwise.")),(0,l.mdx)("dt",{className:"field-odd"},"Return type:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("p",{className:!0},"bool")),(0,l.mdx)("dt",{className:"field-even"},"Raises:"),(0,l.mdx)("dd",{className:"field-even"},(0,l.mdx)("ul",{className:"simple"},(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,l.mdx)("strong",null,"ProjectError"))," – If no project is opened.")),(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"ValueError")," – If the stack is invalid."))))),(0,l.mdx)("div",{className:"admonition seealso"},(0,l.mdx)("p",{className:!0},"See also"),(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"#substance_painter.textureset.Stack.add_channel",title:"substance_painter.textureset.Stack.add_channel"},(0,l.mdx)("code",{className:"xref py py-meth docutils literal notranslate"},"Stack.add_channel()")),",",(0,l.mdx)("a",{className:"reference internal",href:"#substance_painter.textureset.Stack.remove_channel",title:"substance_painter.textureset.Stack.remove_channel"},(0,l.mdx)("code",{className:"xref py py-meth docutils literal notranslate"},"Stack.remove_channel()")),".")))),(0,l.mdx)("dl",{className:"py method"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.textureset.Stack.get_channel"},"get_channel(",(0,l.mdx)("em",{className:"sig-param"},"channel_type: ",(0,l.mdx)("a",{className:"reference internal",href:"index.html#substance_painter.textureset.ChannelType",title:"substance_painter.textureset.ChannelType"},"ChannelType")),") → ",(0,l.mdx)("a",{className:"reference internal",href:"channel.html#substance_painter.textureset.Channel",title:"substance_painter.textureset.Channel"},"Channel"),(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.textureset.Stack.get_channel",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Get an existing channel from its type."),(0,l.mdx)("dl",{className:"field-list simple"},(0,l.mdx)("dt",{className:"field-odd"},"Parameters:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"channel_type")," (",(0,l.mdx)("a",{className:"reference internal",href:"channel.html#substance_painter.textureset.Channel",title:"substance_painter.textureset.Channel"},(0,l.mdx)("em",null,"Channel")),") – The channel type.")),(0,l.mdx)("dt",{className:"field-even"},"Returns:"),(0,l.mdx)("dd",{className:"field-even"},(0,l.mdx)("p",{className:!0},"The channel.")),(0,l.mdx)("dt",{className:"field-odd"},"Return type:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"channel.html#substance_painter.textureset.Channel",title:"substance_painter.textureset.Channel"},"Channel"))),(0,l.mdx)("dt",{className:"field-even"},"Raises:"),(0,l.mdx)("dd",{className:"field-even"},(0,l.mdx)("ul",{className:"simple"},(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,l.mdx)("strong",null,"ProjectError"))," – If no project is opened.")),(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ServiceNotFoundError",title:"substance_painter.exception.ServiceNotFoundError"},(0,l.mdx)("strong",null,"ServiceNotFoundError"))," – If Substance 3D Painter has not started all its services yet.")),(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"ValueError")," – If the channel doesn’t exists."))))),(0,l.mdx)("div",{className:"admonition seealso"},(0,l.mdx)("p",{className:!0},"See also"),(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"#substance_painter.textureset.Stack.has_channel",title:"substance_painter.textureset.Stack.has_channel"},(0,l.mdx)("code",{className:"xref py py-meth docutils literal notranslate"},"Stack.has_channel()")),",",(0,l.mdx)("a",{className:"reference internal",href:"#substance_painter.textureset.Stack.add_channel",title:"substance_painter.textureset.Stack.add_channel"},(0,l.mdx)("code",{className:"xref py py-meth docutils literal notranslate"},"Stack.add_channel()")),",",(0,l.mdx)("a",{className:"reference internal",href:"#substance_painter.textureset.Stack.remove_channel",title:"substance_painter.textureset.Stack.remove_channel"},(0,l.mdx)("code",{className:"xref py py-meth docutils literal notranslate"},"Stack.remove_channel()")),".")))))}x.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-api-substance-painter-textureset-stack-md-d5c724194f2f14183f1a.js.map