{"version":3,"file":"component---src-pages-api-substance-painter-logging-md-664ca6c4a743bb1f11b5.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/api/substance_painter/logging.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/painter-python-api/painter-python-api/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`logging module — Substance 3D Painter Python API 0.2.11 documentation`}</p>\n    <h1 {...{\n      \"id\": \"logging-module\"\n    }}>{`logging module`}</h1>\n    <p>{`This module exposes several functions to output messages to the Substance\nPainter logger. Depending on the severity of the message, use `}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.logging.info\",\n        \"title\": \"substance_painter.logging.info\"\n      }}><inlineCode parentName=\"a\">{`info()`}</inlineCode></a>{`,\n`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.logging.warning\",\n        \"title\": \"substance_painter.logging.warning\"\n      }}><inlineCode parentName=\"a\">{`warning()`}</inlineCode></a>{` or `}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.logging.error\",\n        \"title\": \"substance_painter.logging.error\"\n      }}><inlineCode parentName=\"a\">{`error()`}</inlineCode></a>{`.`}</p>\n    <p>{`For a finer control over the logging parameters, namely severity and channel,\nuse `}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.logging.log\",\n        \"title\": \"substance_painter.logging.log\"\n      }}><inlineCode parentName=\"a\">{`log()`}</inlineCode></a>{`. The functions `}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.logging.info\",\n        \"title\": \"substance_painter.logging.info\"\n      }}><inlineCode parentName=\"a\">{`info()`}</inlineCode></a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.logging.warning\",\n        \"title\": \"substance_painter.logging.warning\"\n      }}><inlineCode parentName=\"a\">{`warning()`}</inlineCode></a>{` and\n`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.logging.error\",\n        \"title\": \"substance_painter.logging.error\"\n      }}><inlineCode parentName=\"a\">{`error()`}</inlineCode></a>{` will output to the ‘Python’ log channel, while `}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.logging.log\",\n        \"title\": \"substance_painter.logging.log\"\n      }}><inlineCode parentName=\"a\">{`log()`}</inlineCode></a>{`\nallows to specify a different channel.`}</p>\n    <p>{`Messages with severity levels `}<inlineCode parentName=\"p\">{`INFO`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`WARNING`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`ERROR`}</inlineCode>{` are meant for\nthe end user, and will appear in the log window of Substance 3D Painter. Messages\nwith severity levels `}<inlineCode parentName=\"p\">{`DBG_INFO`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`DBG_WARNING`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`DBG_ERROR`}</inlineCode>{` are meant\nfor the developer, and will appear in the log file.`}</p>\n    <p>{`Example`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`import substance_painter.logging\n\n# Simple log functions:\nsubstance_painter.logging.info(\"Everyone knows that 2 + 2 is {0}.\".format(2+2))\nsubstance_painter.logging.warning(\"Maybe the user should look at this.\")\nsubstance_painter.logging.error(\"Letting the user know that something went wrong.\")\n\n# Log function with more options:\nsubstance_painter.logging.log(\n    substance_painter.logging.INFO,\n    \"Python\",\n    \"An informative log message to the 'Python' channel.\")\n\nsubstance_painter.logging.log(\n    substance_painter.logging.ERROR,\n    \"MyPlugin\",\n    \"An error log message to the 'MyPlugin' channel.\")\n\n`}</code></pre>\n    <p>{`substance_painter.logging.error(`}<em parentName=\"p\">{`message: str`}</em>{`)\nLogs a message with level `}<inlineCode parentName=\"p\">{`ERROR`}</inlineCode>{` on the Substance 3D Painter logger.`}</p>\n    <p>{`Parameters:\n`}<strong parentName=\"p\">{`message`}</strong>{` (`}<em parentName=\"p\">{`str`}</em>{`) – The error message to log.`}</p>\n    <p>{`substance_painter.logging.info(`}<em parentName=\"p\">{`message: str`}</em>{`)\nLogs a message with level `}<inlineCode parentName=\"p\">{`INFO`}</inlineCode>{` on the Substance 3D Painter logger.`}</p>\n    <p>{`Parameters:\n`}<strong parentName=\"p\">{`message`}</strong>{` (`}<em parentName=\"p\">{`str`}</em>{`) – The message to log.`}</p>\n    <p>{`substance_painter.logging.log(`}<em parentName=\"p\">{`severity`}</em>{`, `}<em parentName=\"p\">{`channel: str`}</em>{`, `}<em parentName=\"p\">{`message: str`}</em>{`)\nLogs a message with level severity on the Substance 3D Painter logger.`}</p>\n    <p>{`Parameters:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`severity`}</strong>{` – the severity level, can be `}<inlineCode parentName=\"li\">{`INFO`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`WARNING`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`ERROR`}</inlineCode>{` for\nmessages relevant to the end user, or `}<inlineCode parentName=\"li\">{`DBG_INFO`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`DBG_WARNING`}</inlineCode>{` or\n`}<inlineCode parentName=\"li\">{`DBG_ERROR`}</inlineCode>{` for messages relevant to the developer.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`channel`}</strong>{` (`}<em parentName=\"li\">{`str`}</em>{`) – the channel to log into. This can be any name allowing to\nidentify the origin of the message, for example the name of\nyour plugin.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`message`}</strong>{` (`}<em parentName=\"li\">{`str`}</em>{`) – the message to log.`}</li>\n    </ul>\n    <p>{`substance_painter.logging.warning(`}<em parentName=\"p\">{`message: str`}</em>{`)\nLogs a message with level `}<inlineCode parentName=\"p\">{`WARNING`}</inlineCode>{` on the Substance 3D Painter logger.`}</p>\n    <p>{`Parameters:\n`}<strong parentName=\"p\">{`message`}</strong>{` (`}<em parentName=\"p\">{`str`}</em>{`) – The warning message to log.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}