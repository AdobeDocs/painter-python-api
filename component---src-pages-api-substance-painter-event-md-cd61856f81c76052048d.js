"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[6765],{48801:function(e,t,a){a.r(t),a.d(t,{_frontmatter:function(){return m},default:function(){return o}});var s=a(87462),n=a(63366),l=(a(15007),a(64983)),i=a(91515),d=["components"],m={},c={_frontmatter:m},r=i.Z;function o(e){var t=e.components,a=(0,n.Z)(e,d);return(0,l.mdx)(r,(0,s.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,l.mdx)("div",{className:"wy-grid-for-nav"},(0,l.mdx)("div",{className:"wy-nav-content"},(0,l.mdx)("div",{className:"rst-content style-external-links"},(0,l.mdx)("div",{className:"document",itemScope:"itemscope",itemType:"http://schema.org/Article",role:"main"},(0,l.mdx)("div",{itemProp:"articleBody"},(0,l.mdx)("h1",null,"event module",(0,l.mdx)("a",{className:"headerlink",href:"#module-substance_painter.event",title:"Link to this heading"}," ")),(0,l.mdx)("p",{className:!0},"The ",(0,l.mdx)("code",{className:"docutils literal notranslate"},"event")," module defines application events and allows to subscribe to notifications."),(0,l.mdx)("dl",{className:"py class"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.Event"},(0,l.mdx)("em",{className:"property"},"class "),"substance_painter.event.Event",(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.Event",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Base event class."))),(0,l.mdx)("h2",null,"Event dispatcher",(0,l.mdx)("a",{className:"headerlink",href:"#event-dispatcher",title:"Link to this heading"}," ")),(0,l.mdx)("dl",{className:"py data"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.DISPATCHER"},"substance_painter.event.DISPATCHER",(0,l.mdx)("em",{className:"property"}," = <substance_painter.event.Dispatcher object>"),(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.DISPATCHER",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"The event dispatcher instance that will be used by the application."))),(0,l.mdx)("dl",{className:"py class"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.Dispatcher"},(0,l.mdx)("em",{className:"property"},"class "),"substance_painter.event.Dispatcher",(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.Dispatcher",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"The Event Dispatcher."),(0,l.mdx)("dl",{className:"py method"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.Dispatcher.connect"},"connect(",(0,l.mdx)("em",{className:"sig-param"},"event_cls: Type[",(0,l.mdx)("a",{className:"reference internal",href:"#substance_painter.event.Event",title:"substance_painter.event.Event"},"Event"),"]"),", ",(0,l.mdx)("em",{className:"sig-param"},"callback: Callable[[",(0,l.mdx)("a",{className:"reference internal",href:"#substance_painter.event.Event",title:"substance_painter.event.Event"},"Event"),"], Any]"),") → None",(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.Dispatcher.connect",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Connect a callback to handle the given event type."),(0,l.mdx)("p",{className:!0},"The callback is stored as a weak reference, it is automatically disconnected once the callback gets garbage collected."),(0,l.mdx)("dl",{className:"field-list simple"},(0,l.mdx)("dt",{className:"field-odd"},"Parameters:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("ul",{className:"simple"},(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"event_cls")," (",(0,l.mdx)("a",{className:"reference internal",href:"resource.html#substance_painter.resource.Type",title:"substance_painter.resource.Type"},(0,l.mdx)("em",null,"Type")),(0,l.mdx)("em",null,"["),(0,l.mdx)("a",{className:"reference internal",href:"#substance_painter.event.Event",title:"substance_painter.event.Event"},(0,l.mdx)("em",null,"Event")),(0,l.mdx)("em",null,"]"),") – An event class.")),(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"callback")," (",(0,l.mdx)("em",null,"Callable"),(0,l.mdx)("em",null,"["),(0,l.mdx)("em",null,"["),(0,l.mdx)("a",{className:"reference internal",href:"#substance_painter.event.Event",title:"substance_painter.event.Event"},(0,l.mdx)("em",null,"Event")),(0,l.mdx)("em",null,"]"),(0,l.mdx)("em",null,", "),(0,l.mdx)("em",null,"Any"),(0,l.mdx)("em",null,"]"),") – A method or a bound method that will be called when an instance of the given event class is triggered."))))))),(0,l.mdx)("dl",{className:"py method"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.Dispatcher.connect_strong"},"connect_strong(",(0,l.mdx)("em",{className:"sig-param"},"event_cls: Type[",(0,l.mdx)("a",{className:"reference internal",href:"#substance_painter.event.Event",title:"substance_painter.event.Event"},"Event"),"]"),", ",(0,l.mdx)("em",{className:"sig-param"},"callback: Callable[[",(0,l.mdx)("a",{className:"reference internal",href:"#substance_painter.event.Event",title:"substance_painter.event.Event"},"Event"),"], Any]"),") → None",(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.Dispatcher.connect_strong",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Connect a callback to handle the given event type."),(0,l.mdx)("p",{className:!0},"The callback is stored as a strong reference, it is never automatically disconnected."),(0,l.mdx)("dl",{className:"field-list simple"},(0,l.mdx)("dt",{className:"field-odd"},"Parameters:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("ul",{className:"simple"},(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"event_cls")," (",(0,l.mdx)("a",{className:"reference internal",href:"resource.html#substance_painter.resource.Type",title:"substance_painter.resource.Type"},(0,l.mdx)("em",null,"Type")),(0,l.mdx)("em",null,"["),(0,l.mdx)("a",{className:"reference internal",href:"#substance_painter.event.Event",title:"substance_painter.event.Event"},(0,l.mdx)("em",null,"Event")),(0,l.mdx)("em",null,"]"),") – An event class.")),(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"callback")," (",(0,l.mdx)("em",null,"Callable"),(0,l.mdx)("em",null,"["),(0,l.mdx)("em",null,"["),(0,l.mdx)("a",{className:"reference internal",href:"#substance_painter.event.Event",title:"substance_painter.event.Event"},(0,l.mdx)("em",null,"Event")),(0,l.mdx)("em",null,"]"),(0,l.mdx)("em",null,", "),(0,l.mdx)("em",null,"Any"),(0,l.mdx)("em",null,"]"),") – A method or a bound method that will be called when an instance of the given event class is triggered."))))))),(0,l.mdx)("dl",{className:"py method"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.Dispatcher.disconnect"},"disconnect(",(0,l.mdx)("em",{className:"sig-param"},"event_cls: Type[",(0,l.mdx)("a",{className:"reference internal",href:"#substance_painter.event.Event",title:"substance_painter.event.Event"},"Event"),"]"),", ",(0,l.mdx)("em",{className:"sig-param"},"callback: Callable[[",(0,l.mdx)("a",{className:"reference internal",href:"#substance_painter.event.Event",title:"substance_painter.event.Event"},"Event"),"], Any]"),") → None",(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.Dispatcher.disconnect",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Disconnect a previously connected callback."),(0,l.mdx)("p",{className:!0},"This method can be called to explicitly disconnect a callback."),(0,l.mdx)("dl",{className:"field-list simple"},(0,l.mdx)("dt",{className:"field-odd"},"Parameters:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("ul",{className:"simple"},(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"event_cls")," (",(0,l.mdx)("a",{className:"reference internal",href:"resource.html#substance_painter.resource.Type",title:"substance_painter.resource.Type"},(0,l.mdx)("em",null,"Type")),(0,l.mdx)("em",null,"["),(0,l.mdx)("a",{className:"reference internal",href:"#substance_painter.event.Event",title:"substance_painter.event.Event"},(0,l.mdx)("em",null,"Event")),(0,l.mdx)("em",null,"]"),") – An event class.")),(0,l.mdx)("li",null,(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"callback")," (",(0,l.mdx)("em",null,"Callable"),(0,l.mdx)("em",null,"["),(0,l.mdx)("em",null,"["),(0,l.mdx)("a",{className:"reference internal",href:"#substance_painter.event.Event",title:"substance_painter.event.Event"},(0,l.mdx)("em",null,"Event")),(0,l.mdx)("em",null,"]"),(0,l.mdx)("em",null,", "),(0,l.mdx)("em",null,"Any"),(0,l.mdx)("em",null,"]"),") – A method or a bound method that has been connected to the given event class."))))))))),(0,l.mdx)("h2",null,"Export events",(0,l.mdx)("a",{className:"headerlink",href:"#export-events",title:"Link to this heading"}," ")),(0,l.mdx)("dl",{className:"py class"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.ExportTexturesAboutToStart"},(0,l.mdx)("em",{className:"property"},"class "),"substance_painter.event.ExportTexturesAboutToStart(",(0,l.mdx)("em",{className:"sig-param"},"textures: Dict[Tuple[str, str], List[str]]"),")",(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.ExportTexturesAboutToStart",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Event triggered just before a textures export."),(0,l.mdx)("dl",{className:"py attribute"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.ExportTexturesAboutToStart.textures"},"textures",(0,l.mdx)("em",{className:"property"},": Dict[Tuple[str, str], List[str]]"),(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.ExportTexturesAboutToStart.textures",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"List of texture files to be written to disk, grouped by stack (Texture Set name, stack name)."),(0,l.mdx)("dl",{className:"field-list simple"},(0,l.mdx)("dt",{className:"field-odd"},"Type:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("p",{className:!0},"Dict[Tuple[str, str], List[str]]"))))))),(0,l.mdx)("dl",{className:"py class"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.ExportTexturesEnded"},(0,l.mdx)("em",{className:"property"},"class "),"substance_painter.event.ExportTexturesEnded(",(0,l.mdx)("em",{className:"sig-param"},"status: ",(0,l.mdx)("a",{className:"reference internal",href:"export.html#substance_painter.export.ExportStatus",title:"substance_painter.export.ExportStatus"},"ExportStatus")),", ",(0,l.mdx)("em",{className:"sig-param"},"message: str"),", ",(0,l.mdx)("em",{className:"sig-param"},"textures: Dict[Tuple[str, str], List[str]]"),")",(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.ExportTexturesEnded",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Event triggered after textures export is finished."),(0,l.mdx)("dl",{className:"py attribute"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.ExportTexturesEnded.message"},"message",(0,l.mdx)("em",{className:"property"},": str"),(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.ExportTexturesEnded.message",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Human readable status message."),(0,l.mdx)("dl",{className:"field-list simple"},(0,l.mdx)("dt",{className:"field-odd"},"Type:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("p",{className:!0},"str"))))),(0,l.mdx)("dl",{className:"py attribute"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.ExportTexturesEnded.status"},"status",(0,l.mdx)("em",{className:"property"},": ",(0,l.mdx)("a",{className:"reference internal",href:"export.html#substance_painter.export.ExportStatus",title:"substance_painter.export.ExportStatus"},"ExportStatus")),(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.ExportTexturesEnded.status",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Status code."),(0,l.mdx)("dl",{className:"field-list simple"},(0,l.mdx)("dt",{className:"field-odd"},"Type:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"export.html#substance_painter.export.ExportStatus",title:"substance_painter.export.ExportStatus"},"ExportStatus")))))),(0,l.mdx)("dl",{className:"py attribute"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.ExportTexturesEnded.textures"},"textures",(0,l.mdx)("em",{className:"property"},": Dict[Tuple[str, str], List[str]]"),(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.ExportTexturesEnded.textures",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"List of texture files written to disk, grouped by stack (Texture Set name, stack name)."),(0,l.mdx)("dl",{className:"field-list simple"},(0,l.mdx)("dt",{className:"field-odd"},"Type:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("p",{className:!0},"Dict[Tuple[str, str], List[str]]"))))))),(0,l.mdx)("h2",null,"Project events",(0,l.mdx)("a",{className:"headerlink",href:"#project-events",title:"Link to this heading"}," ")),(0,l.mdx)("div",{className:"admonition note"},(0,l.mdx)("p",{className:!0},"Note"),(0,l.mdx)("p",{className:!0},"Project loading is done asynchronously. When the event ",(0,l.mdx)("code",{className:"docutils literal notranslate"},"ProjectOpened")," or",(0,l.mdx)("code",{className:"docutils literal notranslate"},"ProjectCreated")," is triggered, the project may still be loading. The event",(0,l.mdx)("code",{className:"docutils literal notranslate"},"ProjectEditionEntered")," is triggered when the project is ready to work with.")),(0,l.mdx)("dl",{className:"py class"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.ProjectOpened"},(0,l.mdx)("em",{className:"property"},"class "),"substance_painter.event.ProjectOpened",(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.ProjectOpened",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Event triggered when an existing project has been opened."))),(0,l.mdx)("dl",{className:"py class"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.ProjectCreated"},(0,l.mdx)("em",{className:"property"},"class "),"substance_painter.event.ProjectCreated",(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.ProjectCreated",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Event triggered when a new project has been created."))),(0,l.mdx)("dl",{className:"py class"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.ProjectAboutToClose"},(0,l.mdx)("em",{className:"property"},"class "),"substance_painter.event.ProjectAboutToClose",(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.ProjectAboutToClose",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Event triggered just before closing the current project."))),(0,l.mdx)("dl",{className:"py class"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.ProjectAboutToSave"},(0,l.mdx)("em",{className:"property"},"class "),"substance_painter.event.ProjectAboutToSave(",(0,l.mdx)("em",{className:"sig-param"},"file_path: str"),")",(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.ProjectAboutToSave",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Event triggered just before saving the current project."),(0,l.mdx)("dl",{className:"py attribute"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.ProjectAboutToSave.file_path"},"file_path",(0,l.mdx)("em",{className:"property"},": str"),(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.ProjectAboutToSave.file_path",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"The destination file."),(0,l.mdx)("dl",{className:"field-list simple"},(0,l.mdx)("dt",{className:"field-odd"},"Type:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("p",{className:!0},"str"))))))),(0,l.mdx)("dl",{className:"py class"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.ProjectSaved"},(0,l.mdx)("em",{className:"property"},"class "),"substance_painter.event.ProjectSaved",(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.ProjectSaved",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Event triggered once the current project is saved."))),(0,l.mdx)("dl",{className:"py class"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.ProjectEditionEntered"},(0,l.mdx)("em",{className:"property"},"class "),"substance_painter.event.ProjectEditionEntered",(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.ProjectEditionEntered",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Event triggered when the project is fully loaded and ready to work with."),(0,l.mdx)("p",{className:!0},"When edition is entered, it is for example possible to query/edit the project properties, to bake textures or do project export."))),(0,l.mdx)("dl",{className:"py class"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.ProjectEditionLeft"},(0,l.mdx)("em",{className:"property"},"class "),"substance_painter.event.ProjectEditionLeft",(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.ProjectEditionLeft",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Event triggered when the current project can non longer be edited."))),(0,l.mdx)("dl",{className:"py class"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.BusyStatusChanged"},(0,l.mdx)("em",{className:"property"},"class "),"substance_painter.event.BusyStatusChanged(",(0,l.mdx)("em",{className:"sig-param"},"busy: bool"),")",(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.BusyStatusChanged",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Event triggered when Substance 3D Painter busy state changed."),(0,l.mdx)("div",{className:"admonition seealso"},(0,l.mdx)("p",{className:!0},"See also"),(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"project.html#substance_painter.project.execute_when_not_busy",title:"substance_painter.project.execute_when_not_busy"},(0,l.mdx)("code",{className:"xref py py-func docutils literal notranslate"},"substance_painter.project.execute_when_not_busy()")),",",(0,l.mdx)("a",{className:"reference internal",href:"project.html#substance_painter.project.is_busy",title:"substance_painter.project.is_busy"},(0,l.mdx)("code",{className:"xref py py-func docutils literal notranslate"},"substance_painter.project.is_busy()")),".")),(0,l.mdx)("dl",{className:"py attribute"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.BusyStatusChanged.busy"},"busy",(0,l.mdx)("em",{className:"property"},": bool"),(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.BusyStatusChanged.busy",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Whether Substance 3D Painter is busy now."),(0,l.mdx)("dl",{className:"field-list simple"},(0,l.mdx)("dt",{className:"field-odd"},"Type:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("p",{className:!0},"bool"))))))),(0,l.mdx)("dl",{className:"py class"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.TextureStateEvent"},(0,l.mdx)("em",{className:"property"},"class "),"substance_painter.event.TextureStateEvent(",(0,l.mdx)("em",{className:"sig-param"},"action: ",(0,l.mdx)("a",{className:"reference internal",href:"#substance_painter.event.TextureStateEventAction",title:"substance_painter.event.TextureStateEventAction"},"TextureStateEventAction")),", ",(0,l.mdx)("em",{className:"sig-param"},"stack_id: int"),", ",(0,l.mdx)("em",{className:"sig-param"},"tile_indices: Tuple[int, int]"),", ",(0,l.mdx)("em",{className:"sig-param"},"channel_type: ",(0,l.mdx)("a",{className:"reference internal",href:"textureset/index.html#substance_painter.textureset.ChannelType",title:"substance_painter.textureset.ChannelType"},"ChannelType")),", ",(0,l.mdx)("em",{className:"sig-param"},"cache_key: int"),")",(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.TextureStateEvent",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Event triggered when a document texture is added, removed or updated."),(0,l.mdx)("dl",{className:"py attribute"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.TextureStateEvent.action"},"action",(0,l.mdx)("em",{className:"property"},": ",(0,l.mdx)("a",{className:"reference internal",href:"#substance_painter.event.TextureStateEventAction",title:"substance_painter.event.TextureStateEventAction"},"TextureStateEventAction")),(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.TextureStateEvent.action",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Performed action (add, remove, update)."),(0,l.mdx)("dl",{className:"field-list simple"},(0,l.mdx)("dt",{className:"field-odd"},"Type:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"#substance_painter.event.TextureStateEventAction",title:"substance_painter.event.TextureStateEventAction"},"TextureStateEventAction")))))),(0,l.mdx)("dl",{className:"py attribute"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.TextureStateEvent.cache_key"},"cache_key",(0,l.mdx)("em",{className:"property"},": int"),(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.TextureStateEvent.cache_key",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"The texture current cache key. Those cache keys are persistent across sessions."),(0,l.mdx)("dl",{className:"field-list simple"},(0,l.mdx)("dt",{className:"field-odd"},"Type:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("p",{className:!0},"int"))))),(0,l.mdx)("dl",{className:"py method"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.TextureStateEvent.cache_key_invalidation_throttling_period"},(0,l.mdx)("em",{className:"property"},"static "),"cache_key_invalidation_throttling_period() → timedelta",(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.TextureStateEvent.cache_key_invalidation_throttling_period",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Get the minimum duration between two texture update events (for a given texture)."),(0,l.mdx)("dl",{className:"field-list simple"},(0,l.mdx)("dt",{className:"field-odd"},"Returns:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("p",{className:!0},"The minimum duration between two update events.")),(0,l.mdx)("dt",{className:"field-even"},"Return type:"),(0,l.mdx)("dd",{className:"field-even"},(0,l.mdx)("p",{className:!0},"datetime.timedelta"))))),(0,l.mdx)("dl",{className:"py attribute"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.TextureStateEvent.channel_type"},"channel_type",(0,l.mdx)("em",{className:"property"},": ",(0,l.mdx)("a",{className:"reference internal",href:"textureset/index.html#substance_painter.textureset.ChannelType",title:"substance_painter.textureset.ChannelType"},"ChannelType")),(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.TextureStateEvent.channel_type",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"The document channel type."),(0,l.mdx)("dl",{className:"field-list simple"},(0,l.mdx)("dt",{className:"field-odd"},"Type:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"textureset/index.html#substance_painter.textureset.ChannelType",title:"substance_painter.textureset.ChannelType"},"substance_painter.textureset.ChannelType")))))),(0,l.mdx)("dl",{className:"py method"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.TextureStateEvent.set_cache_key_invalidation_throttling_period"},(0,l.mdx)("em",{className:"property"},"static "),"set_cache_key_invalidation_throttling_period(",(0,l.mdx)("em",{className:"sig-param"},"period: timedelta"),") → None",(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.TextureStateEvent.set_cache_key_invalidation_throttling_period",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Set the minimum duration between two texture update events (for a given texture)."),(0,l.mdx)("p",{className:!0},"Warning: this setting is global and every work made in a callback associated to this event may greatly hurt the painting experience."),(0,l.mdx)("dl",{className:"field-list simple"},(0,l.mdx)("dt",{className:"field-odd"},"Parameters:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"period")," (",(0,l.mdx)("em",null,"datetime.timedelta"),") – The minimum duration between two update events, can’t be lower than 500ms.")),(0,l.mdx)("dt",{className:"field-even"},"Raises:"),(0,l.mdx)("dd",{className:"field-even"},(0,l.mdx)("p",{className:!0},(0,l.mdx)("strong",null,"ValueError")," – If period is below 500ms."))))),(0,l.mdx)("dl",{className:"py attribute"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.TextureStateEvent.stack_id"},"stack_id",(0,l.mdx)("em",{className:"property"},": int"),(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.TextureStateEvent.stack_id",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"The stack the texture bellongs to, can be used to create a",(0,l.mdx)("a",{className:"reference internal",href:"textureset/stack.html#substance_painter.textureset.Stack",title:"substance_painter.textureset.Stack"},(0,l.mdx)("code",{className:"xref py py-class docutils literal notranslate"},"substance_painter.textureset.Stack"))," instance."),(0,l.mdx)("dl",{className:"field-list simple"},(0,l.mdx)("dt",{className:"field-odd"},"Type:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("p",{className:!0},"int"))))),(0,l.mdx)("dl",{className:"py attribute"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.TextureStateEvent.tile_indices"},"tile_indices",(0,l.mdx)("em",{className:"property"},": Tuple[int, int]"),(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.TextureStateEvent.tile_indices",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"The uv tile indices."),(0,l.mdx)("dl",{className:"field-list simple"},(0,l.mdx)("dt",{className:"field-odd"},"Type:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("p",{className:!0},"Tuple[int, int]"))))))),(0,l.mdx)("dl",{className:"py class"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.TextureStateEventAction"},(0,l.mdx)("em",{className:"property"},"class "),"substance_painter.event.TextureStateEventAction(",(0,l.mdx)("em",{className:"sig-param"},"value"),")",(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.TextureStateEventAction",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"The TextureStateEvent possible actions."),(0,l.mdx)("p",{className:!0},"Members:"),(0,l.mdx)("p",{className:!0},(0,l.mdx)("code",{className:"docutils literal notranslate"},"ADD"),", ",(0,l.mdx)("code",{className:"docutils literal notranslate"},"UPDATE"),", ",(0,l.mdx)("code",{className:"docutils literal notranslate"},"REMOVE")))),(0,l.mdx)("h2",null,"Shelf events",(0,l.mdx)("a",{className:"headerlink",href:"#shelf-events",title:"Link to this heading"}," ")),(0,l.mdx)("dl",{className:"py class"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.ShelfCrawlingStarted"},(0,l.mdx)("em",{className:"property"},"class "),"substance_painter.event.ShelfCrawlingStarted(",(0,l.mdx)("em",{className:"sig-param"},"shelf_name: str"),")",(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.ShelfCrawlingStarted",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Event triggered when a shelf starts reading the file system to discover new resources."),(0,l.mdx)("div",{className:"admonition seealso"},(0,l.mdx)("p",{className:!0},"See also"),(0,l.mdx)("p",{className:!0},(0,l.mdx)("code",{className:"xref py py-meth docutils literal notranslate"},"Shelf.is_crawling()"),".")),(0,l.mdx)("dl",{className:"py attribute"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.ShelfCrawlingStarted.shelf_name"},"shelf_name",(0,l.mdx)("em",{className:"property"},": str"),(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.ShelfCrawlingStarted.shelf_name",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Name of the shelf discovering resources."),(0,l.mdx)("dl",{className:"field-list simple"},(0,l.mdx)("dt",{className:"field-odd"},"Type:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("p",{className:!0},"str"))))))),(0,l.mdx)("dl",{className:"py class"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.ShelfCrawlingEnded"},(0,l.mdx)("em",{className:"property"},"class "),"substance_painter.event.ShelfCrawlingEnded(",(0,l.mdx)("em",{className:"sig-param"},"shelf_name: str"),")",(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.ShelfCrawlingEnded",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Event triggered when a shelf has finished discovering new resources and loading their thumbnails."),(0,l.mdx)("div",{className:"admonition seealso"},(0,l.mdx)("p",{className:!0},"See also"),(0,l.mdx)("p",{className:!0},(0,l.mdx)("code",{className:"xref py py-meth docutils literal notranslate"},"Shelf.is_crawling()"),".")),(0,l.mdx)("dl",{className:"py attribute"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.ShelfCrawlingEnded.shelf_name"},"shelf_name",(0,l.mdx)("em",{className:"property"},": str"),(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.ShelfCrawlingEnded.shelf_name",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Name of the shelf that has finished discovering resources."),(0,l.mdx)("dl",{className:"field-list simple"},(0,l.mdx)("dt",{className:"field-odd"},"Type:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("p",{className:!0},"str"))))))),(0,l.mdx)("h2",null,"Baking events",(0,l.mdx)("a",{className:"headerlink",href:"#baking-events",title:"Link to this heading"}," ")),(0,l.mdx)("dl",{className:"py class"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.BakingProcessAboutToStart"},(0,l.mdx)("em",{className:"property"},"class "),"substance_painter.event.BakingProcessAboutToStart(",(0,l.mdx)("em",{className:"sig-param"},"stop_source: ",(0,l.mdx)("a",{className:"reference internal",href:"async_utils.html#substance_painter.async_utils.StopSource",title:"substance_painter.async_utils.StopSource"},"StopSource")),")",(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.BakingProcessAboutToStart",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Event triggered when a baking is about to start."),(0,l.mdx)("div",{className:"admonition seealso"},(0,l.mdx)("p",{className:!0},"See also"),(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"baking.html#substance_painter.baking.bake_async",title:"substance_painter.baking.bake_async"},(0,l.mdx)("code",{className:"xref py py-func docutils literal notranslate"},"substance_painter.baking.bake_async()")),(0,l.mdx)("a",{className:"reference internal",href:"baking.html#substance_painter.baking.bake_selected_textures_async",title:"substance_painter.baking.bake_selected_textures_async"},(0,l.mdx)("code",{className:"xref py py-func docutils literal notranslate"},"substance_painter.baking.bake_selected_textures_async()")))),(0,l.mdx)("dl",{className:"py attribute"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.BakingProcessAboutToStart.stop_source"},"stop_source",(0,l.mdx)("em",{className:"property"},": ",(0,l.mdx)("a",{className:"reference internal",href:"async_utils.html#substance_painter.async_utils.StopSource",title:"substance_painter.async_utils.StopSource"},"StopSource")),(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.BakingProcessAboutToStart.stop_source",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"The baking stop source, can be compared with the StopSource returned from the baking launch methods to identify the baking process."),(0,l.mdx)("dl",{className:"field-list simple"},(0,l.mdx)("dt",{className:"field-odd"},"Type:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"async_utils.html#substance_painter.async_utils.StopSource",title:"substance_painter.async_utils.StopSource"},"StopSource")))))))),(0,l.mdx)("dl",{className:"py class"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.BakingProcessProgress"},(0,l.mdx)("em",{className:"property"},"class "),"substance_painter.event.BakingProcessProgress(",(0,l.mdx)("em",{className:"sig-param"},"progress: float"),")",(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.BakingProcessProgress",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Event triggered when baking process progress changes."),(0,l.mdx)("div",{className:"admonition seealso"},(0,l.mdx)("p",{className:!0},"See also"),(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"baking.html#substance_painter.baking.bake_async",title:"substance_painter.baking.bake_async"},(0,l.mdx)("code",{className:"xref py py-func docutils literal notranslate"},"substance_painter.baking.bake_async()")),(0,l.mdx)("a",{className:"reference internal",href:"baking.html#substance_painter.baking.bake_selected_textures_async",title:"substance_painter.baking.bake_selected_textures_async"},(0,l.mdx)("code",{className:"xref py py-func docutils literal notranslate"},"substance_painter.baking.bake_selected_textures_async()")))),(0,l.mdx)("dl",{className:"py attribute"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.BakingProcessProgress.progress"},"progress",(0,l.mdx)("em",{className:"property"},": float"),(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.BakingProcessProgress.progress",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"The baking progress, between [0.0, 1.0]."))))),(0,l.mdx)("dl",{className:"py class"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.BakingProcessEnded"},(0,l.mdx)("em",{className:"property"},"class "),"substance_painter.event.BakingProcessEnded(",(0,l.mdx)("em",{className:"sig-param"},"status: ",(0,l.mdx)("a",{className:"reference internal",href:"baking.html#substance_painter.baking.BakingStatus",title:"substance_painter.baking.BakingStatus"},"BakingStatus")),")",(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.BakingProcessEnded",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Event triggered after baking is finished."),(0,l.mdx)("div",{className:"admonition seealso"},(0,l.mdx)("p",{className:!0},"See also"),(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"baking.html#substance_painter.baking.bake_async",title:"substance_painter.baking.bake_async"},(0,l.mdx)("code",{className:"xref py py-func docutils literal notranslate"},"substance_painter.baking.bake_async()")),(0,l.mdx)("a",{className:"reference internal",href:"baking.html#substance_painter.baking.bake_selected_textures_async",title:"substance_painter.baking.bake_selected_textures_async"},(0,l.mdx)("code",{className:"xref py py-func docutils literal notranslate"},"substance_painter.baking.bake_selected_textures_async()")))),(0,l.mdx)("dl",{className:"py attribute"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.BakingProcessEnded.status"},"status",(0,l.mdx)("em",{className:"property"},": ",(0,l.mdx)("a",{className:"reference internal",href:"baking.html#substance_painter.baking.BakingStatus",title:"substance_painter.baking.BakingStatus"},"BakingStatus")),(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.BakingProcessEnded.status",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Status of the baking process"),(0,l.mdx)("dl",{className:"field-list simple"},(0,l.mdx)("dt",{className:"field-odd"},"Type:"),(0,l.mdx)("dd",{className:"field-odd"},(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"baking.html#substance_painter.baking.BakingStatus",title:"substance_painter.baking.BakingStatus"},"BakingStatus")))))))),(0,l.mdx)("h2",null,"Layer stack events",(0,l.mdx)("a",{className:"headerlink",href:"#layer-stack-events",title:"Link to this heading"}," ")),(0,l.mdx)("dl",{className:"py class"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.LayerStacksModelDataChanged"},(0,l.mdx)("em",{className:"property"},"class "),"substance_painter.event.LayerStacksModelDataChanged",(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.LayerStacksModelDataChanged",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Event triggered whenever the status of the Layer Stacks changes."),(0,l.mdx)("div",{className:"admonition seealso"},(0,l.mdx)("p",{className:!0},"See also"),(0,l.mdx)("p",{className:!0},(0,l.mdx)("code",{className:"xref py py-mod docutils literal notranslate"},"substance_painter.layerstack"))))),(0,l.mdx)("h2",null,"Application wide events",(0,l.mdx)("a",{className:"headerlink",href:"#application-wide-events",title:"Link to this heading"}," ")),(0,l.mdx)("dl",{className:"py class"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.EngineComputationsStatusChanged"},(0,l.mdx)("em",{className:"property"},"class "),"substance_painter.event.EngineComputationsStatusChanged(",(0,l.mdx)("em",{className:"sig-param"},"engine_computations_enabled: bool"),")",(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.EngineComputationsStatusChanged",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Event triggered whenever the status of the engine computations changes."),(0,l.mdx)("div",{className:"admonition seealso"},(0,l.mdx)("p",{className:!0},"See also"),(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"application.html#substance_painter.application.engine_computations_status",title:"substance_painter.application.engine_computations_status"},(0,l.mdx)("code",{className:"xref py py-func docutils literal notranslate"},"substance_painter.application.engine_computations_status()")))))),(0,l.mdx)("h2",null,"Display events",(0,l.mdx)("a",{className:"headerlink",href:"#display-events",title:"Link to this heading"}," ")),(0,l.mdx)("dl",{className:"py class"},(0,l.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.event.CameraPropertiesChanged"},(0,l.mdx)("em",{className:"property"},"class "),"substance_painter.event.CameraPropertiesChanged(",(0,l.mdx)("em",{className:"sig-param"},"camera_id: int"),")",(0,l.mdx)("a",{className:"headerlink",href:"#substance_painter.event.CameraPropertiesChanged",title:"Link to this definition"}," ")),(0,l.mdx)("dd",null,(0,l.mdx)("p",{className:!0},"Event triggered when the camera properties change."),(0,l.mdx)("div",{className:"admonition seealso"},(0,l.mdx)("p",{className:!0},"See also"),(0,l.mdx)("p",{className:!0},(0,l.mdx)("a",{className:"reference internal",href:"display.html#substance_painter.display.Camera",title:"substance_painter.display.Camera"},(0,l.mdx)("code",{className:"xref py py-class docutils literal notranslate"},"substance_painter.display.Camera"))))))))))))}o.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-api-substance-painter-event-md-cd61856f81c76052048d.js.map