"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[3878],{87162:function(e,a,s){s.r(a),s.d(a,{_frontmatter:function(){return m},default:function(){return p}});var l=s(87462),t=s(63366),n=(s(15007),s(64983)),i=s(91515),d=["components"],m={},u={_frontmatter:m},c=i.Z;function p(e){var a=e.components,s=(0,t.Z)(e,d);return(0,n.mdx)(c,(0,l.Z)({},u,s,{components:a,mdxType:"MDXLayout"}),(0,n.mdx)("h1",null,"substance_painter_plugins module",(0,n.mdx)("a",{className:"headerlink",href:"#module-substance_painter_plugins",title:"Link to this heading"}," ")),(0,n.mdx)("p",{className:!0},"This module allows to manage the ",(0,n.mdx)("cite",null,"Substance 3D Painter")," Plugins: listing existing Plugins, loading or unloading a given Plugin, etc."),(0,n.mdx)("p",{className:!0},"A ",(0,n.mdx)("cite",null,"Substance 3D Painter")," Plugin is a standard Python module, placed in a path added to ",(0,n.mdx)("a",{className:"reference internal",href:"#substance_painter_plugins.path",title:"substance_painter_plugins.path"},(0,n.mdx)("code",{className:"xref py py-obj docutils literal notranslate"},"substance_painter_plugins.path")),", which can use the ",(0,n.mdx)("cite",null,"Substance 3D Painter"),"Python API to do certain tasks."),(0,n.mdx)("p",{className:!0},"Example"),(0,n.mdx)("pre",null,(0,n.mdx)("code",{parentName:"pre",className:"language-python"},'import importlib\nimport substance_painter_plugins\n\n# Get the list of available Plugin names:\nall_plugins_names = substance_painter_plugins.plugin_module_names()\nfor name in all_plugins_names:\n    print(name)\n\n# Load the "hello world" Plugin:\nplugin = importlib.import_module("hello_plugin")\n\n# Start the Plugin if it wasn\'t already:\nif not substance_painter_plugins.is_plugin_started(plugin):\n    substance_painter_plugins.start_plugin(plugin)\n')),(0,n.mdx)("dl",{className:"py data"},(0,n.mdx)("dt",{className:"sig sig-object py",id:"substance_painter_plugins.path"},"substance_painter_plugins.path",(0,n.mdx)("em",{className:"property"}," = []"),(0,n.mdx)("a",{className:"headerlink",href:"#substance_painter_plugins.path",title:"Link to this definition"}," ")),(0,n.mdx)("dd",null,(0,n.mdx)("p",{className:!0},"A list of strings that specifies the search path for plugins. Initialized from ",(0,n.mdx)("code",{className:"docutils literal notranslate"},"SUBSTANCE_PAINTER_PLUGINS_PATH")," environment variable, ",(0,n.mdx)("cite",null,"Substance 3D Painter"),"installation directory and ",(0,n.mdx)("cite",null,"Substance 3D Painter")," user resources directory."),(0,n.mdx)("p",{className:!0},"You need to call explicitly ",(0,n.mdx)("a",{className:"reference internal",href:"#substance_painter_plugins.update_sys_path",title:"substance_painter_plugins.update_sys_path"},(0,n.mdx)("code",{className:"xref py py-obj docutils literal notranslate"},"substance_painter_plugins.update_sys_path"))," after updating this variable."),(0,n.mdx)("p",{className:!0},"A plugins directory is expected to contain three subdirectories, automatically added to",(0,n.mdx)("code",{className:"docutils literal notranslate"},"sys.path"),":"),(0,n.mdx)("blockquote",null,(0,n.mdx)("div",null,(0,n.mdx)("ul",{className:"simple"},(0,n.mdx)("li",null,(0,n.mdx)("p",{className:!0},(0,n.mdx)("strong",null,"plugins")," : Modules that are loaded as optional components.")),(0,n.mdx)("li",null,(0,n.mdx)("p",{className:!0},(0,n.mdx)("strong",null,"startup")," : Modules that are always loaded at application startup.")),(0,n.mdx)("li",null,(0,n.mdx)("p",{className:!0},(0,n.mdx)("strong",null,"modules")," : Utility modules, shared across plugins."))))),(0,n.mdx)("p",{className:!0},"Modules in ",(0,n.mdx)("code",{className:"docutils literal notranslate"},"plugins/")," and ",(0,n.mdx)("code",{className:"docutils literal notranslate"},"startup/")," directories are expected to have a ",(0,n.mdx)("code",{className:"docutils literal notranslate"},"start_plugin()")," and a ",(0,n.mdx)("code",{className:"docutils literal notranslate"},"close_plugin()")," methods, respectively called after loading the module and before unloading it. Modules added in ",(0,n.mdx)("code",{className:"docutils literal notranslate"},"plugins/")," directory take precedence over modules added in ",(0,n.mdx)("code",{className:"docutils literal notranslate"},"startup/"),"directory."),(0,n.mdx)("dl",{className:"field-list simple"},(0,n.mdx)("dt",{className:"field-odd"},"Type:"),(0,n.mdx)("dd",{className:"field-odd"},(0,n.mdx)("p",{className:!0},"list"))))),(0,n.mdx)("dl",{className:"py data"},(0,n.mdx)("dt",{className:"sig sig-object py",id:"substance_painter_plugins.plugins"},"substance_painter_plugins.plugins",(0,n.mdx)("em",{className:"property"}," = "),(0,n.mdx)("a",{className:"headerlink",href:"#substance_painter_plugins.plugins",title:"Link to this definition"}," ")),(0,n.mdx)("dd",null,(0,n.mdx)("p",{className:!0},"Currently started plugins."),(0,n.mdx)("dl",{className:"field-list simple"},(0,n.mdx)("dt",{className:"field-odd"},"Type:"),(0,n.mdx)("dd",{className:"field-odd"},(0,n.mdx)("p",{className:!0},"dict"))))),(0,n.mdx)("dl",{className:"py function"},(0,n.mdx)("dt",{className:"sig sig-object py",id:"substance_painter_plugins.start_plugin"},"substance_painter_plugins.start_plugin(",(0,n.mdx)("em",{className:"sig-param"},"module"),")",(0,n.mdx)("a",{className:"headerlink",href:"#substance_painter_plugins.start_plugin",title:"Link to this definition"}," ")),(0,n.mdx)("dd",null,(0,n.mdx)("p",{className:!0},"Start the given ",(0,n.mdx)("cite",null,"Substance 3D Painter")," plugin."),(0,n.mdx)("dl",{className:"field-list simple"},(0,n.mdx)("dt",{className:"field-odd"},"Parameters:"),(0,n.mdx)("dd",{className:"field-odd"},(0,n.mdx)("p",{className:!0},(0,n.mdx)("strong",null,"module")," – A Python module that is expected to have a ",(0,n.mdx)("code",{className:"docutils literal notranslate"},"start_plugin")," method."))))),(0,n.mdx)("dl",{className:"py function"},(0,n.mdx)("dt",{className:"sig sig-object py",id:"substance_painter_plugins.close_plugin"},"substance_painter_plugins.close_plugin(",(0,n.mdx)("em",{className:"sig-param"},"module"),", ",(0,n.mdx)("em",{className:"sig-param"},"gc_collect=True"),")",(0,n.mdx)("a",{className:"headerlink",href:"#substance_painter_plugins.close_plugin",title:"Link to this definition"}," ")),(0,n.mdx)("dd",null,(0,n.mdx)("p",{className:!0},"Close the given ",(0,n.mdx)("cite",null,"Substance 3D Painter")," plugin."),(0,n.mdx)("dl",{className:"field-list simple"},(0,n.mdx)("dt",{className:"field-odd"},"Parameters:"),(0,n.mdx)("dd",{className:"field-odd"},(0,n.mdx)("ul",{className:"simple"},(0,n.mdx)("li",null,(0,n.mdx)("p",{className:!0},(0,n.mdx)("strong",null,"module")," – A Python module that is expected to have a ",(0,n.mdx)("code",{className:"docutils literal notranslate"},"close_plugin")," method.")),(0,n.mdx)("li",null,(0,n.mdx)("p",{className:!0},(0,n.mdx)("strong",null,"gc_collect")," – Run a full garbage collection if set to True."))))))),(0,n.mdx)("dl",{className:"py function"},(0,n.mdx)("dt",{className:"sig sig-object py",id:"substance_painter_plugins.is_plugin_started"},"substance_painter_plugins.is_plugin_started(",(0,n.mdx)("em",{className:"sig-param"},"module"),")",(0,n.mdx)("a",{className:"headerlink",href:"#substance_painter_plugins.is_plugin_started",title:"Link to this definition"}," ")),(0,n.mdx)("dd",null,(0,n.mdx)("p",{className:!0},"Check if the given plugin is currently started."),(0,n.mdx)("dl",{className:"field-list simple"},(0,n.mdx)("dt",{className:"field-odd"},"Parameters:"),(0,n.mdx)("dd",{className:"field-odd"},(0,n.mdx)("p",{className:!0},(0,n.mdx)("strong",null,"module")," – A Python module.")),(0,n.mdx)("dt",{className:"field-even"},"Returns:"),(0,n.mdx)("dd",{className:"field-even"},(0,n.mdx)("p",{className:!0},(0,n.mdx)("code",{className:"docutils literal notranslate"},"True")," if the given module is currently started, ",(0,n.mdx)("code",{className:"docutils literal notranslate"},"False")," otherwise."))))),(0,n.mdx)("dl",{className:"py function"},(0,n.mdx)("dt",{className:"sig sig-object py",id:"substance_painter_plugins.reload_plugin"},"substance_painter_plugins.reload_plugin(",(0,n.mdx)("em",{className:"sig-param"},"module"),")",(0,n.mdx)("a",{className:"headerlink",href:"#substance_painter_plugins.reload_plugin",title:"Link to this definition"}," ")),(0,n.mdx)("dd",null,(0,n.mdx)("p",{className:!0},"Reload a plugin and start it."),(0,n.mdx)("p",{className:!0},"Read ",(0,n.mdx)("a",{className:"reference external",href:"https://docs.python.org/3/library/importlib.html#importlib.reload"},"importlib.reload(module) documentation")," for possible caveats. See ",(0,n.mdx)("a",{className:"reference internal",href:"#substance_painter_plugins.start_plugin",title:"substance_painter_plugins.start_plugin"},(0,n.mdx)("code",{className:"xref py py-func docutils literal notranslate"},"start_plugin()")),"and ",(0,n.mdx)("a",{className:"reference internal",href:"#substance_painter_plugins.close_plugin",title:"substance_painter_plugins.close_plugin"},(0,n.mdx)("code",{className:"xref py py-func docutils literal notranslate"},"close_plugin()"))," for details about starting and closing a plugin. If the plugin has a ",(0,n.mdx)("code",{className:"docutils literal notranslate"},"reload_plugin")," method, it will be executed after closing and before restarting the plugin. The purpose of ",(0,n.mdx)("code",{className:"docutils literal notranslate"},"reload_plugin")," method is to reload manually all sub-modules the plugin depends on (in case the plugin is a Python package for example)."),(0,n.mdx)("dl",{className:"field-list simple"},(0,n.mdx)("dt",{className:"field-odd"},"Parameters:"),(0,n.mdx)("dd",{className:"field-odd"},(0,n.mdx)("p",{className:!0},(0,n.mdx)("strong",null,"module")," – A Python module.")),(0,n.mdx)("dt",{className:"field-even"},"Returns:"),(0,n.mdx)("dd",{className:"field-even"},(0,n.mdx)("p",{className:!0},"The reloaded plugin module."))),(0,n.mdx)("div",{className:"admonition seealso"},(0,n.mdx)("p",{className:!0},"See also"),(0,n.mdx)("p",{className:!0},(0,n.mdx)("a",{className:"reference internal",href:"#substance_painter_plugins.start_plugin",title:"substance_painter_plugins.start_plugin"},(0,n.mdx)("code",{className:"xref py py-func docutils literal notranslate"},"start_plugin()")),", ",(0,n.mdx)("a",{className:"reference internal",href:"#substance_painter_plugins.close_plugin",title:"substance_painter_plugins.close_plugin"},(0,n.mdx)("code",{className:"xref py py-func docutils literal notranslate"},"close_plugin()")),", ",(0,n.mdx)("a",{className:"reference external",href:"https://docs.python.org/3/library/importlib.html#importlib.reload"},"importlib.reload(module) documentation"),".")))),(0,n.mdx)("dl",{className:"py function"},(0,n.mdx)("dt",{className:"sig sig-object py",id:"substance_painter_plugins.startup_module_names"},"substance_painter_plugins.startup_module_names()",(0,n.mdx)("a",{className:"headerlink",href:"#substance_painter_plugins.startup_module_names",title:"Link to this definition"}," ")),(0,n.mdx)("dd",null,(0,n.mdx)("p",{className:!0},"List the names of the available ",(0,n.mdx)("em",null,"startup")," modules."),(0,n.mdx)("dl",{className:"field-list simple"},(0,n.mdx)("dt",{className:"field-odd"},"Returns:"),(0,n.mdx)("dd",{className:"field-odd"},(0,n.mdx)("p",{className:!0},"The names of all the available ",(0,n.mdx)("em",null,"startup")," modules.")),(0,n.mdx)("dt",{className:"field-even"},"Return type:"),(0,n.mdx)("dd",{className:"field-even"},(0,n.mdx)("p",{className:!0},"list[str]"))))),(0,n.mdx)("dl",{className:"py function"},(0,n.mdx)("dt",{className:"sig sig-object py",id:"substance_painter_plugins.plugin_module_names"},"substance_painter_plugins.plugin_module_names()",(0,n.mdx)("a",{className:"headerlink",href:"#substance_painter_plugins.plugin_module_names",title:"Link to this definition"}," ")),(0,n.mdx)("dd",null,(0,n.mdx)("p",{className:!0},"List the names of the available ",(0,n.mdx)("em",null,"plugins")," modules."),(0,n.mdx)("dl",{className:"field-list simple"},(0,n.mdx)("dt",{className:"field-odd"},"Returns:"),(0,n.mdx)("dd",{className:"field-odd"},(0,n.mdx)("p",{className:!0},"The names of all the available ",(0,n.mdx)("em",null,"plugins")," modules.")),(0,n.mdx)("dt",{className:"field-even"},"Return type:"),(0,n.mdx)("dd",{className:"field-even"},(0,n.mdx)("p",{className:!0},"list[str]"))))),(0,n.mdx)("dl",{className:"py function"},(0,n.mdx)("dt",{className:"sig sig-object py",id:"substance_painter_plugins.load_startup_modules"},"substance_painter_plugins.load_startup_modules()",(0,n.mdx)("a",{className:"headerlink",href:"#substance_painter_plugins.load_startup_modules",title:"Link to this definition"}," ")),(0,n.mdx)("dd",null,(0,n.mdx)("p",{className:!0},"Load all startup modules."))),(0,n.mdx)("dl",{className:"py function"},(0,n.mdx)("dt",{className:"sig sig-object py",id:"substance_painter_plugins.close_all_plugins"},"substance_painter_plugins.close_all_plugins()",(0,n.mdx)("a",{className:"headerlink",href:"#substance_painter_plugins.close_all_plugins",title:"Link to this definition"}," ")),(0,n.mdx)("dd",null,(0,n.mdx)("p",{className:!0},"Close all started plugins."))),(0,n.mdx)("dl",{className:"py function"},(0,n.mdx)("dt",{className:"sig sig-object py",id:"substance_painter_plugins.update_sys_path"},"substance_painter_plugins.update_sys_path()",(0,n.mdx)("a",{className:"headerlink",href:"#substance_painter_plugins.update_sys_path",title:"Link to this definition"}," ")),(0,n.mdx)("dd",null,(0,n.mdx)("p",{className:!0},"Update ",(0,n.mdx)("code",{className:"docutils literal notranslate"},"sys.path")," according to ",(0,n.mdx)("a",{className:"reference internal",href:"#substance_painter_plugins.path",title:"substance_painter_plugins.path"},(0,n.mdx)("code",{className:"xref py py-obj docutils literal notranslate"},"substance_painter_plugins.path"))," and",(0,n.mdx)("code",{className:"docutils literal notranslate"},"SUBSTANCE_PAINTER_PLUGINS_PATH")," environment variable."))))}p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-api-plugins-substance-painter-plugins-md-046321f13648fbe4e5b1.js.map