{"version":3,"file":"component---src-pages-api-substance-painter-textureset-textureset-md-3cbb37dd56fbdfeb2c85.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/api/substance_painter/textureset/textureset.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/painter-python-api/painter-python-api/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>TextureSet class<a className=\"headerlink\" href=\"#textureset-class\" title=\"Link to this heading\"> </a></h1>\n    <dt className=\"sig sig-object py\" id=\"substance_painter.textureset.TextureSet\">\n      <em className=\"property\">class </em>substance_painter.textureset.TextureSet(<em className=\"sig-param\">material_id: int</em>)<a className=\"headerlink\" href=\"#substance_painter.textureset.TextureSet\" title=\"Link to this definition\"> </a></dt>\n    <p className>A <cite>Substance 3D Painter</cite> Texture Set. A Texture Set has a resolution and a\nnumber of stacks, and can be layered or not.\nIt optionally also has a number of UV Tiles.</p>\n    <p className>It uses a set of baked Mesh map textures. Each Mesh map has a defined MeshMapUsage.</p>\n    <p className>If the corresponding material is not layered, the Texture Set has just one\nstack, which is transparent to the user. If the material is layered, the\nTexture Set has several stacks.</p>\n    <p className>Example</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`import substance_painter.textureset\n\n# Get the Texture Set \"TextureSetName\":\nmy_texture_set = substance_painter.textureset.TextureSet.from_name(\"TextureSetName\")\n\n# Show the resolution of the Texture Set:\nresolution = my_texture_set.get_resolution()\nprint(\"The resolution is {0}x{1}\".format(resolution.width, resolution.height))\n\n# Change the resolution of the Texture Set:\nmy_texture_set.set_resolution(substance_painter.textureset.Resolution(512, 512))\n\n# Show information about layering:\nif my_texture_set.is_layered_material():\n    print(\"{0} is a layered material\".format(my_texture_set.name()))\n\n    # Get the stack called \"Mask1\" from the Texture Set:\n    mask_stack = my_texture_set.get_stack(\"Mask1\")\n\n    # Print \"TextureSetName/Mask1\":\n    print(mask_stack)\n\nelse:\n    print(\"{0} is not a layered material\".format(my_texture_set.name()))\n\n# Show information about UV Tiles:\nif my_texture_set.has_uv_tiles():\n    print(\"{0} has UV Tiles:\".format(my_texture_set.name()))\n    for tile in my_texture_set.all_uv_tiles():\n        print(\"Tile {0} {1}\".format(tile.u, tile.v))\n\n# List all the stacks of the Texture Set \"TextureSetName\":\nfor stack in my_texture_set.all_stacks():\n    print(stack)\n\n# Query ambiant occlusion Mesh map of the Texture Set \"TextureSetName\":\nusage = substance_painter.textureset.MeshMapUsage.AO\nmeshMapResource = my_texture_set.get_mesh_map_resource(usage)\n\nif meshMapResource is None :\n    print(\"{0} does not have a Mesh map defined for usage {1}\"\n        .format(my_texture_set.name(), usage))\nelse:\n    print(\"{0} uses {1} Mesh map for usage {2}\"\n        .format(my_texture_set.name(), meshMapResource, usage))\n\n# Unset ambiant occlusion Mesh map of the Texture Set \"TextureSetName\":\nmy_texture_set.set_mesh_map_resource(usage, None)\n`}</code></pre>\n    <div className=\"admonition seealso\">\n      <p className>See also</p>\n      <p className><a className=\"reference internal\" href=\"stack.html#substance_painter.textureset.Stack\" title=\"substance_painter.textureset.Stack\"><code className=\"xref py py-class docutils literal notranslate\">Stack</code></a>,\n        <a className=\"reference internal\" href=\"uvtile.html#substance_painter.textureset.UVTile\" title=\"substance_painter.textureset.UVTile\"><code className=\"xref py py-class docutils literal notranslate\">UVTile</code></a>,\n        <a className=\"reference internal\" href=\"index.html#substance_painter.textureset.MeshMapUsage\" title=\"substance_painter.textureset.MeshMapUsage\"><code className=\"xref py py-class docutils literal notranslate\">MeshMapUsage</code></a>,\n        <a className=\"reference external\" href=\"https://www.adobe.com/go/painter-texture-set\">Texture Set documentation</a>.</p>\n    </div>\n    <dl className=\"py method\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter.textureset.TextureSet.from_name\">\n        <em className=\"property\">static </em>from_name(<em className=\"sig-param\">texture_set_name: str</em>)<a className=\"headerlink\" href=\"#substance_painter.textureset.TextureSet.from_name\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>Get the Texture Set from its name.</p>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Parameters:</dt>\n          <dd className=\"field-odd\"><p className><strong>texture_set_name</strong> (<em>str</em>) – The name of the Texture Set.</p>\n          </dd>\n        </dl>\n        <div className=\"admonition note\">\n          <p className>Note</p>\n          <p className>The Texture Set name is case sensitive.</p>\n        </div>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Raises:</dt>\n          <dd className=\"field-odd\"><ul className=\"simple\">\n              <li><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ProjectError\" title=\"substance_painter.exception.ProjectError\"><strong>ProjectError</strong></a> – If no project is opened.</p></li>\n              <li><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ServiceNotFoundError\" title=\"substance_painter.exception.ServiceNotFoundError\"><strong>ServiceNotFoundError</strong></a> – If Substance 3D Painter has not started all its services yet.</p></li>\n              <li><p className><strong>TypeError</strong> – If <code className=\"docutils literal notranslate\">texture_set_name</code> is missing or not a string.</p></li>\n              <li><p className><strong>ValueError</strong> – If <code className=\"docutils literal notranslate\">texture_set_name</code> is empty.</p></li>\n              <li><p className><strong>ValueError</strong> – If there is no Texture Set with the name <code className=\"docutils literal notranslate\">texture_set_name</code>.</p></li>\n            </ul>\n          </dd>\n        </dl>\n      </dd></dl>\n    <dl className=\"py method\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter.textureset.TextureSet.name\">\nname() → str<a className=\"headerlink\" href=\"#substance_painter.textureset.TextureSet.name\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>Get the Texture Set name.</p>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Returns:</dt>\n          <dd className=\"field-odd\"><p className>The name of the Texture Set.</p>\n          </dd>\n          <dt className=\"field-even\">Return type:</dt>\n          <dd className=\"field-even\"><p className>str</p>\n          </dd>\n          <dt className=\"field-odd\">Raises:</dt>\n          <dd className=\"field-odd\"><ul className=\"simple\">\n              <li><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ProjectError\" title=\"substance_painter.exception.ProjectError\"><strong>ProjectError</strong></a> – If no project is opened.</p></li>\n              <li><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ServiceNotFoundError\" title=\"substance_painter.exception.ServiceNotFoundError\"><strong>ServiceNotFoundError</strong></a> – If Substance 3D Painter has not started all its services yet.</p></li>\n              <li><p className><strong>ValueError</strong> – If the Texture Set is invalid.</p></li>\n            </ul>\n          </dd>\n        </dl>\n      </dd></dl>\n    <dl className=\"py method\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter.textureset.TextureSet.is_layered_material\">\nis_layered_material() → bool<a className=\"headerlink\" href=\"#substance_painter.textureset.TextureSet.is_layered_material\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>Query if this Texture Set uses material layering.</p>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Returns:</dt>\n          <dd className=\"field-odd\"><p className><code className=\"docutils literal notranslate\">True</code> if the Texture Set uses material layering, <code className=\"docutils literal notranslate\">False</code> otherwise.</p>\n          </dd>\n          <dt className=\"field-even\">Return type:</dt>\n          <dd className=\"field-even\"><p className>bool</p>\n          </dd>\n          <dt className=\"field-odd\">Raises:</dt>\n          <dd className=\"field-odd\"><ul className=\"simple\">\n              <li><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ProjectError\" title=\"substance_painter.exception.ProjectError\"><strong>ProjectError</strong></a> – If no project is opened.</p></li>\n              <li><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ServiceNotFoundError\" title=\"substance_painter.exception.ServiceNotFoundError\"><strong>ServiceNotFoundError</strong></a> – If Substance 3D Painter has not started all its services yet.</p></li>\n              <li><p className><strong>ValueError</strong> – If the Texture Set is invalid.</p></li>\n            </ul>\n          </dd>\n        </dl>\n      </dd></dl>\n    <dl className=\"py method\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter.textureset.TextureSet.all_stacks\">\nall_stacks() → List[<a className=\"reference internal\" href=\"stack.html#substance_painter.textureset.Stack\" title=\"substance_painter.textureset.Stack\">Stack</a>]<a className=\"headerlink\" href=\"#substance_painter.textureset.TextureSet.all_stacks\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>List all the stacks from this Texture Set.</p>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Returns:</dt>\n          <dd className=\"field-odd\"><p className>All the stacks of this Texture Set.</p>\n          </dd>\n          <dt className=\"field-even\">Return type:</dt>\n          <dd className=\"field-even\"><p className>list[<a className=\"reference internal\" href=\"stack.html#substance_painter.textureset.Stack\" title=\"substance_painter.textureset.Stack\">Stack</a>]</p>\n          </dd>\n          <dt className=\"field-odd\">Raises:</dt>\n          <dd className=\"field-odd\"><ul className=\"simple\">\n              <li><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ProjectError\" title=\"substance_painter.exception.ProjectError\"><strong>ProjectError</strong></a> – If no project is opened.</p></li>\n              <li><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ServiceNotFoundError\" title=\"substance_painter.exception.ServiceNotFoundError\"><strong>ServiceNotFoundError</strong></a> – If Substance 3D Painter has not started all its services yet.</p></li>\n              <li><p className><strong>ValueError</strong> – If the Texture Set is invalid.</p></li>\n            </ul>\n          </dd>\n        </dl>\n        <div className=\"admonition seealso\">\n          <p className>See also</p>\n          <p className><a className=\"reference internal\" href=\"#substance_painter.textureset.TextureSet.get_stack\" title=\"substance_painter.textureset.TextureSet.get_stack\"><code className=\"xref py py-meth docutils literal notranslate\">TextureSet.get_stack()</code></a>.</p>\n        </div>\n      </dd></dl>\n    <dl className=\"py method\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter.textureset.TextureSet.get_stack\">\nget_stack(<em className=\"sig-param\">stack_name: str = ''</em>) → <a className=\"reference internal\" href=\"stack.html#substance_painter.textureset.Stack\" title=\"substance_painter.textureset.Stack\">Stack</a><a className=\"headerlink\" href=\"#substance_painter.textureset.TextureSet.get_stack\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>Get a stack of this Texture Set from its name.</p>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Parameters:</dt>\n          <dd className=\"field-odd\"><p className><strong>stack_name</strong> (<em>str</em>) – The stack name.\nLeave empty if the Texture Set does not use material layering.</p>\n          </dd>\n        </dl>\n        <div className=\"admonition note\">\n          <p className>Note</p>\n          <p className>The stack name is case sensitive.</p>\n        </div>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Returns:</dt>\n          <dd className=\"field-odd\"><p className>The stack.</p>\n          </dd>\n          <dt className=\"field-even\">Return type:</dt>\n          <dd className=\"field-even\"><p className><a className=\"reference internal\" href=\"stack.html#substance_painter.textureset.Stack\" title=\"substance_painter.textureset.Stack\">Stack</a></p>\n          </dd>\n          <dt className=\"field-odd\">Raises:</dt>\n          <dd className=\"field-odd\"><ul className=\"simple\">\n              <li><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ProjectError\" title=\"substance_painter.exception.ProjectError\"><strong>ProjectError</strong></a> – If no project is opened.</p></li>\n              <li><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ServiceNotFoundError\" title=\"substance_painter.exception.ServiceNotFoundError\"><strong>ServiceNotFoundError</strong></a> – If Substance 3D Painter has not started all its services yet.</p></li>\n              <li><p className><strong>ValueError</strong> – If the Texture Set is invalid.</p></li>\n            </ul>\n          </dd>\n        </dl>\n        <div className=\"admonition seealso\">\n          <p className>See also</p>\n          <p className><a className=\"reference internal\" href=\"#substance_painter.textureset.TextureSet.all_stacks\" title=\"substance_painter.textureset.TextureSet.all_stacks\"><code className=\"xref py py-meth docutils literal notranslate\">TextureSet.all_stacks()</code></a>.</p>\n        </div>\n      </dd></dl>\n    <dl className=\"py method\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter.textureset.TextureSet.get_resolution\">\nget_resolution() → <a className=\"reference internal\" href=\"index.html#substance_painter.textureset.Resolution\" title=\"substance_painter.textureset.Resolution\">Resolution</a><a className=\"headerlink\" href=\"#substance_painter.textureset.TextureSet.get_resolution\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>Get the Texture Set resolution.</p>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Returns:</dt>\n          <dd className=\"field-odd\"><p className>The resolution of this Texture Set in pixels.</p>\n          </dd>\n          <dt className=\"field-even\">Return type:</dt>\n          <dd className=\"field-even\"><p className><a className=\"reference internal\" href=\"index.html#substance_painter.textureset.Resolution\" title=\"substance_painter.textureset.Resolution\">Resolution</a></p>\n          </dd>\n          <dt className=\"field-odd\">Raises:</dt>\n          <dd className=\"field-odd\"><ul className=\"simple\">\n              <li><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ProjectError\" title=\"substance_painter.exception.ProjectError\"><strong>ProjectError</strong></a> – If no project is opened.</p></li>\n              <li><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ServiceNotFoundError\" title=\"substance_painter.exception.ServiceNotFoundError\"><strong>ServiceNotFoundError</strong></a> – If Substance 3D Painter has not started all its services yet.</p></li>\n              <li><p className><strong>ValueError</strong> – If the Texture Set is invalid.</p></li>\n            </ul>\n          </dd>\n        </dl>\n        <div className=\"admonition seealso\">\n          <p className>See also</p>\n          <p className><a className=\"reference internal\" href=\"#substance_painter.textureset.TextureSet.set_resolution\" title=\"substance_painter.textureset.TextureSet.set_resolution\"><code className=\"xref py py-meth docutils literal notranslate\">TextureSet.set_resolution()</code></a>,\n            <a className=\"reference internal\" href=\"index.html#substance_painter.textureset.set_resolutions\" title=\"substance_painter.textureset.set_resolutions\"><code className=\"xref py py-meth docutils literal notranslate\">set_resolutions()</code></a>.</p>\n        </div>\n      </dd></dl>\n    <dl className=\"py method\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter.textureset.TextureSet.set_resolution\">\nset_resolution(<em className=\"sig-param\">new_resolution: <a className=\"reference internal\" href=\"index.html#substance_painter.textureset.Resolution\" title=\"substance_painter.textureset.Resolution\">Resolution</a></em>)<a className=\"headerlink\" href=\"#substance_painter.textureset.TextureSet.set_resolution\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>Set the resolution of the Texture Set.</p>\n        <p className>See resolution restrictions: <a className=\"reference internal\" href=\"index.html#substance_painter.textureset.Resolution\" title=\"substance_painter.textureset.Resolution\"><code className=\"xref py py-class docutils literal notranslate\">Resolution</code></a>.</p>\n        <div className=\"admonition note\">\n          <p className>Note</p>\n          <p className>For any Texture Set, you can find its accepted resolutions in the\n“Texture Set Settings” window, in the “Size” menu.</p>\n        </div>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Parameters:</dt>\n          <dd className=\"field-odd\"><p className><strong>new_resolution</strong> (<a className=\"reference internal\" href=\"index.html#substance_painter.textureset.Resolution\" title=\"substance_painter.textureset.Resolution\"><em>Resolution</em></a>) – The new resolution for this Texture Set.</p>\n          </dd>\n          <dt className=\"field-even\">Raises:</dt>\n          <dd className=\"field-even\"><ul className=\"simple\">\n              <li><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ProjectError\" title=\"substance_painter.exception.ProjectError\"><strong>ProjectError</strong></a> – If no project is opened.</p></li>\n              <li><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ServiceNotFoundError\" title=\"substance_painter.exception.ServiceNotFoundError\"><strong>ServiceNotFoundError</strong></a> – If Substance 3D Painter has not started all its services yet.</p></li>\n              <li><p className><strong>ValueError</strong> – If <code className=\"docutils literal notranslate\">new_resolution</code> is not a valid resolution.</p></li>\n              <li><p className><strong>ValueError</strong> – If the Texture Set is invalid.</p></li>\n            </ul>\n          </dd>\n        </dl>\n        <div className=\"admonition seealso\">\n          <p className>See also</p>\n          <p className><a className=\"reference internal\" href=\"#substance_painter.textureset.TextureSet.get_resolution\" title=\"substance_painter.textureset.TextureSet.get_resolution\"><code className=\"xref py py-meth docutils literal notranslate\">TextureSet.get_resolution()</code></a>,\n            <a className=\"reference internal\" href=\"index.html#substance_painter.textureset.set_resolutions\" title=\"substance_painter.textureset.set_resolutions\"><code className=\"xref py py-meth docutils literal notranslate\">set_resolutions()</code></a>.</p>\n        </div>\n      </dd></dl>\n    <dl className=\"py method\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter.textureset.TextureSet.has_uv_tiles\">\nhas_uv_tiles() → bool<a className=\"headerlink\" href=\"#substance_painter.textureset.TextureSet.has_uv_tiles\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>Check if the Texture Set uses the UV Tiles workflow.</p>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Returns:</dt>\n          <dd className=\"field-odd\"><p className><code className=\"docutils literal notranslate\">True</code> if the Texture Set uses the UV Tiles workflow, <code className=\"docutils literal notranslate\">False</code> otherwise.</p>\n          </dd>\n          <dt className=\"field-even\">Return type:</dt>\n          <dd className=\"field-even\"><p className>bool</p>\n          </dd>\n          <dt className=\"field-odd\">Raises:</dt>\n          <dd className=\"field-odd\"><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ProjectError\" title=\"substance_painter.exception.ProjectError\"><strong>ProjectError</strong></a> – If no project is opened.</p>\n          </dd>\n        </dl>\n        <div className=\"admonition seealso\">\n          <p className>See also</p>\n          <p className><a className=\"reference internal\" href=\"#substance_painter.textureset.TextureSet.all_uv_tiles\" title=\"substance_painter.textureset.TextureSet.all_uv_tiles\"><code className=\"xref py py-meth docutils literal notranslate\">all_uv_tiles()</code></a></p>\n        </div>\n      </dd></dl>\n    <dl className=\"py method\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter.textureset.TextureSet.uv_tile\">\nuv_tile(<em className=\"sig-param\">u_coord: int</em>, <em className=\"sig-param\">v_coord: int</em>) → <a className=\"reference internal\" href=\"uvtile.html#substance_painter.textureset.UVTile\" title=\"substance_painter.textureset.UVTile\">UVTile</a><a className=\"headerlink\" href=\"#substance_painter.textureset.TextureSet.uv_tile\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>Get the Texture Set UV Tile at (u, v) coordinates.</p>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Parameters:</dt>\n          <dd className=\"field-odd\"><ul className=\"simple\">\n              <li><p className><strong>u_coord</strong> (<em>int</em>) – The u coordinate of the UV Tile.</p></li>\n              <li><p className><strong>v_coord</strong> (<em>int</em>) – The v coordinate of the UV Tile.</p></li>\n            </ul>\n          </dd>\n          <dt className=\"field-even\">Returns:</dt>\n          <dd className=\"field-even\"><p className>The Texture Set UV Tile at (u, v) coordinate.</p>\n          </dd>\n          <dt className=\"field-odd\">Return type:</dt>\n          <dd className=\"field-odd\"><p className><a className=\"reference internal\" href=\"uvtile.html#substance_painter.textureset.UVTile\" title=\"substance_painter.textureset.UVTile\">UVTile</a></p>\n          </dd>\n          <dt className=\"field-even\">Raises:</dt>\n          <dd className=\"field-even\"><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ProjectError\" title=\"substance_painter.exception.ProjectError\"><strong>ProjectError</strong></a> – If no project is opened.</p>\n          </dd>\n        </dl>\n      </dd></dl>\n    <dl className=\"py method\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter.textureset.TextureSet.all_uv_tiles\">\nall_uv_tiles() → List[<a className=\"reference internal\" href=\"uvtile.html#substance_painter.textureset.UVTile\" title=\"substance_painter.textureset.UVTile\">UVTile</a>]<a className=\"headerlink\" href=\"#substance_painter.textureset.TextureSet.all_uv_tiles\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>Get the list of the Texture Set UV Tiles, ordered by U then V coordinates.</p>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Returns:</dt>\n          <dd className=\"field-odd\"><p className>List of the Texture Set UV Tiles, ordered by U then V coordinates.</p>\n          </dd>\n          <dt className=\"field-even\">Return type:</dt>\n          <dd className=\"field-even\"><p className><em>List</em>[<a className=\"reference internal\" href=\"uvtile.html#substance_painter.textureset.UVTile\" title=\"substance_painter.textureset.UVTile\">UVTile</a>]</p>\n          </dd>\n          <dt className=\"field-odd\">Raises:</dt>\n          <dd className=\"field-odd\"><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ProjectError\" title=\"substance_painter.exception.ProjectError\"><strong>ProjectError</strong></a> – If no project is opened.</p>\n          </dd>\n        </dl>\n        <div className=\"admonition seealso\">\n          <p className>See also</p>\n          <p className><a className=\"reference internal\" href=\"#substance_painter.textureset.TextureSet.has_uv_tiles\" title=\"substance_painter.textureset.TextureSet.has_uv_tiles\"><code className=\"xref py py-meth docutils literal notranslate\">has_uv_tiles()</code></a></p>\n        </div>\n      </dd></dl>\n    <dl className=\"py method\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter.textureset.TextureSet.get_uvtiles_resolution\">\nget_uvtiles_resolution() → Dict[<a className=\"reference internal\" href=\"uvtile.html#substance_painter.textureset.UVTile\" title=\"substance_painter.textureset.UVTile\">UVTile</a>, <a className=\"reference internal\" href=\"index.html#substance_painter.textureset.Resolution\" title=\"substance_painter.textureset.Resolution\">Resolution</a>]<a className=\"headerlink\" href=\"#substance_painter.textureset.TextureSet.get_uvtiles_resolution\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>Get all UV Tiles that have a different resolution from the Texture Set, associated\nto their effective resolution.</p>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Returns:</dt>\n          <dd className=\"field-odd\"><p className>The dictionary of uvtiles and their                associated resolution.</p>\n          </dd>\n          <dt className=\"field-even\">Return type:</dt>\n          <dd className=\"field-even\"><p className><em>Dict</em>[<a className=\"reference internal\" href=\"uvtile.html#substance_painter.textureset.UVTile\" title=\"substance_painter.textureset.UVTile\">UVTile</a>, <a className=\"reference internal\" href=\"index.html#substance_painter.textureset.Resolution\" title=\"substance_painter.textureset.Resolution\">Resolution</a>]</p>\n          </dd>\n          <dt className=\"field-odd\">Raises:</dt>\n          <dd className=\"field-odd\"><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ProjectError\" title=\"substance_painter.exception.ProjectError\"><strong>ProjectError</strong></a> – If no project is opened.</p>\n          </dd>\n        </dl>\n        <div className=\"admonition seealso\">\n          <p className>See also</p>\n          <p className><a className=\"reference internal\" href=\"uvtile.html#substance_painter.textureset.UVTile.get_resolution\" title=\"substance_painter.textureset.UVTile.get_resolution\"><code className=\"xref py py-meth docutils literal notranslate\">UVTile.get_resolution()</code></a></p>\n        </div>\n      </dd></dl>\n    <dl className=\"py method\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter.textureset.TextureSet.set_uvtiles_resolution\">\nset_uvtiles_resolution(<em className=\"sig-param\">resolutions: Dict[<a className=\"reference internal\" href=\"uvtile.html#substance_painter.textureset.UVTile\" title=\"substance_painter.textureset.UVTile\">UVTile</a>, <a className=\"reference internal\" href=\"index.html#substance_painter.textureset.Resolution\" title=\"substance_painter.textureset.Resolution\">Resolution</a>]</em>)<a className=\"headerlink\" href=\"#substance_painter.textureset.TextureSet.set_uvtiles_resolution\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>Set the resolution of the given UV Tiles to the associated resolution.</p>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Parameters:</dt>\n          <dd className=\"field-odd\"><p className><strong>resolutions</strong> (<em>Dict</em><em>[</em><a className=\"reference internal\" href=\"uvtile.html#substance_painter.textureset.UVTile\" title=\"substance_painter.textureset.UVTile\"><em>UVTile</em></a><em>, </em><a className=\"reference internal\" href=\"index.html#substance_painter.textureset.Resolution\" title=\"substance_painter.textureset.Resolution\"><em>Resolution</em></a><em>]</em>) – The dictionary of UV Tiles\nand their associated resolution.</p>\n          </dd>\n          <dt className=\"field-even\">Raises:</dt>\n          <dd className=\"field-even\"><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ProjectError\" title=\"substance_painter.exception.ProjectError\"><strong>ProjectError</strong></a> – If no project is opened.</p>\n          </dd>\n        </dl>\n        <div className=\"admonition seealso\">\n          <p className>See also</p>\n          <p className><a className=\"reference internal\" href=\"uvtile.html#substance_painter.textureset.UVTile.set_resolution\" title=\"substance_painter.textureset.UVTile.set_resolution\"><code className=\"xref py py-meth docutils literal notranslate\">UVTile.set_resolution()</code></a></p>\n        </div>\n      </dd></dl>\n    <dl className=\"py method\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter.textureset.TextureSet.reset_uvtiles_resolution\">\nreset_uvtiles_resolution(<em className=\"sig-param\">uvtiles: List[<a className=\"reference internal\" href=\"uvtile.html#substance_painter.textureset.UVTile\" title=\"substance_painter.textureset.UVTile\">UVTile</a>]</em>)<a className=\"headerlink\" href=\"#substance_painter.textureset.TextureSet.reset_uvtiles_resolution\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>Reset the resolution of the given UV Tiles to the parent Texture Set’s resolution.</p>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Parameters:</dt>\n          <dd className=\"field-odd\"><p className><strong>uvtiles</strong> (<em>List</em><em>[</em><a className=\"reference internal\" href=\"uvtile.html#substance_painter.textureset.UVTile\" title=\"substance_painter.textureset.UVTile\"><em>UVTile</em></a><em>]</em>) – The list of UV Tiles to be reset.</p>\n          </dd>\n          <dt className=\"field-even\">Raises:</dt>\n          <dd className=\"field-even\"><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ProjectError\" title=\"substance_painter.exception.ProjectError\"><strong>ProjectError</strong></a> – If no project is opened.</p>\n          </dd>\n        </dl>\n        <div className=\"admonition seealso\">\n          <p className>See also</p>\n          <p className><a className=\"reference internal\" href=\"uvtile.html#substance_painter.textureset.UVTile.reset_resolution\" title=\"substance_painter.textureset.UVTile.reset_resolution\"><code className=\"xref py py-meth docutils literal notranslate\">UVTile.reset_resolution()</code></a></p>\n        </div>\n      </dd></dl>\n    <dl className=\"py method\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter.textureset.TextureSet.all_mesh_names\">\nall_mesh_names() → List[str]<a className=\"headerlink\" href=\"#substance_painter.textureset.TextureSet.all_mesh_names\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>Get the list of meshes of the Texture Set.\nWhen using UV Tiles, the result is the union of the mesh names of every UV Tiles.</p>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Raises:</dt>\n          <dd className=\"field-odd\"><ul className=\"simple\">\n              <li><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ProjectError\" title=\"substance_painter.exception.ProjectError\"><strong>ProjectError</strong></a> – If no project is opened.</p></li>\n              <li><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ServiceNotFoundError\" title=\"substance_painter.exception.ServiceNotFoundError\"><strong>ServiceNotFoundError</strong></a> – If Substance Painter has not started all its services yet.</p></li>\n            </ul>\n          </dd>\n        </dl>\n        <div className=\"admonition seealso\">\n          <p className>See also</p>\n          <p className><a className=\"reference internal\" href=\"uvtile.html#substance_painter.textureset.UVTile.all_mesh_names\" title=\"substance_painter.textureset.UVTile.all_mesh_names\"><code className=\"xref py py-meth docutils literal notranslate\">UVTile.all_mesh_names()</code></a></p>\n        </div>\n      </dd></dl>\n    <dl className=\"py method\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter.textureset.TextureSet.get_mesh_map_resource\">\nget_mesh_map_resource(<em className=\"sig-param\">usage: <a className=\"reference internal\" href=\"index.html#substance_painter.textureset.MeshMapUsage\" title=\"substance_painter.textureset.MeshMapUsage\">MeshMapUsage</a></em>) → <a className=\"reference internal\" href=\"../resource.html#substance_painter.resource.ResourceID\" title=\"substance_painter.resource.ResourceID\">ResourceID</a> | None<a className=\"headerlink\" href=\"#substance_painter.textureset.TextureSet.get_mesh_map_resource\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>Query the Mesh map for the given usage of the Texture Set.</p>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Parameters:</dt>\n          <dd className=\"field-odd\"><p className><strong>usage</strong> (<a className=\"reference internal\" href=\"index.html#substance_painter.textureset.MeshMapUsage\" title=\"substance_painter.textureset.MeshMapUsage\"><em>MeshMapUsage</em></a>) – Which Mesh map usage is queried.</p>\n          </dd>\n          <dt className=\"field-even\">Returns:</dt>\n          <dd className=\"field-even\"><p className>The Mesh map resource or None.</p>\n          </dd>\n          <dt className=\"field-odd\">Return type:</dt>\n          <dd className=\"field-odd\"><p className><a className=\"reference internal\" href=\"../resource.html#substance_painter.resource.ResourceID\" title=\"substance_painter.resource.ResourceID\">ResourceID</a></p>\n          </dd>\n        </dl>\n      </dd></dl>\n    <dl className=\"py method\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter.textureset.TextureSet.set_mesh_map_resource\">\nset_mesh_map_resource(<em className=\"sig-param\">usage: <a className=\"reference internal\" href=\"index.html#substance_painter.textureset.MeshMapUsage\" title=\"substance_painter.textureset.MeshMapUsage\">MeshMapUsage</a></em>, <em className=\"sig-param\">new_mesh_map: <a className=\"reference internal\" href=\"../resource.html#substance_painter.resource.ResourceID\" title=\"substance_painter.resource.ResourceID\">ResourceID</a> | None</em>) → None<a className=\"headerlink\" href=\"#substance_painter.textureset.TextureSet.set_mesh_map_resource\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>Replace the Mesh map for the given usage of the Texture Set.</p>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Parameters:</dt>\n          <dd className=\"field-odd\"><ul className=\"simple\">\n              <li><p className><strong>usage</strong> (<a className=\"reference internal\" href=\"index.html#substance_painter.textureset.MeshMapUsage\" title=\"substance_painter.textureset.MeshMapUsage\"><em>MeshMapUsage</em></a>) – Which Mesh map usage to replace.</p></li>\n              <li><p className><strong>new_mesh_map</strong> (<a className=\"reference internal\" href=\"../resource.html#substance_painter.resource.ResourceID\" title=\"substance_painter.resource.ResourceID\"><em>ResourceID</em></a><em>, </em><em>optional</em>) – The new Mesh map or None to unset.</p></li>\n            </ul>\n          </dd>\n          <dt className=\"field-even\">Raises:</dt>\n          <dd className=\"field-even\"><ul className=\"simple\">\n              <li><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ResourceNotFoundError\" title=\"substance_painter.exception.ResourceNotFoundError\"><strong>ResourceNotFoundError</strong></a> – If the resource <code className=\"docutils literal notranslate\">new_mesh_map</code> is not found or is not of type\n    IMAGE.</p></li>\n              <li><p className><strong>ValueError</strong> – If the resource is already used for another Mesh map usage for the\n    Texture Set.</p></li>\n            </ul>\n          </dd>\n        </dl>\n      </dd></dl>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","_excluded","mdx","_extends","mdxType","className","href","title","id","parentName","isMDXComponent"],"sourceRoot":""}