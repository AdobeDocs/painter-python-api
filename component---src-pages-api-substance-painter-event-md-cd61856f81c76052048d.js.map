{"version":3,"file":"component---src-pages-api-substance-painter-event-md-cd61856f81c76052048d.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/api/substance_painter/event.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/painter-python-api/painter-python-api/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <div className=\"wy-grid-for-nav\">\n      <div className=\"wy-nav-content\">\n        <div className=\"rst-content style-external-links\">\n          <div className=\"document\" itemScope=\"itemscope\" itemType=\"http://schema.org/Article\" role=\"main\">\n            <div itemProp=\"articleBody\">\n              <h1>event module<a className=\"headerlink\" href=\"#module-substance_painter.event\" title=\"Link to this heading\"> </a></h1>\n              <p className>The <code className=\"docutils literal notranslate\">event</code> module defines application events and allows to subscribe to\nnotifications.</p>\n              <dl className=\"py class\">\n                <dt className=\"sig sig-object py\" id=\"substance_painter.event.Event\">\n                  <em className=\"property\">class </em>substance_painter.event.Event<a className=\"headerlink\" href=\"#substance_painter.event.Event\" title=\"Link to this definition\"> </a></dt>\n                <dd><p className>Base event class.</p>\n                </dd></dl>\n              <h2>Event dispatcher<a className=\"headerlink\" href=\"#event-dispatcher\" title=\"Link to this heading\"> </a></h2>\n              <dl className=\"py data\">\n                <dt className=\"sig sig-object py\" id=\"substance_painter.event.DISPATCHER\">\nsubstance_painter.event.DISPATCHER<em className=\"property\"> = &lt;substance_painter.event.Dispatcher object&gt;</em><a className=\"headerlink\" href=\"#substance_painter.event.DISPATCHER\" title=\"Link to this definition\"> </a></dt>\n                <dd><p className>The event dispatcher instance that will be used by the application.</p>\n                </dd></dl>\n              <dl className=\"py class\">\n                <dt className=\"sig sig-object py\" id=\"substance_painter.event.Dispatcher\">\n                  <em className=\"property\">class </em>substance_painter.event.Dispatcher<a className=\"headerlink\" href=\"#substance_painter.event.Dispatcher\" title=\"Link to this definition\"> </a></dt>\n                <dd><p className>The Event Dispatcher.</p>\n                  <dl className=\"py method\">\n                    <dt className=\"sig sig-object py\" id=\"substance_painter.event.Dispatcher.connect\">\nconnect(<em className=\"sig-param\">event_cls: Type[<a className=\"reference internal\" href=\"#substance_painter.event.Event\" title=\"substance_painter.event.Event\">Event</a>]</em>, <em className=\"sig-param\">callback: Callable[[<a className=\"reference internal\" href=\"#substance_painter.event.Event\" title=\"substance_painter.event.Event\">Event</a>], Any]</em>) → None<a className=\"headerlink\" href=\"#substance_painter.event.Dispatcher.connect\" title=\"Link to this definition\"> </a></dt>\n                    <dd><p className>Connect a callback to handle the given event type.</p>\n                      <p className>The callback is stored as a weak reference, it is automatically disconnected\nonce the callback gets garbage collected.</p>\n                      <dl className=\"field-list simple\">\n                        <dt className=\"field-odd\">Parameters:</dt>\n                        <dd className=\"field-odd\"><ul className=\"simple\">\n                            <li><p className><strong>event_cls</strong> (<a className=\"reference internal\" href=\"resource.html#substance_painter.resource.Type\" title=\"substance_painter.resource.Type\"><em>Type</em></a><em>[</em><a className=\"reference internal\" href=\"#substance_painter.event.Event\" title=\"substance_painter.event.Event\"><em>Event</em></a><em>]</em>) – An event class.</p></li>\n                            <li><p className><strong>callback</strong> (<em>Callable</em><em>[</em><em>[</em><a className=\"reference internal\" href=\"#substance_painter.event.Event\" title=\"substance_painter.event.Event\"><em>Event</em></a><em>]</em><em>, </em><em>Any</em><em>]</em>) – A method or a bound method that will be called when\nan instance of the given event class is triggered.</p></li>\n                          </ul>\n                        </dd>\n                      </dl>\n                    </dd></dl>\n                  <dl className=\"py method\">\n                    <dt className=\"sig sig-object py\" id=\"substance_painter.event.Dispatcher.connect_strong\">\nconnect_strong(<em className=\"sig-param\">event_cls: Type[<a className=\"reference internal\" href=\"#substance_painter.event.Event\" title=\"substance_painter.event.Event\">Event</a>]</em>, <em className=\"sig-param\">callback: Callable[[<a className=\"reference internal\" href=\"#substance_painter.event.Event\" title=\"substance_painter.event.Event\">Event</a>], Any]</em>) → None<a className=\"headerlink\" href=\"#substance_painter.event.Dispatcher.connect_strong\" title=\"Link to this definition\"> </a></dt>\n                    <dd><p className>Connect a callback to handle the given event type.</p>\n                      <p className>The callback is stored as a strong reference, it is never automatically disconnected.</p>\n                      <dl className=\"field-list simple\">\n                        <dt className=\"field-odd\">Parameters:</dt>\n                        <dd className=\"field-odd\"><ul className=\"simple\">\n                            <li><p className><strong>event_cls</strong> (<a className=\"reference internal\" href=\"resource.html#substance_painter.resource.Type\" title=\"substance_painter.resource.Type\"><em>Type</em></a><em>[</em><a className=\"reference internal\" href=\"#substance_painter.event.Event\" title=\"substance_painter.event.Event\"><em>Event</em></a><em>]</em>) – An event class.</p></li>\n                            <li><p className><strong>callback</strong> (<em>Callable</em><em>[</em><em>[</em><a className=\"reference internal\" href=\"#substance_painter.event.Event\" title=\"substance_painter.event.Event\"><em>Event</em></a><em>]</em><em>, </em><em>Any</em><em>]</em>) – A method or a bound method that will be called when\nan instance of the given event class is triggered.</p></li>\n                          </ul>\n                        </dd>\n                      </dl>\n                    </dd></dl>\n                  <dl className=\"py method\">\n                    <dt className=\"sig sig-object py\" id=\"substance_painter.event.Dispatcher.disconnect\">\ndisconnect(<em className=\"sig-param\">event_cls: Type[<a className=\"reference internal\" href=\"#substance_painter.event.Event\" title=\"substance_painter.event.Event\">Event</a>]</em>, <em className=\"sig-param\">callback: Callable[[<a className=\"reference internal\" href=\"#substance_painter.event.Event\" title=\"substance_painter.event.Event\">Event</a>], Any]</em>) → None<a className=\"headerlink\" href=\"#substance_painter.event.Dispatcher.disconnect\" title=\"Link to this definition\"> </a></dt>\n                    <dd><p className>Disconnect a previously connected callback.</p>\n                      <p className>This method can be called to explicitly disconnect a callback.</p>\n                      <dl className=\"field-list simple\">\n                        <dt className=\"field-odd\">Parameters:</dt>\n                        <dd className=\"field-odd\"><ul className=\"simple\">\n                            <li><p className><strong>event_cls</strong> (<a className=\"reference internal\" href=\"resource.html#substance_painter.resource.Type\" title=\"substance_painter.resource.Type\"><em>Type</em></a><em>[</em><a className=\"reference internal\" href=\"#substance_painter.event.Event\" title=\"substance_painter.event.Event\"><em>Event</em></a><em>]</em>) – An event class.</p></li>\n                            <li><p className><strong>callback</strong> (<em>Callable</em><em>[</em><em>[</em><a className=\"reference internal\" href=\"#substance_painter.event.Event\" title=\"substance_painter.event.Event\"><em>Event</em></a><em>]</em><em>, </em><em>Any</em><em>]</em>) – A method or a bound method that has been connected\nto the given event class.</p></li>\n                          </ul>\n                        </dd>\n                      </dl>\n                    </dd></dl>\n                </dd></dl>\n              <h2>Export events<a className=\"headerlink\" href=\"#export-events\" title=\"Link to this heading\"> </a></h2>\n              <dl className=\"py class\">\n                <dt className=\"sig sig-object py\" id=\"substance_painter.event.ExportTexturesAboutToStart\">\n                  <em className=\"property\">class </em>substance_painter.event.ExportTexturesAboutToStart(<em className=\"sig-param\">textures: Dict[Tuple[str, str], List[str]]</em>)<a className=\"headerlink\" href=\"#substance_painter.event.ExportTexturesAboutToStart\" title=\"Link to this definition\"> </a></dt>\n                <dd><p className>Event triggered just before a textures export.</p>\n                  <dl className=\"py attribute\">\n                    <dt className=\"sig sig-object py\" id=\"substance_painter.event.ExportTexturesAboutToStart.textures\">\ntextures<em className=\"property\">: Dict[Tuple[str, str], List[str]]</em><a className=\"headerlink\" href=\"#substance_painter.event.ExportTexturesAboutToStart.textures\" title=\"Link to this definition\"> </a></dt>\n                    <dd><p className>List of texture files\nto be written to disk, grouped by stack (Texture Set name, stack name).</p>\n                      <dl className=\"field-list simple\">\n                        <dt className=\"field-odd\">Type:</dt>\n                        <dd className=\"field-odd\"><p className>Dict[Tuple[str, str], List[str]]</p>\n                        </dd>\n                      </dl>\n                    </dd></dl>\n                </dd></dl>\n              <dl className=\"py class\">\n                <dt className=\"sig sig-object py\" id=\"substance_painter.event.ExportTexturesEnded\">\n                  <em className=\"property\">class </em>substance_painter.event.ExportTexturesEnded(<em className=\"sig-param\">status: <a className=\"reference internal\" href=\"export.html#substance_painter.export.ExportStatus\" title=\"substance_painter.export.ExportStatus\">ExportStatus</a></em>, <em className=\"sig-param\">message: str</em>, <em className=\"sig-param\">textures: Dict[Tuple[str, str], List[str]]</em>)<a className=\"headerlink\" href=\"#substance_painter.event.ExportTexturesEnded\" title=\"Link to this definition\"> </a></dt>\n                <dd><p className>Event triggered after textures export is finished.</p>\n                  <dl className=\"py attribute\">\n                    <dt className=\"sig sig-object py\" id=\"substance_painter.event.ExportTexturesEnded.message\">\nmessage<em className=\"property\">: str</em><a className=\"headerlink\" href=\"#substance_painter.event.ExportTexturesEnded.message\" title=\"Link to this definition\"> </a></dt>\n                    <dd><p className>Human readable status message.</p>\n                      <dl className=\"field-list simple\">\n                        <dt className=\"field-odd\">Type:</dt>\n                        <dd className=\"field-odd\"><p className>str</p>\n                        </dd>\n                      </dl>\n                    </dd></dl>\n                  <dl className=\"py attribute\">\n                    <dt className=\"sig sig-object py\" id=\"substance_painter.event.ExportTexturesEnded.status\">\nstatus<em className=\"property\">: <a className=\"reference internal\" href=\"export.html#substance_painter.export.ExportStatus\" title=\"substance_painter.export.ExportStatus\">ExportStatus</a></em><a className=\"headerlink\" href=\"#substance_painter.event.ExportTexturesEnded.status\" title=\"Link to this definition\"> </a></dt>\n                    <dd><p className>Status code.</p>\n                      <dl className=\"field-list simple\">\n                        <dt className=\"field-odd\">Type:</dt>\n                        <dd className=\"field-odd\"><p className><a className=\"reference internal\" href=\"export.html#substance_painter.export.ExportStatus\" title=\"substance_painter.export.ExportStatus\">ExportStatus</a></p>\n                        </dd>\n                      </dl>\n                    </dd></dl>\n                  <dl className=\"py attribute\">\n                    <dt className=\"sig sig-object py\" id=\"substance_painter.event.ExportTexturesEnded.textures\">\ntextures<em className=\"property\">: Dict[Tuple[str, str], List[str]]</em><a className=\"headerlink\" href=\"#substance_painter.event.ExportTexturesEnded.textures\" title=\"Link to this definition\"> </a></dt>\n                    <dd><p className>List of texture files\nwritten to disk, grouped by stack (Texture Set name, stack name).</p>\n                      <dl className=\"field-list simple\">\n                        <dt className=\"field-odd\">Type:</dt>\n                        <dd className=\"field-odd\"><p className>Dict[Tuple[str, str], List[str]]</p>\n                        </dd>\n                      </dl>\n                    </dd></dl>\n                </dd></dl>\n              <h2>Project events<a className=\"headerlink\" href=\"#project-events\" title=\"Link to this heading\"> </a></h2>\n              <div className=\"admonition note\">\n                <p className>Note</p>\n                <p className>Project loading is done asynchronously. When the event <code className=\"docutils literal notranslate\">ProjectOpened</code> or\n                  <code className=\"docutils literal notranslate\">ProjectCreated</code> is triggered, the project may still be loading. The event\n                  <code className=\"docutils literal notranslate\">ProjectEditionEntered</code> is triggered when the project is ready to work with.</p>\n              </div>\n              <dl className=\"py class\">\n                <dt className=\"sig sig-object py\" id=\"substance_painter.event.ProjectOpened\">\n                  <em className=\"property\">class </em>substance_painter.event.ProjectOpened<a className=\"headerlink\" href=\"#substance_painter.event.ProjectOpened\" title=\"Link to this definition\"> </a></dt>\n                <dd><p className>Event triggered when an existing project has been opened.</p>\n                </dd></dl>\n              <dl className=\"py class\">\n                <dt className=\"sig sig-object py\" id=\"substance_painter.event.ProjectCreated\">\n                  <em className=\"property\">class </em>substance_painter.event.ProjectCreated<a className=\"headerlink\" href=\"#substance_painter.event.ProjectCreated\" title=\"Link to this definition\"> </a></dt>\n                <dd><p className>Event triggered when a new project has been created.</p>\n                </dd></dl>\n              <dl className=\"py class\">\n                <dt className=\"sig sig-object py\" id=\"substance_painter.event.ProjectAboutToClose\">\n                  <em className=\"property\">class </em>substance_painter.event.ProjectAboutToClose<a className=\"headerlink\" href=\"#substance_painter.event.ProjectAboutToClose\" title=\"Link to this definition\"> </a></dt>\n                <dd><p className>Event triggered just before closing the current project.</p>\n                </dd></dl>\n              <dl className=\"py class\">\n                <dt className=\"sig sig-object py\" id=\"substance_painter.event.ProjectAboutToSave\">\n                  <em className=\"property\">class </em>substance_painter.event.ProjectAboutToSave(<em className=\"sig-param\">file_path: str</em>)<a className=\"headerlink\" href=\"#substance_painter.event.ProjectAboutToSave\" title=\"Link to this definition\"> </a></dt>\n                <dd><p className>Event triggered just before saving the current project.</p>\n                  <dl className=\"py attribute\">\n                    <dt className=\"sig sig-object py\" id=\"substance_painter.event.ProjectAboutToSave.file_path\">\nfile_path<em className=\"property\">: str</em><a className=\"headerlink\" href=\"#substance_painter.event.ProjectAboutToSave.file_path\" title=\"Link to this definition\"> </a></dt>\n                    <dd><p className>The destination file.</p>\n                      <dl className=\"field-list simple\">\n                        <dt className=\"field-odd\">Type:</dt>\n                        <dd className=\"field-odd\"><p className>str</p>\n                        </dd>\n                      </dl>\n                    </dd></dl>\n                </dd></dl>\n              <dl className=\"py class\">\n                <dt className=\"sig sig-object py\" id=\"substance_painter.event.ProjectSaved\">\n                  <em className=\"property\">class </em>substance_painter.event.ProjectSaved<a className=\"headerlink\" href=\"#substance_painter.event.ProjectSaved\" title=\"Link to this definition\"> </a></dt>\n                <dd><p className>Event triggered once the current project is saved.</p>\n                </dd></dl>\n              <dl className=\"py class\">\n                <dt className=\"sig sig-object py\" id=\"substance_painter.event.ProjectEditionEntered\">\n                  <em className=\"property\">class </em>substance_painter.event.ProjectEditionEntered<a className=\"headerlink\" href=\"#substance_painter.event.ProjectEditionEntered\" title=\"Link to this definition\"> </a></dt>\n                <dd><p className>Event triggered when the project is fully loaded and ready to work with.</p>\n                  <p className>When edition is entered, it is for example possible to query/edit the project\nproperties, to bake textures or do project export.</p>\n                </dd></dl>\n              <dl className=\"py class\">\n                <dt className=\"sig sig-object py\" id=\"substance_painter.event.ProjectEditionLeft\">\n                  <em className=\"property\">class </em>substance_painter.event.ProjectEditionLeft<a className=\"headerlink\" href=\"#substance_painter.event.ProjectEditionLeft\" title=\"Link to this definition\"> </a></dt>\n                <dd><p className>Event triggered when the current project can non longer be edited.</p>\n                </dd></dl>\n              <dl className=\"py class\">\n                <dt className=\"sig sig-object py\" id=\"substance_painter.event.BusyStatusChanged\">\n                  <em className=\"property\">class </em>substance_painter.event.BusyStatusChanged(<em className=\"sig-param\">busy: bool</em>)<a className=\"headerlink\" href=\"#substance_painter.event.BusyStatusChanged\" title=\"Link to this definition\"> </a></dt>\n                <dd><p className>Event triggered when Substance 3D Painter busy state changed.</p>\n                  <div className=\"admonition seealso\">\n                    <p className>See also</p>\n                    <p className><a className=\"reference internal\" href=\"project.html#substance_painter.project.execute_when_not_busy\" title=\"substance_painter.project.execute_when_not_busy\"><code className=\"xref py py-func docutils literal notranslate\">substance_painter.project.execute_when_not_busy()</code></a>,\n                      <a className=\"reference internal\" href=\"project.html#substance_painter.project.is_busy\" title=\"substance_painter.project.is_busy\"><code className=\"xref py py-func docutils literal notranslate\">substance_painter.project.is_busy()</code></a>.</p>\n                  </div>\n                  <dl className=\"py attribute\">\n                    <dt className=\"sig sig-object py\" id=\"substance_painter.event.BusyStatusChanged.busy\">\nbusy<em className=\"property\">: bool</em><a className=\"headerlink\" href=\"#substance_painter.event.BusyStatusChanged.busy\" title=\"Link to this definition\"> </a></dt>\n                    <dd><p className>Whether Substance 3D Painter is busy now.</p>\n                      <dl className=\"field-list simple\">\n                        <dt className=\"field-odd\">Type:</dt>\n                        <dd className=\"field-odd\"><p className>bool</p>\n                        </dd>\n                      </dl>\n                    </dd></dl>\n                </dd></dl>\n              <dl className=\"py class\">\n                <dt className=\"sig sig-object py\" id=\"substance_painter.event.TextureStateEvent\">\n                  <em className=\"property\">class </em>substance_painter.event.TextureStateEvent(<em className=\"sig-param\">action: <a className=\"reference internal\" href=\"#substance_painter.event.TextureStateEventAction\" title=\"substance_painter.event.TextureStateEventAction\">TextureStateEventAction</a></em>, <em className=\"sig-param\">stack_id: int</em>, <em className=\"sig-param\">tile_indices: Tuple[int, int]</em>, <em className=\"sig-param\">channel_type: <a className=\"reference internal\" href=\"textureset/index.html#substance_painter.textureset.ChannelType\" title=\"substance_painter.textureset.ChannelType\">ChannelType</a></em>, <em className=\"sig-param\">cache_key: int</em>)<a className=\"headerlink\" href=\"#substance_painter.event.TextureStateEvent\" title=\"Link to this definition\"> </a></dt>\n                <dd><p className>Event triggered when a document texture is added, removed or updated.</p>\n                  <dl className=\"py attribute\">\n                    <dt className=\"sig sig-object py\" id=\"substance_painter.event.TextureStateEvent.action\">\naction<em className=\"property\">: <a className=\"reference internal\" href=\"#substance_painter.event.TextureStateEventAction\" title=\"substance_painter.event.TextureStateEventAction\">TextureStateEventAction</a></em><a className=\"headerlink\" href=\"#substance_painter.event.TextureStateEvent.action\" title=\"Link to this definition\"> </a></dt>\n                    <dd><p className>Performed action (add, remove, update).</p>\n                      <dl className=\"field-list simple\">\n                        <dt className=\"field-odd\">Type:</dt>\n                        <dd className=\"field-odd\"><p className><a className=\"reference internal\" href=\"#substance_painter.event.TextureStateEventAction\" title=\"substance_painter.event.TextureStateEventAction\">TextureStateEventAction</a></p>\n                        </dd>\n                      </dl>\n                    </dd></dl>\n                  <dl className=\"py attribute\">\n                    <dt className=\"sig sig-object py\" id=\"substance_painter.event.TextureStateEvent.cache_key\">\ncache_key<em className=\"property\">: int</em><a className=\"headerlink\" href=\"#substance_painter.event.TextureStateEvent.cache_key\" title=\"Link to this definition\"> </a></dt>\n                    <dd><p className>The texture current cache key. Those cache keys are persistent across sessions.</p>\n                      <dl className=\"field-list simple\">\n                        <dt className=\"field-odd\">Type:</dt>\n                        <dd className=\"field-odd\"><p className>int</p>\n                        </dd>\n                      </dl>\n                    </dd></dl>\n                  <dl className=\"py method\">\n                    <dt className=\"sig sig-object py\" id=\"substance_painter.event.TextureStateEvent.cache_key_invalidation_throttling_period\">\n                      <em className=\"property\">static </em>cache_key_invalidation_throttling_period() → timedelta<a className=\"headerlink\" href=\"#substance_painter.event.TextureStateEvent.cache_key_invalidation_throttling_period\" title=\"Link to this definition\"> </a></dt>\n                    <dd><p className>Get the minimum duration between two texture update events (for a given texture).</p>\n                      <dl className=\"field-list simple\">\n                        <dt className=\"field-odd\">Returns:</dt>\n                        <dd className=\"field-odd\"><p className>The minimum duration between two update events.</p>\n                        </dd>\n                        <dt className=\"field-even\">Return type:</dt>\n                        <dd className=\"field-even\"><p className>datetime.timedelta</p>\n                        </dd>\n                      </dl>\n                    </dd></dl>\n                  <dl className=\"py attribute\">\n                    <dt className=\"sig sig-object py\" id=\"substance_painter.event.TextureStateEvent.channel_type\">\nchannel_type<em className=\"property\">: <a className=\"reference internal\" href=\"textureset/index.html#substance_painter.textureset.ChannelType\" title=\"substance_painter.textureset.ChannelType\">ChannelType</a></em><a className=\"headerlink\" href=\"#substance_painter.event.TextureStateEvent.channel_type\" title=\"Link to this definition\"> </a></dt>\n                    <dd><p className>The document channel type.</p>\n                      <dl className=\"field-list simple\">\n                        <dt className=\"field-odd\">Type:</dt>\n                        <dd className=\"field-odd\"><p className><a className=\"reference internal\" href=\"textureset/index.html#substance_painter.textureset.ChannelType\" title=\"substance_painter.textureset.ChannelType\">substance_painter.textureset.ChannelType</a></p>\n                        </dd>\n                      </dl>\n                    </dd></dl>\n                  <dl className=\"py method\">\n                    <dt className=\"sig sig-object py\" id=\"substance_painter.event.TextureStateEvent.set_cache_key_invalidation_throttling_period\">\n                      <em className=\"property\">static </em>set_cache_key_invalidation_throttling_period(<em className=\"sig-param\">period: timedelta</em>) → None<a className=\"headerlink\" href=\"#substance_painter.event.TextureStateEvent.set_cache_key_invalidation_throttling_period\" title=\"Link to this definition\"> </a></dt>\n                    <dd><p className>Set the minimum duration between two texture update events (for a given texture).</p>\n                      <p className>Warning: this setting is global and every work made in a callback associated to this event\nmay greatly hurt the painting experience.</p>\n                      <dl className=\"field-list simple\">\n                        <dt className=\"field-odd\">Parameters:</dt>\n                        <dd className=\"field-odd\"><p className><strong>period</strong> (<em>datetime.timedelta</em>) – The minimum duration between two update events, can’t\nbe lower than 500ms.</p>\n                        </dd>\n                        <dt className=\"field-even\">Raises:</dt>\n                        <dd className=\"field-even\"><p className><strong>ValueError</strong> – If period is below 500ms.</p>\n                        </dd>\n                      </dl>\n                    </dd></dl>\n                  <dl className=\"py attribute\">\n                    <dt className=\"sig sig-object py\" id=\"substance_painter.event.TextureStateEvent.stack_id\">\nstack_id<em className=\"property\">: int</em><a className=\"headerlink\" href=\"#substance_painter.event.TextureStateEvent.stack_id\" title=\"Link to this definition\"> </a></dt>\n                    <dd><p className>The stack the texture bellongs to, can be used to create a\n                        <a className=\"reference internal\" href=\"textureset/stack.html#substance_painter.textureset.Stack\" title=\"substance_painter.textureset.Stack\"><code className=\"xref py py-class docutils literal notranslate\">substance_painter.textureset.Stack</code></a> instance.</p>\n                      <dl className=\"field-list simple\">\n                        <dt className=\"field-odd\">Type:</dt>\n                        <dd className=\"field-odd\"><p className>int</p>\n                        </dd>\n                      </dl>\n                    </dd></dl>\n                  <dl className=\"py attribute\">\n                    <dt className=\"sig sig-object py\" id=\"substance_painter.event.TextureStateEvent.tile_indices\">\ntile_indices<em className=\"property\">: Tuple[int, int]</em><a className=\"headerlink\" href=\"#substance_painter.event.TextureStateEvent.tile_indices\" title=\"Link to this definition\"> </a></dt>\n                    <dd><p className>The uv tile indices.</p>\n                      <dl className=\"field-list simple\">\n                        <dt className=\"field-odd\">Type:</dt>\n                        <dd className=\"field-odd\"><p className>Tuple[int, int]</p>\n                        </dd>\n                      </dl>\n                    </dd></dl>\n                </dd></dl>\n              <dl className=\"py class\">\n                <dt className=\"sig sig-object py\" id=\"substance_painter.event.TextureStateEventAction\">\n                  <em className=\"property\">class </em>substance_painter.event.TextureStateEventAction(<em className=\"sig-param\">value</em>)<a className=\"headerlink\" href=\"#substance_painter.event.TextureStateEventAction\" title=\"Link to this definition\"> </a></dt>\n                <dd><p className>The TextureStateEvent possible actions.</p>\n                  <p className>Members:</p>\n                  <p className><code className=\"docutils literal notranslate\">ADD</code>, <code className=\"docutils literal notranslate\">UPDATE</code>, <code className=\"docutils literal notranslate\">REMOVE</code></p>\n                </dd></dl>\n              <h2>Shelf events<a className=\"headerlink\" href=\"#shelf-events\" title=\"Link to this heading\"> </a></h2>\n              <dl className=\"py class\">\n                <dt className=\"sig sig-object py\" id=\"substance_painter.event.ShelfCrawlingStarted\">\n                  <em className=\"property\">class </em>substance_painter.event.ShelfCrawlingStarted(<em className=\"sig-param\">shelf_name: str</em>)<a className=\"headerlink\" href=\"#substance_painter.event.ShelfCrawlingStarted\" title=\"Link to this definition\"> </a></dt>\n                <dd><p className>Event triggered when a shelf starts reading the file system to discover\nnew resources.</p>\n                  <div className=\"admonition seealso\">\n                    <p className>See also</p>\n                    <p className><code className=\"xref py py-meth docutils literal notranslate\">Shelf.is_crawling()</code>.</p>\n                  </div>\n                  <dl className=\"py attribute\">\n                    <dt className=\"sig sig-object py\" id=\"substance_painter.event.ShelfCrawlingStarted.shelf_name\">\nshelf_name<em className=\"property\">: str</em><a className=\"headerlink\" href=\"#substance_painter.event.ShelfCrawlingStarted.shelf_name\" title=\"Link to this definition\"> </a></dt>\n                    <dd><p className>Name of the shelf discovering resources.</p>\n                      <dl className=\"field-list simple\">\n                        <dt className=\"field-odd\">Type:</dt>\n                        <dd className=\"field-odd\"><p className>str</p>\n                        </dd>\n                      </dl>\n                    </dd></dl>\n                </dd></dl>\n              <dl className=\"py class\">\n                <dt className=\"sig sig-object py\" id=\"substance_painter.event.ShelfCrawlingEnded\">\n                  <em className=\"property\">class </em>substance_painter.event.ShelfCrawlingEnded(<em className=\"sig-param\">shelf_name: str</em>)<a className=\"headerlink\" href=\"#substance_painter.event.ShelfCrawlingEnded\" title=\"Link to this definition\"> </a></dt>\n                <dd><p className>Event triggered when a shelf has finished discovering new resources and\nloading their thumbnails.</p>\n                  <div className=\"admonition seealso\">\n                    <p className>See also</p>\n                    <p className><code className=\"xref py py-meth docutils literal notranslate\">Shelf.is_crawling()</code>.</p>\n                  </div>\n                  <dl className=\"py attribute\">\n                    <dt className=\"sig sig-object py\" id=\"substance_painter.event.ShelfCrawlingEnded.shelf_name\">\nshelf_name<em className=\"property\">: str</em><a className=\"headerlink\" href=\"#substance_painter.event.ShelfCrawlingEnded.shelf_name\" title=\"Link to this definition\"> </a></dt>\n                    <dd><p className>Name of the shelf that has finished discovering resources.</p>\n                      <dl className=\"field-list simple\">\n                        <dt className=\"field-odd\">Type:</dt>\n                        <dd className=\"field-odd\"><p className>str</p>\n                        </dd>\n                      </dl>\n                    </dd></dl>\n                </dd></dl>\n              <h2>Baking events<a className=\"headerlink\" href=\"#baking-events\" title=\"Link to this heading\"> </a></h2>\n              <dl className=\"py class\">\n                <dt className=\"sig sig-object py\" id=\"substance_painter.event.BakingProcessAboutToStart\">\n                  <em className=\"property\">class </em>substance_painter.event.BakingProcessAboutToStart(<em className=\"sig-param\">stop_source: <a className=\"reference internal\" href=\"async_utils.html#substance_painter.async_utils.StopSource\" title=\"substance_painter.async_utils.StopSource\">StopSource</a></em>)<a className=\"headerlink\" href=\"#substance_painter.event.BakingProcessAboutToStart\" title=\"Link to this definition\"> </a></dt>\n                <dd><p className>Event triggered when a baking is about to start.</p>\n                  <div className=\"admonition seealso\">\n                    <p className>See also</p>\n                    <p className><a className=\"reference internal\" href=\"baking.html#substance_painter.baking.bake_async\" title=\"substance_painter.baking.bake_async\"><code className=\"xref py py-func docutils literal notranslate\">substance_painter.baking.bake_async()</code></a>\n                      <a className=\"reference internal\" href=\"baking.html#substance_painter.baking.bake_selected_textures_async\" title=\"substance_painter.baking.bake_selected_textures_async\"><code className=\"xref py py-func docutils literal notranslate\">substance_painter.baking.bake_selected_textures_async()</code></a></p>\n                  </div>\n                  <dl className=\"py attribute\">\n                    <dt className=\"sig sig-object py\" id=\"substance_painter.event.BakingProcessAboutToStart.stop_source\">\nstop_source<em className=\"property\">: <a className=\"reference internal\" href=\"async_utils.html#substance_painter.async_utils.StopSource\" title=\"substance_painter.async_utils.StopSource\">StopSource</a></em><a className=\"headerlink\" href=\"#substance_painter.event.BakingProcessAboutToStart.stop_source\" title=\"Link to this definition\"> </a></dt>\n                    <dd><p className>The baking stop source, can be compared with the StopSource\nreturned from the baking launch methods to identify the baking process.</p>\n                      <dl className=\"field-list simple\">\n                        <dt className=\"field-odd\">Type:</dt>\n                        <dd className=\"field-odd\"><p className><a className=\"reference internal\" href=\"async_utils.html#substance_painter.async_utils.StopSource\" title=\"substance_painter.async_utils.StopSource\">StopSource</a></p>\n                        </dd>\n                      </dl>\n                    </dd></dl>\n                </dd></dl>\n              <dl className=\"py class\">\n                <dt className=\"sig sig-object py\" id=\"substance_painter.event.BakingProcessProgress\">\n                  <em className=\"property\">class </em>substance_painter.event.BakingProcessProgress(<em className=\"sig-param\">progress: float</em>)<a className=\"headerlink\" href=\"#substance_painter.event.BakingProcessProgress\" title=\"Link to this definition\"> </a></dt>\n                <dd><p className>Event triggered when baking process progress changes.</p>\n                  <div className=\"admonition seealso\">\n                    <p className>See also</p>\n                    <p className><a className=\"reference internal\" href=\"baking.html#substance_painter.baking.bake_async\" title=\"substance_painter.baking.bake_async\"><code className=\"xref py py-func docutils literal notranslate\">substance_painter.baking.bake_async()</code></a>\n                      <a className=\"reference internal\" href=\"baking.html#substance_painter.baking.bake_selected_textures_async\" title=\"substance_painter.baking.bake_selected_textures_async\"><code className=\"xref py py-func docutils literal notranslate\">substance_painter.baking.bake_selected_textures_async()</code></a></p>\n                  </div>\n                  <dl className=\"py attribute\">\n                    <dt className=\"sig sig-object py\" id=\"substance_painter.event.BakingProcessProgress.progress\">\nprogress<em className=\"property\">: float</em><a className=\"headerlink\" href=\"#substance_painter.event.BakingProcessProgress.progress\" title=\"Link to this definition\"> </a></dt>\n                    <dd><p className>The baking progress, between [0.0, 1.0].</p>\n                    </dd></dl>\n                </dd></dl>\n              <dl className=\"py class\">\n                <dt className=\"sig sig-object py\" id=\"substance_painter.event.BakingProcessEnded\">\n                  <em className=\"property\">class </em>substance_painter.event.BakingProcessEnded(<em className=\"sig-param\">status: <a className=\"reference internal\" href=\"baking.html#substance_painter.baking.BakingStatus\" title=\"substance_painter.baking.BakingStatus\">BakingStatus</a></em>)<a className=\"headerlink\" href=\"#substance_painter.event.BakingProcessEnded\" title=\"Link to this definition\"> </a></dt>\n                <dd><p className>Event triggered after baking is finished.</p>\n                  <div className=\"admonition seealso\">\n                    <p className>See also</p>\n                    <p className><a className=\"reference internal\" href=\"baking.html#substance_painter.baking.bake_async\" title=\"substance_painter.baking.bake_async\"><code className=\"xref py py-func docutils literal notranslate\">substance_painter.baking.bake_async()</code></a>\n                      <a className=\"reference internal\" href=\"baking.html#substance_painter.baking.bake_selected_textures_async\" title=\"substance_painter.baking.bake_selected_textures_async\"><code className=\"xref py py-func docutils literal notranslate\">substance_painter.baking.bake_selected_textures_async()</code></a></p>\n                  </div>\n                  <dl className=\"py attribute\">\n                    <dt className=\"sig sig-object py\" id=\"substance_painter.event.BakingProcessEnded.status\">\nstatus<em className=\"property\">: <a className=\"reference internal\" href=\"baking.html#substance_painter.baking.BakingStatus\" title=\"substance_painter.baking.BakingStatus\">BakingStatus</a></em><a className=\"headerlink\" href=\"#substance_painter.event.BakingProcessEnded.status\" title=\"Link to this definition\"> </a></dt>\n                    <dd><p className>Status of the baking process</p>\n                      <dl className=\"field-list simple\">\n                        <dt className=\"field-odd\">Type:</dt>\n                        <dd className=\"field-odd\"><p className><a className=\"reference internal\" href=\"baking.html#substance_painter.baking.BakingStatus\" title=\"substance_painter.baking.BakingStatus\">BakingStatus</a></p>\n                        </dd>\n                      </dl>\n                    </dd></dl>\n                </dd></dl>\n              <h2>Layer stack events<a className=\"headerlink\" href=\"#layer-stack-events\" title=\"Link to this heading\"> </a></h2>\n              <dl className=\"py class\">\n                <dt className=\"sig sig-object py\" id=\"substance_painter.event.LayerStacksModelDataChanged\">\n                  <em className=\"property\">class </em>substance_painter.event.LayerStacksModelDataChanged<a className=\"headerlink\" href=\"#substance_painter.event.LayerStacksModelDataChanged\" title=\"Link to this definition\"> </a></dt>\n                <dd><p className>Event triggered whenever the status of the Layer Stacks changes.</p>\n                  <div className=\"admonition seealso\">\n                    <p className>See also</p>\n                    <p className><code className=\"xref py py-mod docutils literal notranslate\">substance_painter.layerstack</code></p>\n                  </div>\n                </dd></dl>\n              <h2>Application wide events<a className=\"headerlink\" href=\"#application-wide-events\" title=\"Link to this heading\"> </a></h2>\n              <dl className=\"py class\">\n                <dt className=\"sig sig-object py\" id=\"substance_painter.event.EngineComputationsStatusChanged\">\n                  <em className=\"property\">class </em>substance_painter.event.EngineComputationsStatusChanged(<em className=\"sig-param\">engine_computations_enabled: bool</em>)<a className=\"headerlink\" href=\"#substance_painter.event.EngineComputationsStatusChanged\" title=\"Link to this definition\"> </a></dt>\n                <dd><p className>Event triggered whenever the status of the engine computations changes.</p>\n                  <div className=\"admonition seealso\">\n                    <p className>See also</p>\n                    <p className><a className=\"reference internal\" href=\"application.html#substance_painter.application.engine_computations_status\" title=\"substance_painter.application.engine_computations_status\"><code className=\"xref py py-func docutils literal notranslate\">substance_painter.application.engine_computations_status()</code></a></p>\n                  </div>\n                </dd></dl>\n              <h2>Display events<a className=\"headerlink\" href=\"#display-events\" title=\"Link to this heading\"> </a></h2>\n              <dl className=\"py class\">\n                <dt className=\"sig sig-object py\" id=\"substance_painter.event.CameraPropertiesChanged\">\n                  <em className=\"property\">class </em>substance_painter.event.CameraPropertiesChanged(<em className=\"sig-param\">camera_id: int</em>)<a className=\"headerlink\" href=\"#substance_painter.event.CameraPropertiesChanged\" title=\"Link to this definition\"> </a></dt>\n                <dd><p className>Event triggered when the camera properties change.</p>\n                  <div className=\"admonition seealso\">\n                    <p className>See also</p>\n                    <p className><a className=\"reference internal\" href=\"display.html#substance_painter.display.Camera\" title=\"substance_painter.display.Camera\"><code className=\"xref py py-class docutils literal notranslate\">substance_painter.display.Camera</code></a></p>\n                  </div>\n                </dd></dl>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","_excluded","mdx","_extends","mdxType","className","itemScope","itemType","role","itemProp","href","title","id","isMDXComponent"],"sourceRoot":""}