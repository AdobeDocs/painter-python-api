{"version":3,"file":"component---src-pages-api-substance-painter-textureset-uvtile-md-732d061e7507058349c9.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/api/substance_painter/textureset/uvtile.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/painter-python-api/painter-python-api/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`UVTile class — Substance 3D Painter Python API 0.2.11 documentation`}</p>\n    <h1 {...{\n      \"id\": \"uvtile-class\"\n    }}>{`UVTile class`}</h1>\n    <blockquote>\n    </blockquote>\n    <hr></hr>\n    <blockquote>\n      <p parentName=\"blockquote\"><em parentName=\"p\">{`class`}</em>{` substance_painter.textureset.UVTile(`}<em parentName=\"p\">{`u: int`}</em>{`, `}<em parentName=\"p\">{`v: int`}</em>{`, `}<em parentName=\"p\">{`_material_id: int`}</em>{`)\nA UV Tile coordinates.`}</p>\n      <p parentName=\"blockquote\">{`u\nThe U coordinate of the UV Tile.`}</p>\n      <p parentName=\"blockquote\">{`Type:\nint`}</p>\n      <p parentName=\"blockquote\">{`v\nThe V coordinate of the UV Tile.`}</p>\n      <p parentName=\"blockquote\">{`Type:\nint`}</p>\n      <p parentName=\"blockquote\">{`See also`}</p>\n      <p parentName=\"blockquote\"><a parentName=\"p\" {...{\n          \"href\": \"textureset.html#substance_painter.textureset.TextureSet.all_uv_tiles\",\n          \"title\": \"substance_painter.textureset.TextureSet.all_uv_tiles\"\n        }}><inlineCode parentName=\"a\">{`TextureSet.all_uv_tiles()`}</inlineCode></a></p>\n      <p parentName=\"blockquote\">{`get_resolution() → `}<a parentName=\"p\" {...{\n          \"href\": \"index.html#substance_painter.textureset.Resolution\",\n          \"title\": \"substance_painter.textureset.Resolution\"\n        }}>{`Resolution`}</a>{`\nGet the UV Tile resolution.`}</p>\n      <p parentName=\"blockquote\">{`Returns:\nThe resolution of this UV Tile in pixels.`}</p>\n      <p parentName=\"blockquote\">{`Return type:\n`}<a parentName=\"p\" {...{\n          \"href\": \"index.html#substance_painter.textureset.Resolution\",\n          \"title\": \"substance_painter.textureset.Resolution\"\n        }}>{`Resolution`}</a></p>\n      <p parentName=\"blockquote\">{`Raises:`}</p>\n      <ul parentName=\"blockquote\">\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"../exception.html#substance_painter.exception.ProjectError\",\n            \"title\": \"substance_painter.exception.ProjectError\"\n          }}><strong parentName=\"a\">{`ProjectError`}</strong></a>{` – If no project is opened.`}</li>\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"../exception.html#substance_painter.exception.ServiceNotFoundError\",\n            \"title\": \"substance_painter.exception.ServiceNotFoundError\"\n          }}><strong parentName=\"a\">{`ServiceNotFoundError`}</strong></a>{` – If Substance Painter has not started all its services yet.`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If the UV Tile is invalid.`}</li>\n      </ul>\n      <p parentName=\"blockquote\">{`Note`}</p>\n      <p parentName=\"blockquote\">{`The time complexity of this function is linear in the number of UV Tiles in the parent\nTexture Set. If you need to process multiple UV Tiles, please see\n`}<inlineCode parentName=\"p\">{`TextureSet.get_uvtiles_resolution`}</inlineCode>{`.`}</p>\n      <p parentName=\"blockquote\">{`See also`}</p>\n      <p parentName=\"blockquote\"><a parentName=\"p\" {...{\n          \"href\": \"#substance_painter.textureset.UVTile.set_resolution\",\n          \"title\": \"substance_painter.textureset.UVTile.set_resolution\"\n        }}><inlineCode parentName=\"a\">{`UVTile.set_resolution()`}</inlineCode></a>{`\n`}<a parentName=\"p\" {...{\n          \"href\": \"#substance_painter.textureset.UVTile.reset_resolution\",\n          \"title\": \"substance_painter.textureset.UVTile.reset_resolution\"\n        }}><inlineCode parentName=\"a\">{`UVTile.reset_resolution()`}</inlineCode></a>{`\n`}<a parentName=\"p\" {...{\n          \"href\": \"textureset.html#substance_painter.textureset.TextureSet.get_uvtiles_resolution\",\n          \"title\": \"substance_painter.textureset.TextureSet.get_uvtiles_resolution\"\n        }}><inlineCode parentName=\"a\">{`TextureSet.get_uvtiles_resolution()`}</inlineCode></a>{`,`}</p>\n      <p parentName=\"blockquote\">{`set_resolution(`}<em parentName=\"p\">{`new_resolution: `}<a parentName=\"em\" {...{\n            \"href\": \"index.html#substance_painter.textureset.Resolution\",\n            \"title\": \"substance_painter.textureset.Resolution\"\n          }}>{`Resolution`}</a></em>{`)\nSet the resolution of the UV Tile.`}</p>\n      <p parentName=\"blockquote\">{`See resolution restrictions: `}<a parentName=\"p\" {...{\n          \"href\": \"index.html#substance_painter.textureset.Resolution\",\n          \"title\": \"substance_painter.textureset.Resolution\"\n        }}><inlineCode parentName=\"a\">{`Resolution`}</inlineCode></a>{`.`}</p>\n      <p parentName=\"blockquote\">{`Parameters:\n`}<strong parentName=\"p\">{`new_resolution`}</strong>{` (`}<a parentName=\"p\" {...{\n          \"href\": \"index.html#substance_painter.textureset.Resolution\",\n          \"title\": \"substance_painter.textureset.Resolution\"\n        }}><em parentName=\"a\">{`Resolution`}</em></a>{`) – The new resolution for this UV Tile.`}</p>\n      <p parentName=\"blockquote\">{`Raises:`}</p>\n      <ul parentName=\"blockquote\">\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"../exception.html#substance_painter.exception.ProjectError\",\n            \"title\": \"substance_painter.exception.ProjectError\"\n          }}><strong parentName=\"a\">{`ProjectError`}</strong></a>{` – If no project is opened.`}</li>\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"../exception.html#substance_painter.exception.ServiceNotFoundError\",\n            \"title\": \"substance_painter.exception.ServiceNotFoundError\"\n          }}><strong parentName=\"a\">{`ServiceNotFoundError`}</strong></a>{` – If Substance Painter has not started all its services yet.`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If `}<inlineCode parentName=\"li\">{`new_resolution`}</inlineCode>{` is not square.`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If `}<inlineCode parentName=\"li\">{`new_resolution`}</inlineCode>{` is not a valid resolution.`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If the UV Tile is invalid.`}</li>\n      </ul>\n      <p parentName=\"blockquote\">{`Note`}</p>\n      <p parentName=\"blockquote\">{`The time complexity of this function is linear in the number of UVTiles in the parent\nTexture Set. If you need to process multiple UVTiles, please see\n`}<inlineCode parentName=\"p\">{`TextureSet.set_uvtiles_resolution`}</inlineCode>{`.`}</p>\n      <p parentName=\"blockquote\">{`See also`}</p>\n      <p parentName=\"blockquote\"><a parentName=\"p\" {...{\n          \"href\": \"#substance_painter.textureset.UVTile.get_resolution\",\n          \"title\": \"substance_painter.textureset.UVTile.get_resolution\"\n        }}><inlineCode parentName=\"a\">{`UVTile.get_resolution()`}</inlineCode></a>{`,\n`}<a parentName=\"p\" {...{\n          \"href\": \"#substance_painter.textureset.UVTile.reset_resolution\",\n          \"title\": \"substance_painter.textureset.UVTile.reset_resolution\"\n        }}><inlineCode parentName=\"a\">{`UVTile.reset_resolution()`}</inlineCode></a>{`,\n`}<a parentName=\"p\" {...{\n          \"href\": \"textureset.html#substance_painter.textureset.TextureSet.set_resolution\",\n          \"title\": \"substance_painter.textureset.TextureSet.set_resolution\"\n        }}><inlineCode parentName=\"a\">{`TextureSet.set_resolution()`}</inlineCode></a>{`,\n`}<a parentName=\"p\" {...{\n          \"href\": \"textureset.html#substance_painter.textureset.TextureSet.set_uvtiles_resolution\",\n          \"title\": \"substance_painter.textureset.TextureSet.set_uvtiles_resolution\"\n        }}><inlineCode parentName=\"a\">{`TextureSet.set_uvtiles_resolution()`}</inlineCode></a>{`,`}</p>\n      <p parentName=\"blockquote\">{`reset_resolution()\nReset the resolution of the UV Tile to match the parent Texture Set.`}</p>\n      <p parentName=\"blockquote\">{`Raises:`}</p>\n      <ul parentName=\"blockquote\">\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"../exception.html#substance_painter.exception.ProjectError\",\n            \"title\": \"substance_painter.exception.ProjectError\"\n          }}><strong parentName=\"a\">{`ProjectError`}</strong></a>{` – If no project is opened.`}</li>\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"../exception.html#substance_painter.exception.ServiceNotFoundError\",\n            \"title\": \"substance_painter.exception.ServiceNotFoundError\"\n          }}><strong parentName=\"a\">{`ServiceNotFoundError`}</strong></a>{` – If Substance Painter has not started all its services yet.`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If the UV Tile is invalid.`}</li>\n      </ul>\n      <p parentName=\"blockquote\">{`Note`}</p>\n      <p parentName=\"blockquote\">{`The time complexity of this function is linear in the number of UVTiles in the parent\nTexture Set. If you need to process multiple UVTiles, please see\n`}<inlineCode parentName=\"p\">{`TextureSet.reset_uvtiles_resolution`}</inlineCode>{`.`}</p>\n      <p parentName=\"blockquote\">{`See also`}</p>\n      <p parentName=\"blockquote\"><a parentName=\"p\" {...{\n          \"href\": \"#substance_painter.textureset.UVTile.get_resolution\",\n          \"title\": \"substance_painter.textureset.UVTile.get_resolution\"\n        }}><inlineCode parentName=\"a\">{`UVTile.get_resolution()`}</inlineCode></a>{`,\n`}<a parentName=\"p\" {...{\n          \"href\": \"#substance_painter.textureset.UVTile.set_resolution\",\n          \"title\": \"substance_painter.textureset.UVTile.set_resolution\"\n        }}><inlineCode parentName=\"a\">{`UVTile.set_resolution()`}</inlineCode></a>{`,\n`}<a parentName=\"p\" {...{\n          \"href\": \"textureset.html#substance_painter.textureset.TextureSet.reset_uvtiles_resolution\",\n          \"title\": \"substance_painter.textureset.TextureSet.reset_uvtiles_resolution\"\n        }}><inlineCode parentName=\"a\">{`TextureSet.reset_uvtiles_resolution()`}</inlineCode></a>{`,`}</p>\n      <p parentName=\"blockquote\">{`all_mesh_names() → List`}{`[str]`}{`\nGet the list of meshes of the UV Tile.`}</p>\n      <p parentName=\"blockquote\">{`Raises:`}</p>\n      <ul parentName=\"blockquote\">\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"../exception.html#substance_painter.exception.ProjectError\",\n            \"title\": \"substance_painter.exception.ProjectError\"\n          }}><strong parentName=\"a\">{`ProjectError`}</strong></a>{` – If no project is opened.`}</li>\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"../exception.html#substance_painter.exception.ServiceNotFoundError\",\n            \"title\": \"substance_painter.exception.ServiceNotFoundError\"\n          }}><strong parentName=\"a\">{`ServiceNotFoundError`}</strong></a>{` – If Substance Painter has not started all its services yet.`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If the UV Tile is invalid.`}</li>\n      </ul>\n      <p parentName=\"blockquote\">{`See also`}</p>\n      <p parentName=\"blockquote\"><a parentName=\"p\" {...{\n          \"href\": \"textureset.html#substance_painter.textureset.TextureSet.all_mesh_names\",\n          \"title\": \"substance_painter.textureset.TextureSet.all_mesh_names\"\n        }}><inlineCode parentName=\"a\">{`TextureSet.all_mesh_names()`}</inlineCode></a></p>\n    </blockquote>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}