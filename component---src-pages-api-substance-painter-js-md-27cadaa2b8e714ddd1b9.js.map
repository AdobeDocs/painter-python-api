{"version":3,"file":"component---src-pages-api-substance-painter-js-md-27cadaa2b8e714ddd1b9.js","mappings":"oTAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAFDC,EAAUD,EAAVC,WACGC,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GAER,OAAOC,EAAAA,EAAAA,KAACR,GAASS,EAAAA,EAAAA,GAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,eAG5EF,EAAAA,EAAAA,KAAA,8EACAA,EAAAA,EAAAA,KAAA,MACE,GAAM,aAAW,cAEnBA,EAAAA,EAAAA,KAAA,+PAGMA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,mDAAiE,sDAEjGH,EAAAA,EAAAA,KAAA,qBACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,mBAAiB,ibAYlCH,EAAAA,EAAAA,KAAA,2CAAqCA,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KAAG,gBAAsB,sHAG/EH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,mDAAiE,sDAEzFH,EAAAA,EAAAA,KAAA,0BACFA,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,WAAqB,MAAMH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KAAG,OAAa,sDAC9EH,EAAAA,EAAAA,KAAA,mEAEAA,EAAAA,EAAAA,KAAA,+BAEAA,EAAAA,EAAAA,KAAA,sBACFA,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,gBAA0B,+DAGlD,CAEAT,EAAWU,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/api/substance_painter/js.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/painter-python-api/painter-python-api/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`js module — Substance 3D Painter Python API 0.2.11 documentation`}</p>\n    <h1 {...{\n      \"id\": \"js-module\"\n    }}>{`js module`}</h1>\n    <p>{`This module allows to evaluate JavaScript code against the legacy embedded\nJavaScript engine. This allows to use all the exposed JavaScript API through\nPython scripting. The JavaScript API is described in dedicated help accessible\nvia the `}<inlineCode parentName=\"p\">{`Help > Scripting documentation > JavaScript API`}</inlineCode>{` menu found in\nSubstance 3D Painter application.`}</p>\n    <p>{`Example`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`import substance_painter.js\n\n# Get the baking parameters\njs_code = 'alg.baking.textureSetBakingParameters(\"some_texture_set\")'\nbaking_parameters = substance_painter.js.evaluate(js_code)\n\n# substance_painter.js.evaluate returns JSON, so the result is easy to retrieve and use\nmaterial_parameters = baking_parameters['materialParameters']\napply_diffusion = material_parameters['commonParameters']['Apply_Diffusion']\n\n`}</code></pre>\n    <p>{`substance_painter.js.evaluate(`}<em parentName=\"p\">{`js_code: str`}</em>{`) → str\nEvaluate a JavaScript expression.\nThe JavaScript API is described in dedicated help accessible via the\n`}<inlineCode parentName=\"p\">{`Help > Scripting documentation > JavaScript API`}</inlineCode>{` menu found in\nSubstance 3D Painter application.`}</p>\n    <p>{`Parameters:\n`}<strong parentName=\"p\">{`js_code`}</strong>{` (`}<em parentName=\"p\">{`str`}</em>{`) – The block of JavaScript code to be evaluated.`}</p>\n    <p>{`Returns:\nThe JSON formated result of the evaluation.`}</p>\n    <p>{`Return type:\nstr`}</p>\n    <p>{`Raises:\n`}<strong parentName=\"p\">{`RuntimeError`}</strong>{` – If the JavaScript exception evaluation returns an error.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}