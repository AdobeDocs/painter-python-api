{"version":3,"file":"component---src-pages-api-plugins-substance-painter-plugins-md-046321f13648fbe4e5b1.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/api/plugins/substance_painter_plugins.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/painter-python-api/painter-python-api/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>substance_painter_plugins module<a className=\"headerlink\" href=\"#module-substance_painter_plugins\" title=\"Link to this heading\"> </a></h1>\n    <p className>This module allows to manage the <cite>Substance 3D Painter</cite> Plugins: listing existing\nPlugins, loading or unloading a given Plugin, etc.</p>\n    <p className>A <cite>Substance 3D Painter</cite> Plugin is a standard Python module, placed in a path added\nto <a className=\"reference internal\" href=\"#substance_painter_plugins.path\" title=\"substance_painter_plugins.path\"><code className=\"xref py py-obj docutils literal notranslate\">substance_painter_plugins.path</code></a>, which can use the <cite>Substance 3D Painter</cite>\nPython API to do certain tasks.</p>\n    <p className>Example</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`import importlib\nimport substance_painter_plugins\n\n# Get the list of available Plugin names:\nall_plugins_names = substance_painter_plugins.plugin_module_names()\nfor name in all_plugins_names:\n    print(name)\n\n# Load the \"hello world\" Plugin:\nplugin = importlib.import_module(\"hello_plugin\")\n\n# Start the Plugin if it wasn't already:\nif not substance_painter_plugins.is_plugin_started(plugin):\n    substance_painter_plugins.start_plugin(plugin)\n`}</code></pre>\n    <dl className=\"py data\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter_plugins.path\">\nsubstance_painter_plugins.path<em className=\"property\"> = []</em><a className=\"headerlink\" href=\"#substance_painter_plugins.path\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>A list of strings that specifies the search path for plugins.\nInitialized from <code className=\"docutils literal notranslate\">SUBSTANCE_PAINTER_PLUGINS_PATH</code> environment variable, <cite>Substance 3D Painter</cite>\ninstallation directory and <cite>Substance 3D Painter</cite> user resources directory.</p>\n        <p className>You need to call explicitly <a className=\"reference internal\" href=\"#substance_painter_plugins.update_sys_path\" title=\"substance_painter_plugins.update_sys_path\"><code className=\"xref py py-obj docutils literal notranslate\">substance_painter_plugins.update_sys_path</code></a> after updating this\nvariable.</p>\n        <p className>A plugins directory is expected to contain three subdirectories, automatically added to\n          <code className=\"docutils literal notranslate\">sys.path</code>:</p>\n        <blockquote>\n          <div><ul className=\"simple\">\n              <li><p className><strong>plugins</strong> : Modules that are loaded as optional components.</p></li>\n              <li><p className><strong>startup</strong> : Modules that are always loaded at application startup.</p></li>\n              <li><p className><strong>modules</strong> : Utility modules, shared across plugins.</p></li>\n            </ul>\n          </div></blockquote>\n        <p className>Modules in <code className=\"docutils literal notranslate\">plugins/</code> and <code className=\"docutils literal notranslate\">startup/</code> directories are expected to have a <code className=\"docutils literal notranslate\">start_plugin()</code> and\na <code className=\"docutils literal notranslate\">close_plugin()</code> methods, respectively called after loading the module and before unloading it.\nModules added in <code className=\"docutils literal notranslate\">plugins/</code> directory take precedence over modules added in <code className=\"docutils literal notranslate\">startup/</code>\ndirectory.</p>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Type:</dt>\n          <dd className=\"field-odd\"><p className>list</p>\n          </dd>\n        </dl>\n      </dd></dl>\n    <dl className=\"py data\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter_plugins.plugins\">\nsubstance_painter_plugins.plugins<em className=\"property\"> = {}</em><a className=\"headerlink\" href=\"#substance_painter_plugins.plugins\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>Currently started plugins.</p>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Type:</dt>\n          <dd className=\"field-odd\"><p className>dict</p>\n          </dd>\n        </dl>\n      </dd></dl>\n    <dl className=\"py function\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter_plugins.start_plugin\">\nsubstance_painter_plugins.start_plugin(<em className=\"sig-param\">module</em>)<a className=\"headerlink\" href=\"#substance_painter_plugins.start_plugin\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>Start the given <cite>Substance 3D Painter</cite> plugin.</p>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Parameters:</dt>\n          <dd className=\"field-odd\"><p className><strong>module</strong> – A Python module that is expected to have a <code className=\"docutils literal notranslate\">start_plugin</code> method.</p>\n          </dd>\n        </dl>\n      </dd></dl>\n    <dl className=\"py function\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter_plugins.close_plugin\">\nsubstance_painter_plugins.close_plugin(<em className=\"sig-param\">module</em>, <em className=\"sig-param\">gc_collect=True</em>)<a className=\"headerlink\" href=\"#substance_painter_plugins.close_plugin\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>Close the given <cite>Substance 3D Painter</cite> plugin.</p>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Parameters:</dt>\n          <dd className=\"field-odd\"><ul className=\"simple\">\n              <li><p className><strong>module</strong> – A Python module that is expected to have a <code className=\"docutils literal notranslate\">close_plugin</code> method.</p></li>\n              <li><p className><strong>gc_collect</strong> – Run a full garbage collection if set to True.</p></li>\n            </ul>\n          </dd>\n        </dl>\n      </dd></dl>\n    <dl className=\"py function\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter_plugins.is_plugin_started\">\nsubstance_painter_plugins.is_plugin_started(<em className=\"sig-param\">module</em>)<a className=\"headerlink\" href=\"#substance_painter_plugins.is_plugin_started\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>Check if the given plugin is currently started.</p>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Parameters:</dt>\n          <dd className=\"field-odd\"><p className><strong>module</strong> – A Python module.</p>\n          </dd>\n          <dt className=\"field-even\">Returns:</dt>\n          <dd className=\"field-even\"><p className><code className=\"docutils literal notranslate\">True</code> if the given module is currently started, <code className=\"docutils literal notranslate\">False</code> otherwise.</p>\n          </dd>\n        </dl>\n      </dd></dl>\n    <dl className=\"py function\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter_plugins.reload_plugin\">\nsubstance_painter_plugins.reload_plugin(<em className=\"sig-param\">module</em>)<a className=\"headerlink\" href=\"#substance_painter_plugins.reload_plugin\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>Reload a plugin and start it.</p>\n        <p className>Read <a className=\"reference external\" href=\"https://docs.python.org/3/library/importlib.html#importlib.reload\">importlib.reload(module) documentation</a> for possible caveats. See <a className=\"reference internal\" href=\"#substance_painter_plugins.start_plugin\" title=\"substance_painter_plugins.start_plugin\"><code className=\"xref py py-func docutils literal notranslate\">start_plugin()</code></a>\nand <a className=\"reference internal\" href=\"#substance_painter_plugins.close_plugin\" title=\"substance_painter_plugins.close_plugin\"><code className=\"xref py py-func docutils literal notranslate\">close_plugin()</code></a> for details about starting and closing a plugin. If the plugin has\na <code className=\"docutils literal notranslate\">reload_plugin</code> method, it will be executed after closing and before restarting the plugin.\nThe purpose of <code className=\"docutils literal notranslate\">reload_plugin</code> method is to reload manually all sub-modules the plugin\ndepends on (in case the plugin is a Python package for example).</p>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Parameters:</dt>\n          <dd className=\"field-odd\"><p className><strong>module</strong> – A Python module.</p>\n          </dd>\n          <dt className=\"field-even\">Returns:</dt>\n          <dd className=\"field-even\"><p className>The reloaded plugin module.</p>\n          </dd>\n        </dl>\n        <div className=\"admonition seealso\">\n          <p className>See also</p>\n          <p className><a className=\"reference internal\" href=\"#substance_painter_plugins.start_plugin\" title=\"substance_painter_plugins.start_plugin\"><code className=\"xref py py-func docutils literal notranslate\">start_plugin()</code></a>, <a className=\"reference internal\" href=\"#substance_painter_plugins.close_plugin\" title=\"substance_painter_plugins.close_plugin\"><code className=\"xref py py-func docutils literal notranslate\">close_plugin()</code></a>, <a className=\"reference external\" href=\"https://docs.python.org/3/library/importlib.html#importlib.reload\">importlib.reload(module) documentation</a>.</p>\n        </div>\n      </dd></dl>\n    <dl className=\"py function\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter_plugins.startup_module_names\">\nsubstance_painter_plugins.startup_module_names()<a className=\"headerlink\" href=\"#substance_painter_plugins.startup_module_names\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>List the names of the available <em>startup</em> modules.</p>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Returns:</dt>\n          <dd className=\"field-odd\"><p className>The names of all the available <em>startup</em> modules.</p>\n          </dd>\n          <dt className=\"field-even\">Return type:</dt>\n          <dd className=\"field-even\"><p className>list[str]</p>\n          </dd>\n        </dl>\n      </dd></dl>\n    <dl className=\"py function\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter_plugins.plugin_module_names\">\nsubstance_painter_plugins.plugin_module_names()<a className=\"headerlink\" href=\"#substance_painter_plugins.plugin_module_names\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>List the names of the available <em>plugins</em> modules.</p>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Returns:</dt>\n          <dd className=\"field-odd\"><p className>The names of all the available <em>plugins</em> modules.</p>\n          </dd>\n          <dt className=\"field-even\">Return type:</dt>\n          <dd className=\"field-even\"><p className>list[str]</p>\n          </dd>\n        </dl>\n      </dd></dl>\n    <dl className=\"py function\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter_plugins.load_startup_modules\">\nsubstance_painter_plugins.load_startup_modules()<a className=\"headerlink\" href=\"#substance_painter_plugins.load_startup_modules\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>Load all startup modules.</p>\n      </dd></dl>\n    <dl className=\"py function\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter_plugins.close_all_plugins\">\nsubstance_painter_plugins.close_all_plugins()<a className=\"headerlink\" href=\"#substance_painter_plugins.close_all_plugins\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>Close all started plugins.</p>\n      </dd></dl>\n    <dl className=\"py function\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter_plugins.update_sys_path\">\nsubstance_painter_plugins.update_sys_path()<a className=\"headerlink\" href=\"#substance_painter_plugins.update_sys_path\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>Update <code className=\"docutils literal notranslate\">sys.path</code> according to <a className=\"reference internal\" href=\"#substance_painter_plugins.path\" title=\"substance_painter_plugins.path\"><code className=\"xref py py-obj docutils literal notranslate\">substance_painter_plugins.path</code></a> and\n          <code className=\"docutils literal notranslate\">SUBSTANCE_PAINTER_PLUGINS_PATH</code> environment variable.</p>\n      </dd></dl>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","_excluded","mdx","_extends","mdxType","className","href","title","parentName","id","isMDXComponent"],"sourceRoot":""}