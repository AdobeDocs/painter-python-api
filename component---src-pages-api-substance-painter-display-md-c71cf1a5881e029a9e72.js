"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[2913],{44816:function(e,a,s){s.r(a),s.d(a,{_frontmatter:function(){return i},default:function(){return o}});var t=s(87462),n=s(63366),r=(s(15007),s(64983)),l=s(91515),d=["components"],i={},m={_frontmatter:i},c=l.Z;function o(e){var a=e.components,s=(0,n.Z)(e,d);return(0,r.mdx)(c,(0,t.Z)({},m,s,{components:a,mdxType:"MDXLayout"}),(0,r.mdx)("h1",null,"display module",(0,r.mdx)("a",{className:"headerlink",href:"#module-substance_painter.display",title:"Link to this heading"}," ")),(0,r.mdx)("p",{className:!0},"This module exposes functions that change how the model of a project is presented in the viewports. They correspond to settings available in the “Display Settings” window."),(0,r.mdx)("p",{className:!0},"The Environment Map used to light the scene can be retrieved with",(0,r.mdx)("a",{className:"reference internal",href:"#substance_painter.display.get_environment_resource",title:"substance_painter.display.get_environment_resource"},(0,r.mdx)("code",{className:"xref py py-func docutils literal notranslate"},"get_environment_resource()")),", or set with ",(0,r.mdx)("a",{className:"reference internal",href:"#substance_painter.display.set_environment_resource",title:"substance_painter.display.set_environment_resource"},(0,r.mdx)("code",{className:"xref py py-func docutils literal notranslate"},"set_environment_resource()")),". The look up table (LUT) used as a Color Profile can be retrieved with",(0,r.mdx)("a",{className:"reference internal",href:"#substance_painter.display.get_color_lut_resource",title:"substance_painter.display.get_color_lut_resource"},(0,r.mdx)("code",{className:"xref py py-func docutils literal notranslate"},"get_color_lut_resource()")),", or set with ",(0,r.mdx)("a",{className:"reference internal",href:"#substance_painter.display.set_color_lut_resource",title:"substance_painter.display.set_color_lut_resource"},(0,r.mdx)("code",{className:"xref py py-func docutils literal notranslate"},"set_color_lut_resource()")),"."),(0,r.mdx)("p",{className:!0},"Example"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-python"},'import substance_painter.display\n\n# Show the currently used color profile:\ncolor_lut = substance_painter.display.get_color_lut_resource()\nif (color_lut != None):\n    print(color_lut.url())\nelse:\n    print("No color profile is used.")\n\n# Set a different color profile:\nnew_color_lut = substance_painter.resource.ResourceID(context="starter_assets",\n                                                      name="sepia")\nsubstance_painter.display.set_color_lut_resource(new_color_lut)\n\n\n# Show the currently used environment map:\nenvmap = substance_painter.display.get_environment_resource()\nprint(envmap.url())\n\n# Set a different environment map:\nnew_envmap = substance_painter.resource.ResourceID(context="starter_assets",\n                                                   name="Bonifacio Street")\nsubstance_painter.display.set_environment_resource(new_envmap)\n\n\n# Show the currently active tone mapping operator:\ntry:\n    tone_mapping = substance_painter.display.get_tone_mapping()\n    print(tone_mapping)\nexcept RuntimeError:\n    print("The project is color managed; tone mapping is not available")\n\n# Set a different tone mapping:\ntry:\n    new_tone_mapping = substance_painter.display.ToneMappingFunction.ACES\n    substance_painter.display.set_tone_mapping(new_tone_mapping)\nexcept RuntimeError:\n    print("The project is color managed; tone mapping is not available")\n')),(0,r.mdx)("div",{className:"admonition seealso"},(0,r.mdx)("p",{className:!0},"See also"),(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"resource.html#module-substance_painter.resource",title:"substance_painter.resource"},(0,r.mdx)("code",{className:"xref py py-mod docutils literal notranslate"},"substance_painter.resource")),",",(0,r.mdx)("a",{className:"reference external",href:"https://www.adobe.com/go/painter-color-profile"},"Color Profile documentation"),",",(0,r.mdx)("a",{className:"reference external",href:"https://www.adobe.com/go/painter-environment-settings"},"Environment Settings documentation"),",",(0,r.mdx)("a",{className:"reference external",href:"https://substance3d.adobe.com/documentation/spdoc/camera-settings-172818743.html"},"Camera Settings documentation"),".")),(0,r.mdx)("dl",{className:"py class"},(0,r.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.display.ToneMappingFunction"},(0,r.mdx)("em",{className:"property"},"class "),"substance_painter.display.ToneMappingFunction(",(0,r.mdx)("em",{className:"sig-param"},"value"),")",(0,r.mdx)("a",{className:"headerlink",href:"#substance_painter.display.ToneMappingFunction",title:"Link to this definition"}," ")),(0,r.mdx)("dd",null,(0,r.mdx)("p",{className:!0},"Tone mapping function used in display."),(0,r.mdx)("p",{className:!0},"This corresponds to the “Tone mapping” list in the “Camera settings” section of the “Display settings” view."),(0,r.mdx)("p",{className:!0},"Members:"),(0,r.mdx)("table",{className:"docutils align-default"},(0,r.mdx)("thead",null,(0,r.mdx)("tr",{className:"row-odd"},(0,r.mdx)("th",{className:"head"},(0,r.mdx)("p",{className:!0},"Name")),(0,r.mdx)("th",{className:"head"},(0,r.mdx)("p",{className:!0},"Description")))),(0,r.mdx)("tbody",null,(0,r.mdx)("tr",{className:"row-even"},(0,r.mdx)("td",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("code",{className:"docutils literal notranslate"},"Linear"))),(0,r.mdx)("td",null,(0,r.mdx)("p",{className:!0},"Transformation from linear to sRGB without any color remapping. Color values above 1 are clamped."))),(0,r.mdx)("tr",{className:"row-odd"},(0,r.mdx)("td",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("code",{className:"docutils literal notranslate"},"ACES"))),(0,r.mdx)("td",null,(0,r.mdx)("p",{className:!0},"Use the standard color remapping from the Academy Color Encoding System (ACES)."))))))),(0,r.mdx)("dl",{className:"py function"},(0,r.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.display.get_environment_resource"},"substance_painter.display.get_environment_resource() → ",(0,r.mdx)("a",{className:"reference internal",href:"resource.html#substance_painter.resource.ResourceID",title:"substance_painter.resource.ResourceID"},"ResourceID")," | None",(0,r.mdx)("a",{className:"headerlink",href:"#substance_painter.display.get_environment_resource",title:"Link to this definition"}," ")),(0,r.mdx)("dd",null,(0,r.mdx)("p",{className:!0},"Get the environment map resource of the active project."),(0,r.mdx)("dl",{className:"field-list simple"},(0,r.mdx)("dt",{className:"field-odd"},"Returns:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},"The environment map resource or None.")),(0,r.mdx)("dt",{className:"field-even"},"Return type:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"resource.html#substance_painter.resource.ResourceID",title:"substance_painter.resource.ResourceID"},"ResourceID"))),(0,r.mdx)("dt",{className:"field-odd"},"Raises:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("ul",{className:"simple"},(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,r.mdx)("strong",null,"ProjectError"))," – If no project is opened.")),(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"exception.html#substance_painter.exception.ServiceNotFoundError",title:"substance_painter.exception.ServiceNotFoundError"},(0,r.mdx)("strong",null,"ServiceNotFoundError"))," – If Substance 3D Painter has not started all its services yet."))))))),(0,r.mdx)("dl",{className:"py function"},(0,r.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.display.set_environment_resource"},"substance_painter.display.set_environment_resource(",(0,r.mdx)("em",{className:"sig-param"},"new_env_map: ",(0,r.mdx)("a",{className:"reference internal",href:"resource.html#substance_painter.resource.ResourceID",title:"substance_painter.resource.ResourceID"},"ResourceID")),") → None",(0,r.mdx)("a",{className:"headerlink",href:"#substance_painter.display.set_environment_resource",title:"Link to this definition"}," ")),(0,r.mdx)("dd",null,(0,r.mdx)("p",{className:!0},"Set the environment map resource of the active project."),(0,r.mdx)("dl",{className:"field-list simple"},(0,r.mdx)("dt",{className:"field-odd"},"Parameters:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("strong",null,"new_env_map")," (",(0,r.mdx)("a",{className:"reference internal",href:"resource.html#substance_painter.resource.ResourceID",title:"substance_painter.resource.ResourceID"},(0,r.mdx)("em",null,"ResourceID")),") – The new environment map resource.")),(0,r.mdx)("dt",{className:"field-even"},"Raises:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("ul",{className:"simple"},(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,r.mdx)("strong",null,"ProjectError"))," – If no project is opened.")),(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("strong",null,"TypeError")," – If ",(0,r.mdx)("code",{className:"docutils literal notranslate"},"new_env_map")," is not a ResourceID.")),(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"exception.html#substance_painter.exception.ResourceNotFoundError",title:"substance_painter.exception.ResourceNotFoundError"},(0,r.mdx)("strong",null,"ResourceNotFoundError"))," – If the environment map ",(0,r.mdx)("code",{className:"docutils literal notranslate"},"new_env_map")," is not found.")),(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"exception.html#substance_painter.exception.ServiceNotFoundError",title:"substance_painter.exception.ServiceNotFoundError"},(0,r.mdx)("strong",null,"ServiceNotFoundError"))," – If Substance 3D Painter has not started all its services yet."))))))),(0,r.mdx)("dl",{className:"py function"},(0,r.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.display.get_color_lut_resource"},"substance_painter.display.get_color_lut_resource() → ",(0,r.mdx)("a",{className:"reference internal",href:"resource.html#substance_painter.resource.ResourceID",title:"substance_painter.resource.ResourceID"},"ResourceID")," | None",(0,r.mdx)("a",{className:"headerlink",href:"#substance_painter.display.get_color_lut_resource",title:"Link to this definition"}," ")),(0,r.mdx)("dd",null,(0,r.mdx)("p",{className:!0},"Get the color profile LUT resource of the active project."),(0,r.mdx)("dl",{className:"field-list simple"},(0,r.mdx)("dt",{className:"field-odd"},"Returns:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},"The color profile LUT resource or None.")),(0,r.mdx)("dt",{className:"field-even"},"Return type:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"resource.html#substance_painter.resource.ResourceID",title:"substance_painter.resource.ResourceID"},"ResourceID"))),(0,r.mdx)("dt",{className:"field-odd"},"Raises:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("ul",{className:"simple"},(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,r.mdx)("strong",null,"ProjectError"))," – If no project is opened.")),(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"exception.html#substance_painter.exception.ServiceNotFoundError",title:"substance_painter.exception.ServiceNotFoundError"},(0,r.mdx)("strong",null,"ServiceNotFoundError"))," – If Substance 3D Painter has not started all its services yet."))))))),(0,r.mdx)("dl",{className:"py function"},(0,r.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.display.set_color_lut_resource"},"substance_painter.display.set_color_lut_resource(",(0,r.mdx)("em",{className:"sig-param"},"new_color_lut: ",(0,r.mdx)("a",{className:"reference internal",href:"resource.html#substance_painter.resource.ResourceID",title:"substance_painter.resource.ResourceID"},"ResourceID")),") → None",(0,r.mdx)("a",{className:"headerlink",href:"#substance_painter.display.set_color_lut_resource",title:"Link to this definition"}," ")),(0,r.mdx)("dd",null,(0,r.mdx)("p",{className:!0},"Set the color profile LUT resource of the active project."),(0,r.mdx)("dl",{className:"field-list simple"},(0,r.mdx)("dt",{className:"field-odd"},"Parameters:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("strong",null,"new_color_lut")," (",(0,r.mdx)("a",{className:"reference internal",href:"resource.html#substance_painter.resource.ResourceID",title:"substance_painter.resource.ResourceID"},(0,r.mdx)("em",null,"ResourceID")),") – The new color profile LUT.")),(0,r.mdx)("dt",{className:"field-even"},"Raises:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("ul",{className:"simple"},(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,r.mdx)("strong",null,"ProjectError"))," – If no project is opened.")),(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("strong",null,"TypeError")," – If ",(0,r.mdx)("code",{className:"docutils literal notranslate"},"new_color_lut")," is not a ResourceID.")),(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"exception.html#substance_painter.exception.ResourceNotFoundError",title:"substance_painter.exception.ResourceNotFoundError"},(0,r.mdx)("strong",null,"ResourceNotFoundError"))," – If the color profile ",(0,r.mdx)("code",{className:"docutils literal notranslate"},"new_color_lut")," is not found.")),(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"exception.html#substance_painter.exception.ServiceNotFoundError",title:"substance_painter.exception.ServiceNotFoundError"},(0,r.mdx)("strong",null,"ServiceNotFoundError"))," – If Substance 3D Painter has not started all its services yet."))))))),(0,r.mdx)("dl",{className:"py function"},(0,r.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.display.get_tone_mapping"},"substance_painter.display.get_tone_mapping() → ",(0,r.mdx)("a",{className:"reference internal",href:"#substance_painter.display.ToneMappingFunction",title:"substance_painter.display.ToneMappingFunction"},"ToneMappingFunction"),(0,r.mdx)("a",{className:"headerlink",href:"#substance_painter.display.get_tone_mapping",title:"Link to this definition"}," ")),(0,r.mdx)("dd",null,(0,r.mdx)("p",{className:!0},"Get the tone mapping operator used to display the current project."),(0,r.mdx)("div",{className:"admonition note"},(0,r.mdx)("p",{className:!0},"Note"),(0,r.mdx)("p",{className:!0},"The tone mapping function is disabled when color management is enabled. In that case trying to call get_tone_mapping will throw a RuntimeError.")),(0,r.mdx)("dl",{className:"field-list simple"},(0,r.mdx)("dt",{className:"field-odd"},"Returns:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("dl",{className:"simple"},(0,r.mdx)("dt",null,"The tone mapping function currently used by"),(0,r.mdx)("dd",null,(0,r.mdx)("p",{className:!0},"the project."))))),(0,r.mdx)("dt",{className:"field-even"},"Return type:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"#substance_painter.display.ToneMappingFunction",title:"substance_painter.display.ToneMappingFunction"},"ToneMappingFunction"))),(0,r.mdx)("dt",{className:"field-odd"},"Raises:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("ul",{className:"simple"},(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("strong",null,"RuntimeError")," – If the project is color managed.")),(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,r.mdx)("strong",null,"ProjectError"))," – If no project is opened.")),(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"exception.html#substance_painter.exception.ServiceNotFoundError",title:"substance_painter.exception.ServiceNotFoundError"},(0,r.mdx)("strong",null,"ServiceNotFoundError"))," – If Substance 3D Painter has not started all its services yet."))))))),(0,r.mdx)("dl",{className:"py function"},(0,r.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.display.set_tone_mapping"},"substance_painter.display.set_tone_mapping(",(0,r.mdx)("em",{className:"sig-param"},"new_tone_mapping: ",(0,r.mdx)("a",{className:"reference internal",href:"#substance_painter.display.ToneMappingFunction",title:"substance_painter.display.ToneMappingFunction"},"ToneMappingFunction")),") → None",(0,r.mdx)("a",{className:"headerlink",href:"#substance_painter.display.set_tone_mapping",title:"Link to this definition"}," ")),(0,r.mdx)("dd",null,(0,r.mdx)("p",{className:!0},"Set the tone mapping operator to display the current project."),(0,r.mdx)("div",{className:"admonition note"},(0,r.mdx)("p",{className:!0},"Note"),(0,r.mdx)("p",{className:!0},"The tone mapping function is disabled when color management is enabled. In that case trying to call set_tone_mapping will throw a RuntimeError.")),(0,r.mdx)("dl",{className:"field-list simple"},(0,r.mdx)("dt",{className:"field-odd"},"Parameters:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("strong",null,"new_tone_mapping")," (",(0,r.mdx)("a",{className:"reference internal",href:"#substance_painter.display.ToneMappingFunction",title:"substance_painter.display.ToneMappingFunction"},(0,r.mdx)("em",null,"ToneMappingFunction")),") – The new tone mapping function to use in the project.")),(0,r.mdx)("dt",{className:"field-even"},"Raises:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("ul",{className:"simple"},(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("strong",null,"TypeError")," – If ",(0,r.mdx)("code",{className:"docutils literal notranslate"},"new_tone_mapping")," is not a ToneMappingFunction.")),(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("strong",null,"RuntimeError")," – If the project is color managed.")),(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,r.mdx)("strong",null,"ProjectError"))," – If no project is opened.")),(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"exception.html#substance_painter.exception.ServiceNotFoundError",title:"substance_painter.exception.ServiceNotFoundError"},(0,r.mdx)("strong",null,"ServiceNotFoundError"))," – If Substance 3D Painter has not started all its services yet."))))))),(0,r.mdx)("dl",{className:"py class"},(0,r.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.display.CameraProjectionType"},(0,r.mdx)("em",{className:"property"},"class "),"substance_painter.display.CameraProjectionType(",(0,r.mdx)("em",{className:"sig-param"},"value"),")",(0,r.mdx)("a",{className:"headerlink",href:"#substance_painter.display.CameraProjectionType",title:"Link to this definition"}," ")),(0,r.mdx)("dd",null,(0,r.mdx)("p",{className:!0},"Camera projection type."),(0,r.mdx)("p",{className:!0},"Members:"),(0,r.mdx)("table",{className:"docutils align-default"},(0,r.mdx)("thead",null,(0,r.mdx)("tr",{className:"row-odd"},(0,r.mdx)("th",{className:"head"},(0,r.mdx)("p",{className:!0},"Name")),(0,r.mdx)("th",{className:"head"},(0,r.mdx)("p",{className:!0},"Description")))),(0,r.mdx)("tbody",null,(0,r.mdx)("tr",{className:"row-even"},(0,r.mdx)("td",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("code",{className:"docutils literal notranslate"},"Perspective"))),(0,r.mdx)("td",null,(0,r.mdx)("p",{className:!0},"Objects appear smaller when they are far from the camera."))),(0,r.mdx)("tr",{className:"row-odd"},(0,r.mdx)("td",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("code",{className:"docutils literal notranslate"},"Orthographic"))),(0,r.mdx)("td",null,(0,r.mdx)("p",{className:!0},"Preserves relative size of objects regardless its distance from the camera."))))))),(0,r.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.display.Camera"},(0,r.mdx)("em",{className:"property"},"class "),"substance_painter.display.Camera(",(0,r.mdx)("em",{className:"sig-param"},"_camera_id: int"),")",(0,r.mdx)("a",{className:"headerlink",href:"#substance_painter.display.Camera",title:"Link to this definition"}," ")),(0,r.mdx)("p",{className:!0},"Allows the manipulation of the properties of an existing Camera. Coordinates of the camera are defined in the scene space."),(0,r.mdx)("p",{className:!0},"Example"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-python"},'import substance_painter.display\nimport substance_painter.project\n\nsubstance_painter.project.open("C:/projects/MeetMat.spp")\n\n# Get the dimensions of the scene\nbounding_box = substance_painter.project.get_scene_bounding_box()\n\n# Get the main camera\ncamera = substance_painter.display.Camera.get_default_camera()\n\n# Update camera properties\ncamera.projection_type = substance_painter.display.CameraProjectionType.Perspective\n# Move the camera away from the center of the scene\ncamera.position = [\n    bounding_box.center[0] + 15,\n    bounding_box.center[1],\n    bounding_box.center[2] + 15]\n# Rotate the camera (45° of Y-axis)\ncamera.rotation = [0, 45, 0]\n# Update the camera field of view (in degrees)\ncamera.field_of_view = 50\n')),(0,r.mdx)("div",{className:"admonition seealso"},(0,r.mdx)("p",{className:!0},"See also"),(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference external",href:"https://substance3d.adobe.com/documentation/spdoc/camera-settings-172818743.html"},"Camera Settings documentation"),".",(0,r.mdx)("a",{className:"reference internal",href:"project.html#substance_painter.project.get_scene_bounding_box",title:"substance_painter.project.get_scene_bounding_box"},(0,r.mdx)("code",{className:"xref py py-func docutils literal notranslate"},"substance_painter.project.get_scene_bounding_box()")))),(0,r.mdx)("dl",{className:"py method"},(0,r.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.display.Camera.get_default_camera"},(0,r.mdx)("em",{className:"property"},"static "),"get_default_camera() → ",(0,r.mdx)("a",{className:"reference internal",href:"#substance_painter.display.Camera",title:"substance_painter.display.Camera"},"Camera"),(0,r.mdx)("a",{className:"headerlink",href:"#substance_painter.display.Camera.get_default_camera",title:"Link to this definition"}," ")),(0,r.mdx)("dd",null,(0,r.mdx)("p",{className:!0},"Get the default camera."),(0,r.mdx)("dl",{className:"field-list simple"},(0,r.mdx)("dt",{className:"field-odd"},"Returns:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},"The default (main) camera.")),(0,r.mdx)("dt",{className:"field-even"},"Return type:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"#substance_painter.display.Camera",title:"substance_painter.display.Camera"},"Camera"))),(0,r.mdx)("dt",{className:"field-odd"},"Raises:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("ul",{className:"simple"},(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,r.mdx)("strong",null,"ProjectError"))," – If no project is opened.")),(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("strong",null,"RuntimeError")," – If no camera has been found."))))))),(0,r.mdx)("dl",{className:"py property"},(0,r.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.display.Camera.position"},(0,r.mdx)("em",{className:"property"},"property "),"position",(0,r.mdx)("em",{className:"property"},": List[float]"),(0,r.mdx)("a",{className:"headerlink",href:"#substance_painter.display.Camera.position",title:"Link to this definition"}," ")),(0,r.mdx)("dd",null,(0,r.mdx)("p",{className:!0},"The position (x,y,z) of the camera."),(0,r.mdx)("dl",{className:"field-list simple"},(0,r.mdx)("dt",{className:"field-odd"},"Getter:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},"Returns the position of the camera.")),(0,r.mdx)("dt",{className:"field-even"},"Setter:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("p",{className:!0},"Sets the position of the camera.")),(0,r.mdx)("dt",{className:"field-odd"},"Type:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},"List[float]")),(0,r.mdx)("dt",{className:"field-even"},"Raises:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,r.mdx)("strong",null,"ProjectError"))," – If no project is opened."))))),(0,r.mdx)("dl",{className:"py property"},(0,r.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.display.Camera.rotation"},(0,r.mdx)("em",{className:"property"},"property "),"rotation",(0,r.mdx)("em",{className:"property"},": List[float]"),(0,r.mdx)("a",{className:"headerlink",href:"#substance_painter.display.Camera.rotation",title:"Link to this definition"}," ")),(0,r.mdx)("dd",null,(0,r.mdx)("p",{className:!0},"The rotation (x,y,z) of the camera as Euler angles in degrees."),(0,r.mdx)("dl",{className:"field-list simple"},(0,r.mdx)("dt",{className:"field-odd"},"Getter:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},"Returns the rotation of the camera.")),(0,r.mdx)("dt",{className:"field-even"},"Setter:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("p",{className:!0},"Sets the rotation of the camera.")),(0,r.mdx)("dt",{className:"field-odd"},"Type:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},"List[float]")),(0,r.mdx)("dt",{className:"field-even"},"Raises:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,r.mdx)("strong",null,"ProjectError"))," – If no project is opened."))))),(0,r.mdx)("dl",{className:"py property"},(0,r.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.display.Camera.field_of_view"},(0,r.mdx)("em",{className:"property"},"property "),"field_of_view",(0,r.mdx)("em",{className:"property"},": float"),(0,r.mdx)("a",{className:"headerlink",href:"#substance_painter.display.Camera.field_of_view",title:"Link to this definition"}," ")),(0,r.mdx)("dd",null,(0,r.mdx)("p",{className:!0},"The field of view of the camera in degrees. This value is only used if the ",(0,r.mdx)("code",{className:"docutils literal notranslate"},"CameraProjectionType")," is ",(0,r.mdx)("code",{className:"docutils literal notranslate"},"Perspective"),"."),(0,r.mdx)("dl",{className:"field-list simple"},(0,r.mdx)("dt",{className:"field-odd"},"Getter:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},"Returns the field of view of the camera.")),(0,r.mdx)("dt",{className:"field-even"},"Setter:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("p",{className:!0},"Sets the field of view of the camera. Value is clamped between 3 and 179.")),(0,r.mdx)("dt",{className:"field-odd"},"Type:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},"float"))),(0,r.mdx)("div",{className:"admonition note"},(0,r.mdx)("p",{className:!0},"Note"),(0,r.mdx)("p",{className:!0},"Modifing the field of view will change the focal length.")),(0,r.mdx)("dl",{className:"field-list simple"},(0,r.mdx)("dt",{className:"field-odd"},"Raises:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,r.mdx)("strong",null,"ProjectError"))," – If no project is opened."))))),(0,r.mdx)("dl",{className:"py property"},(0,r.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.display.Camera.focal_length"},(0,r.mdx)("em",{className:"property"},"property "),"focal_length",(0,r.mdx)("em",{className:"property"},": float"),(0,r.mdx)("a",{className:"headerlink",href:"#substance_painter.display.Camera.focal_length",title:"Link to this definition"}," ")),(0,r.mdx)("dd",null,(0,r.mdx)("p",{className:!0},"The focal length of the camera in mm. This value is only used if the ",(0,r.mdx)("code",{className:"docutils literal notranslate"},"CameraProjectionType")," is ",(0,r.mdx)("code",{className:"docutils literal notranslate"},"Perspective"),"."),(0,r.mdx)("dl",{className:"field-list simple"},(0,r.mdx)("dt",{className:"field-odd"},"Getter:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},"Returns the focal length of the camera.")),(0,r.mdx)("dt",{className:"field-even"},"Setter:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("p",{className:!0},"Sets the focal length of the camera. Value is clamped between 1 and 500.")),(0,r.mdx)("dt",{className:"field-odd"},"Type:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},"float"))),(0,r.mdx)("div",{className:"admonition note"},(0,r.mdx)("p",{className:!0},"Note"),(0,r.mdx)("p",{className:!0},"Modifing the focal length will change the field of view.")),(0,r.mdx)("dl",{className:"field-list simple"},(0,r.mdx)("dt",{className:"field-odd"},"Raises:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,r.mdx)("strong",null,"ProjectError"))," – If no project is opened."))))),(0,r.mdx)("dl",{className:"py property"},(0,r.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.display.Camera.focus_distance"},(0,r.mdx)("em",{className:"property"},"property "),"focus_distance",(0,r.mdx)("em",{className:"property"},": float"),(0,r.mdx)("a",{className:"headerlink",href:"#substance_painter.display.Camera.focus_distance",title:"Link to this definition"}," ")),(0,r.mdx)("dd",null,(0,r.mdx)("p",{className:!0},"The focus distance of the camera. Defines the distance at which the focus point is located."),(0,r.mdx)("dl",{className:"field-list simple"},(0,r.mdx)("dt",{className:"field-odd"},"Getter:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},"Returns the focus distance of the camera.")),(0,r.mdx)("dt",{className:"field-even"},"Setter:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("p",{className:!0},"Sets the focus distance of the camera. Value is clamped between 0 and 10 * scene radius.")),(0,r.mdx)("dt",{className:"field-odd"},"Type:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},"float")),(0,r.mdx)("dt",{className:"field-even"},"Raises:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,r.mdx)("strong",null,"ProjectError"))," – If no project is opened."))))),(0,r.mdx)("dl",{className:"py property"},(0,r.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.display.Camera.aperture"},(0,r.mdx)("em",{className:"property"},"property "),"aperture",(0,r.mdx)("em",{className:"property"},": float"),(0,r.mdx)("a",{className:"headerlink",href:"#substance_painter.display.Camera.aperture",title:"Link to this definition"}," ")),(0,r.mdx)("dd",null,(0,r.mdx)("p",{className:!0},"The aperture of the camera. Defines how wide the Depth of Field will be."),(0,r.mdx)("dl",{className:"field-list simple"},(0,r.mdx)("dt",{className:"field-odd"},"Getter:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},"Returns the lens radius.")),(0,r.mdx)("dt",{className:"field-even"},"Setter:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("p",{className:!0},"Sets the lens radius. Value is clamped between 0 and 1 * scene radius.")),(0,r.mdx)("dt",{className:"field-odd"},"Type:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},"float")),(0,r.mdx)("dt",{className:"field-even"},"Raises:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,r.mdx)("strong",null,"ProjectError"))," – If no project is opened."))))),(0,r.mdx)("dl",{className:"py property"},(0,r.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.display.Camera.orthographic_height"},(0,r.mdx)("em",{className:"property"},"property "),"orthographic_height",(0,r.mdx)("em",{className:"property"},": float"),(0,r.mdx)("a",{className:"headerlink",href:"#substance_painter.display.Camera.orthographic_height",title:"Link to this definition"}," ")),(0,r.mdx)("dd",null,(0,r.mdx)("p",{className:!0},"The orthographic height of the camera. This value is only used if the ",(0,r.mdx)("code",{className:"docutils literal notranslate"},"CameraProjectionType")," is ",(0,r.mdx)("code",{className:"docutils literal notranslate"},"Orthographic"),"."),(0,r.mdx)("dl",{className:"field-list simple"},(0,r.mdx)("dt",{className:"field-odd"},"Getter:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},"Returns the orthographic height of the camera.")),(0,r.mdx)("dt",{className:"field-even"},"Setter:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("p",{className:!0},"Sets the orthographic height of the camera.")),(0,r.mdx)("dt",{className:"field-odd"},"Type:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},"float")),(0,r.mdx)("dt",{className:"field-even"},"Raises:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,r.mdx)("strong",null,"ProjectError"))," – If no project is opened."))))),(0,r.mdx)("dl",{className:"py property"},(0,r.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.display.Camera.projection_type"},(0,r.mdx)("em",{className:"property"},"property "),"projection_type",(0,r.mdx)("em",{className:"property"},": ",(0,r.mdx)("a",{className:"reference internal",href:"#substance_painter.display.CameraProjectionType",title:"substance_painter.display.CameraProjectionType"},"CameraProjectionType")),(0,r.mdx)("a",{className:"headerlink",href:"#substance_painter.display.Camera.projection_type",title:"Link to this definition"}," ")),(0,r.mdx)("dd",null,(0,r.mdx)("p",{className:!0},"The projection type (perspective or orthographic) of the camera."),(0,r.mdx)("dl",{className:"field-list simple"},(0,r.mdx)("dt",{className:"field-odd"},"Getter:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},"Returns the projection type of the camera.")),(0,r.mdx)("dt",{className:"field-even"},"Setter:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("p",{className:!0},"Sets the projection type of the camera.")),(0,r.mdx)("dt",{className:"field-odd"},"Type:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"#substance_painter.display.CameraProjectionType",title:"substance_painter.display.CameraProjectionType"},"CameraProjectionType"))),(0,r.mdx)("dt",{className:"field-even"},"Raises:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,r.mdx)("strong",null,"ProjectError"))," – If no project is opened."))))))}o.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-api-substance-painter-display-md-c71cf1a5881e029a9e72.js.map