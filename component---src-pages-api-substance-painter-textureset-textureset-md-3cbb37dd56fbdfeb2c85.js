"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[6245],{26446:function(e,t,s){s.r(t),s.d(t,{_frontmatter:function(){return m},default:function(){return o}});var a=s(87462),l=s(63366),r=(s(15007),s(64983)),n=s(91515),i=["components"],m={},d={_frontmatter:m},c=n.Z;function o(e){var t=e.components,s=(0,l.Z)(e,i);return(0,r.mdx)(c,(0,a.Z)({},d,s,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("h1",null,"TextureSet class",(0,r.mdx)("a",{className:"headerlink",href:"#textureset-class",title:"Link to this heading"}," ")),(0,r.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.textureset.TextureSet"},(0,r.mdx)("em",{className:"property"},"class "),"substance_painter.textureset.TextureSet(",(0,r.mdx)("em",{className:"sig-param"},"material_id: int"),")",(0,r.mdx)("a",{className:"headerlink",href:"#substance_painter.textureset.TextureSet",title:"Link to this definition"}," ")),(0,r.mdx)("p",{className:!0},"A ",(0,r.mdx)("cite",null,"Substance 3D Painter")," Texture Set. A Texture Set has a resolution and a number of stacks, and can be layered or not. It optionally also has a number of UV Tiles."),(0,r.mdx)("p",{className:!0},"It uses a set of baked Mesh map textures. Each Mesh map has a defined MeshMapUsage."),(0,r.mdx)("p",{className:!0},"If the corresponding material is not layered, the Texture Set has just one stack, which is transparent to the user. If the material is layered, the Texture Set has several stacks."),(0,r.mdx)("p",{className:!0},"Example"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-python"},'import substance_painter.textureset\n\n# Get the Texture Set "TextureSetName":\nmy_texture_set = substance_painter.textureset.TextureSet.from_name("TextureSetName")\n\n# Show the resolution of the Texture Set:\nresolution = my_texture_set.get_resolution()\nprint("The resolution is {0}x{1}".format(resolution.width, resolution.height))\n\n# Change the resolution of the Texture Set:\nmy_texture_set.set_resolution(substance_painter.textureset.Resolution(512, 512))\n\n# Show information about layering:\nif my_texture_set.is_layered_material():\n    print("{0} is a layered material".format(my_texture_set.name()))\n\n    # Get the stack called "Mask1" from the Texture Set:\n    mask_stack = my_texture_set.get_stack("Mask1")\n\n    # Print "TextureSetName/Mask1":\n    print(mask_stack)\n\nelse:\n    print("{0} is not a layered material".format(my_texture_set.name()))\n\n# Show information about UV Tiles:\nif my_texture_set.has_uv_tiles():\n    print("{0} has UV Tiles:".format(my_texture_set.name()))\n    for tile in my_texture_set.all_uv_tiles():\n        print("Tile {0} {1}".format(tile.u, tile.v))\n\n# List all the stacks of the Texture Set "TextureSetName":\nfor stack in my_texture_set.all_stacks():\n    print(stack)\n\n# Query ambiant occlusion Mesh map of the Texture Set "TextureSetName":\nusage = substance_painter.textureset.MeshMapUsage.AO\nmeshMapResource = my_texture_set.get_mesh_map_resource(usage)\n\nif meshMapResource is None :\n    print("{0} does not have a Mesh map defined for usage {1}"\n        .format(my_texture_set.name(), usage))\nelse:\n    print("{0} uses {1} Mesh map for usage {2}"\n        .format(my_texture_set.name(), meshMapResource, usage))\n\n# Unset ambiant occlusion Mesh map of the Texture Set "TextureSetName":\nmy_texture_set.set_mesh_map_resource(usage, None)\n')),(0,r.mdx)("div",{className:"admonition seealso"},(0,r.mdx)("p",{className:!0},"See also"),(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"stack.html#substance_painter.textureset.Stack",title:"substance_painter.textureset.Stack"},(0,r.mdx)("code",{className:"xref py py-class docutils literal notranslate"},"Stack")),",",(0,r.mdx)("a",{className:"reference internal",href:"uvtile.html#substance_painter.textureset.UVTile",title:"substance_painter.textureset.UVTile"},(0,r.mdx)("code",{className:"xref py py-class docutils literal notranslate"},"UVTile")),",",(0,r.mdx)("a",{className:"reference internal",href:"index.html#substance_painter.textureset.MeshMapUsage",title:"substance_painter.textureset.MeshMapUsage"},(0,r.mdx)("code",{className:"xref py py-class docutils literal notranslate"},"MeshMapUsage")),",",(0,r.mdx)("a",{className:"reference external",href:"https://www.adobe.com/go/painter-texture-set"},"Texture Set documentation"),".")),(0,r.mdx)("dl",{className:"py method"},(0,r.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.textureset.TextureSet.from_name"},(0,r.mdx)("em",{className:"property"},"static "),"from_name(",(0,r.mdx)("em",{className:"sig-param"},"texture_set_name: str"),")",(0,r.mdx)("a",{className:"headerlink",href:"#substance_painter.textureset.TextureSet.from_name",title:"Link to this definition"}," ")),(0,r.mdx)("dd",null,(0,r.mdx)("p",{className:!0},"Get the Texture Set from its name."),(0,r.mdx)("dl",{className:"field-list simple"},(0,r.mdx)("dt",{className:"field-odd"},"Parameters:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("strong",null,"texture_set_name")," (",(0,r.mdx)("em",null,"str"),") – The name of the Texture Set."))),(0,r.mdx)("div",{className:"admonition note"},(0,r.mdx)("p",{className:!0},"Note"),(0,r.mdx)("p",{className:!0},"The Texture Set name is case sensitive.")),(0,r.mdx)("dl",{className:"field-list simple"},(0,r.mdx)("dt",{className:"field-odd"},"Raises:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("ul",{className:"simple"},(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,r.mdx)("strong",null,"ProjectError"))," – If no project is opened.")),(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ServiceNotFoundError",title:"substance_painter.exception.ServiceNotFoundError"},(0,r.mdx)("strong",null,"ServiceNotFoundError"))," – If Substance 3D Painter has not started all its services yet.")),(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("strong",null,"TypeError")," – If ",(0,r.mdx)("code",{className:"docutils literal notranslate"},"texture_set_name")," is missing or not a string.")),(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("strong",null,"ValueError")," – If ",(0,r.mdx)("code",{className:"docutils literal notranslate"},"texture_set_name")," is empty.")),(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("strong",null,"ValueError")," – If there is no Texture Set with the name ",(0,r.mdx)("code",{className:"docutils literal notranslate"},"texture_set_name"),"."))))))),(0,r.mdx)("dl",{className:"py method"},(0,r.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.textureset.TextureSet.name"},"name() → str",(0,r.mdx)("a",{className:"headerlink",href:"#substance_painter.textureset.TextureSet.name",title:"Link to this definition"}," ")),(0,r.mdx)("dd",null,(0,r.mdx)("p",{className:!0},"Get the Texture Set name."),(0,r.mdx)("dl",{className:"field-list simple"},(0,r.mdx)("dt",{className:"field-odd"},"Returns:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},"The name of the Texture Set.")),(0,r.mdx)("dt",{className:"field-even"},"Return type:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("p",{className:!0},"str")),(0,r.mdx)("dt",{className:"field-odd"},"Raises:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("ul",{className:"simple"},(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,r.mdx)("strong",null,"ProjectError"))," – If no project is opened.")),(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ServiceNotFoundError",title:"substance_painter.exception.ServiceNotFoundError"},(0,r.mdx)("strong",null,"ServiceNotFoundError"))," – If Substance 3D Painter has not started all its services yet.")),(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("strong",null,"ValueError")," – If the Texture Set is invalid."))))))),(0,r.mdx)("dl",{className:"py method"},(0,r.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.textureset.TextureSet.is_layered_material"},"is_layered_material() → bool",(0,r.mdx)("a",{className:"headerlink",href:"#substance_painter.textureset.TextureSet.is_layered_material",title:"Link to this definition"}," ")),(0,r.mdx)("dd",null,(0,r.mdx)("p",{className:!0},"Query if this Texture Set uses material layering."),(0,r.mdx)("dl",{className:"field-list simple"},(0,r.mdx)("dt",{className:"field-odd"},"Returns:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("code",{className:"docutils literal notranslate"},"True")," if the Texture Set uses material layering, ",(0,r.mdx)("code",{className:"docutils literal notranslate"},"False")," otherwise.")),(0,r.mdx)("dt",{className:"field-even"},"Return type:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("p",{className:!0},"bool")),(0,r.mdx)("dt",{className:"field-odd"},"Raises:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("ul",{className:"simple"},(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,r.mdx)("strong",null,"ProjectError"))," – If no project is opened.")),(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ServiceNotFoundError",title:"substance_painter.exception.ServiceNotFoundError"},(0,r.mdx)("strong",null,"ServiceNotFoundError"))," – If Substance 3D Painter has not started all its services yet.")),(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("strong",null,"ValueError")," – If the Texture Set is invalid."))))))),(0,r.mdx)("dl",{className:"py method"},(0,r.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.textureset.TextureSet.all_stacks"},"all_stacks() → List[",(0,r.mdx)("a",{className:"reference internal",href:"stack.html#substance_painter.textureset.Stack",title:"substance_painter.textureset.Stack"},"Stack"),"]",(0,r.mdx)("a",{className:"headerlink",href:"#substance_painter.textureset.TextureSet.all_stacks",title:"Link to this definition"}," ")),(0,r.mdx)("dd",null,(0,r.mdx)("p",{className:!0},"List all the stacks from this Texture Set."),(0,r.mdx)("dl",{className:"field-list simple"},(0,r.mdx)("dt",{className:"field-odd"},"Returns:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},"All the stacks of this Texture Set.")),(0,r.mdx)("dt",{className:"field-even"},"Return type:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("p",{className:!0},"list[",(0,r.mdx)("a",{className:"reference internal",href:"stack.html#substance_painter.textureset.Stack",title:"substance_painter.textureset.Stack"},"Stack"),"]")),(0,r.mdx)("dt",{className:"field-odd"},"Raises:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("ul",{className:"simple"},(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,r.mdx)("strong",null,"ProjectError"))," – If no project is opened.")),(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ServiceNotFoundError",title:"substance_painter.exception.ServiceNotFoundError"},(0,r.mdx)("strong",null,"ServiceNotFoundError"))," – If Substance 3D Painter has not started all its services yet.")),(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("strong",null,"ValueError")," – If the Texture Set is invalid."))))),(0,r.mdx)("div",{className:"admonition seealso"},(0,r.mdx)("p",{className:!0},"See also"),(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"#substance_painter.textureset.TextureSet.get_stack",title:"substance_painter.textureset.TextureSet.get_stack"},(0,r.mdx)("code",{className:"xref py py-meth docutils literal notranslate"},"TextureSet.get_stack()")),".")))),(0,r.mdx)("dl",{className:"py method"},(0,r.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.textureset.TextureSet.get_stack"},"get_stack(",(0,r.mdx)("em",{className:"sig-param"},"stack_name: str = ''"),") → ",(0,r.mdx)("a",{className:"reference internal",href:"stack.html#substance_painter.textureset.Stack",title:"substance_painter.textureset.Stack"},"Stack"),(0,r.mdx)("a",{className:"headerlink",href:"#substance_painter.textureset.TextureSet.get_stack",title:"Link to this definition"}," ")),(0,r.mdx)("dd",null,(0,r.mdx)("p",{className:!0},"Get a stack of this Texture Set from its name."),(0,r.mdx)("dl",{className:"field-list simple"},(0,r.mdx)("dt",{className:"field-odd"},"Parameters:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("strong",null,"stack_name")," (",(0,r.mdx)("em",null,"str"),") – The stack name. Leave empty if the Texture Set does not use material layering."))),(0,r.mdx)("div",{className:"admonition note"},(0,r.mdx)("p",{className:!0},"Note"),(0,r.mdx)("p",{className:!0},"The stack name is case sensitive.")),(0,r.mdx)("dl",{className:"field-list simple"},(0,r.mdx)("dt",{className:"field-odd"},"Returns:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},"The stack.")),(0,r.mdx)("dt",{className:"field-even"},"Return type:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"stack.html#substance_painter.textureset.Stack",title:"substance_painter.textureset.Stack"},"Stack"))),(0,r.mdx)("dt",{className:"field-odd"},"Raises:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("ul",{className:"simple"},(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,r.mdx)("strong",null,"ProjectError"))," – If no project is opened.")),(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ServiceNotFoundError",title:"substance_painter.exception.ServiceNotFoundError"},(0,r.mdx)("strong",null,"ServiceNotFoundError"))," – If Substance 3D Painter has not started all its services yet.")),(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("strong",null,"ValueError")," – If the Texture Set is invalid."))))),(0,r.mdx)("div",{className:"admonition seealso"},(0,r.mdx)("p",{className:!0},"See also"),(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"#substance_painter.textureset.TextureSet.all_stacks",title:"substance_painter.textureset.TextureSet.all_stacks"},(0,r.mdx)("code",{className:"xref py py-meth docutils literal notranslate"},"TextureSet.all_stacks()")),".")))),(0,r.mdx)("dl",{className:"py method"},(0,r.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.textureset.TextureSet.get_resolution"},"get_resolution() → ",(0,r.mdx)("a",{className:"reference internal",href:"index.html#substance_painter.textureset.Resolution",title:"substance_painter.textureset.Resolution"},"Resolution"),(0,r.mdx)("a",{className:"headerlink",href:"#substance_painter.textureset.TextureSet.get_resolution",title:"Link to this definition"}," ")),(0,r.mdx)("dd",null,(0,r.mdx)("p",{className:!0},"Get the Texture Set resolution."),(0,r.mdx)("dl",{className:"field-list simple"},(0,r.mdx)("dt",{className:"field-odd"},"Returns:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},"The resolution of this Texture Set in pixels.")),(0,r.mdx)("dt",{className:"field-even"},"Return type:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"index.html#substance_painter.textureset.Resolution",title:"substance_painter.textureset.Resolution"},"Resolution"))),(0,r.mdx)("dt",{className:"field-odd"},"Raises:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("ul",{className:"simple"},(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,r.mdx)("strong",null,"ProjectError"))," – If no project is opened.")),(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ServiceNotFoundError",title:"substance_painter.exception.ServiceNotFoundError"},(0,r.mdx)("strong",null,"ServiceNotFoundError"))," – If Substance 3D Painter has not started all its services yet.")),(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("strong",null,"ValueError")," – If the Texture Set is invalid."))))),(0,r.mdx)("div",{className:"admonition seealso"},(0,r.mdx)("p",{className:!0},"See also"),(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"#substance_painter.textureset.TextureSet.set_resolution",title:"substance_painter.textureset.TextureSet.set_resolution"},(0,r.mdx)("code",{className:"xref py py-meth docutils literal notranslate"},"TextureSet.set_resolution()")),",",(0,r.mdx)("a",{className:"reference internal",href:"index.html#substance_painter.textureset.set_resolutions",title:"substance_painter.textureset.set_resolutions"},(0,r.mdx)("code",{className:"xref py py-meth docutils literal notranslate"},"set_resolutions()")),".")))),(0,r.mdx)("dl",{className:"py method"},(0,r.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.textureset.TextureSet.set_resolution"},"set_resolution(",(0,r.mdx)("em",{className:"sig-param"},"new_resolution: ",(0,r.mdx)("a",{className:"reference internal",href:"index.html#substance_painter.textureset.Resolution",title:"substance_painter.textureset.Resolution"},"Resolution")),")",(0,r.mdx)("a",{className:"headerlink",href:"#substance_painter.textureset.TextureSet.set_resolution",title:"Link to this definition"}," ")),(0,r.mdx)("dd",null,(0,r.mdx)("p",{className:!0},"Set the resolution of the Texture Set."),(0,r.mdx)("p",{className:!0},"See resolution restrictions: ",(0,r.mdx)("a",{className:"reference internal",href:"index.html#substance_painter.textureset.Resolution",title:"substance_painter.textureset.Resolution"},(0,r.mdx)("code",{className:"xref py py-class docutils literal notranslate"},"Resolution")),"."),(0,r.mdx)("div",{className:"admonition note"},(0,r.mdx)("p",{className:!0},"Note"),(0,r.mdx)("p",{className:!0},"For any Texture Set, you can find its accepted resolutions in the “Texture Set Settings” window, in the “Size” menu.")),(0,r.mdx)("dl",{className:"field-list simple"},(0,r.mdx)("dt",{className:"field-odd"},"Parameters:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("strong",null,"new_resolution")," (",(0,r.mdx)("a",{className:"reference internal",href:"index.html#substance_painter.textureset.Resolution",title:"substance_painter.textureset.Resolution"},(0,r.mdx)("em",null,"Resolution")),") – The new resolution for this Texture Set.")),(0,r.mdx)("dt",{className:"field-even"},"Raises:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("ul",{className:"simple"},(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,r.mdx)("strong",null,"ProjectError"))," – If no project is opened.")),(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ServiceNotFoundError",title:"substance_painter.exception.ServiceNotFoundError"},(0,r.mdx)("strong",null,"ServiceNotFoundError"))," – If Substance 3D Painter has not started all its services yet.")),(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("strong",null,"ValueError")," – If ",(0,r.mdx)("code",{className:"docutils literal notranslate"},"new_resolution")," is not a valid resolution.")),(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("strong",null,"ValueError")," – If the Texture Set is invalid."))))),(0,r.mdx)("div",{className:"admonition seealso"},(0,r.mdx)("p",{className:!0},"See also"),(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"#substance_painter.textureset.TextureSet.get_resolution",title:"substance_painter.textureset.TextureSet.get_resolution"},(0,r.mdx)("code",{className:"xref py py-meth docutils literal notranslate"},"TextureSet.get_resolution()")),",",(0,r.mdx)("a",{className:"reference internal",href:"index.html#substance_painter.textureset.set_resolutions",title:"substance_painter.textureset.set_resolutions"},(0,r.mdx)("code",{className:"xref py py-meth docutils literal notranslate"},"set_resolutions()")),".")))),(0,r.mdx)("dl",{className:"py method"},(0,r.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.textureset.TextureSet.has_uv_tiles"},"has_uv_tiles() → bool",(0,r.mdx)("a",{className:"headerlink",href:"#substance_painter.textureset.TextureSet.has_uv_tiles",title:"Link to this definition"}," ")),(0,r.mdx)("dd",null,(0,r.mdx)("p",{className:!0},"Check if the Texture Set uses the UV Tiles workflow."),(0,r.mdx)("dl",{className:"field-list simple"},(0,r.mdx)("dt",{className:"field-odd"},"Returns:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("code",{className:"docutils literal notranslate"},"True")," if the Texture Set uses the UV Tiles workflow, ",(0,r.mdx)("code",{className:"docutils literal notranslate"},"False")," otherwise.")),(0,r.mdx)("dt",{className:"field-even"},"Return type:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("p",{className:!0},"bool")),(0,r.mdx)("dt",{className:"field-odd"},"Raises:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,r.mdx)("strong",null,"ProjectError"))," – If no project is opened."))),(0,r.mdx)("div",{className:"admonition seealso"},(0,r.mdx)("p",{className:!0},"See also"),(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"#substance_painter.textureset.TextureSet.all_uv_tiles",title:"substance_painter.textureset.TextureSet.all_uv_tiles"},(0,r.mdx)("code",{className:"xref py py-meth docutils literal notranslate"},"all_uv_tiles()")))))),(0,r.mdx)("dl",{className:"py method"},(0,r.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.textureset.TextureSet.uv_tile"},"uv_tile(",(0,r.mdx)("em",{className:"sig-param"},"u_coord: int"),", ",(0,r.mdx)("em",{className:"sig-param"},"v_coord: int"),") → ",(0,r.mdx)("a",{className:"reference internal",href:"uvtile.html#substance_painter.textureset.UVTile",title:"substance_painter.textureset.UVTile"},"UVTile"),(0,r.mdx)("a",{className:"headerlink",href:"#substance_painter.textureset.TextureSet.uv_tile",title:"Link to this definition"}," ")),(0,r.mdx)("dd",null,(0,r.mdx)("p",{className:!0},"Get the Texture Set UV Tile at (u, v) coordinates."),(0,r.mdx)("dl",{className:"field-list simple"},(0,r.mdx)("dt",{className:"field-odd"},"Parameters:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("ul",{className:"simple"},(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("strong",null,"u_coord")," (",(0,r.mdx)("em",null,"int"),") – The u coordinate of the UV Tile.")),(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("strong",null,"v_coord")," (",(0,r.mdx)("em",null,"int"),") – The v coordinate of the UV Tile.")))),(0,r.mdx)("dt",{className:"field-even"},"Returns:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("p",{className:!0},"The Texture Set UV Tile at (u, v) coordinate.")),(0,r.mdx)("dt",{className:"field-odd"},"Return type:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"uvtile.html#substance_painter.textureset.UVTile",title:"substance_painter.textureset.UVTile"},"UVTile"))),(0,r.mdx)("dt",{className:"field-even"},"Raises:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,r.mdx)("strong",null,"ProjectError"))," – If no project is opened."))))),(0,r.mdx)("dl",{className:"py method"},(0,r.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.textureset.TextureSet.all_uv_tiles"},"all_uv_tiles() → List[",(0,r.mdx)("a",{className:"reference internal",href:"uvtile.html#substance_painter.textureset.UVTile",title:"substance_painter.textureset.UVTile"},"UVTile"),"]",(0,r.mdx)("a",{className:"headerlink",href:"#substance_painter.textureset.TextureSet.all_uv_tiles",title:"Link to this definition"}," ")),(0,r.mdx)("dd",null,(0,r.mdx)("p",{className:!0},"Get the list of the Texture Set UV Tiles, ordered by U then V coordinates."),(0,r.mdx)("dl",{className:"field-list simple"},(0,r.mdx)("dt",{className:"field-odd"},"Returns:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},"List of the Texture Set UV Tiles, ordered by U then V coordinates.")),(0,r.mdx)("dt",{className:"field-even"},"Return type:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("em",null,"List"),"[",(0,r.mdx)("a",{className:"reference internal",href:"uvtile.html#substance_painter.textureset.UVTile",title:"substance_painter.textureset.UVTile"},"UVTile"),"]")),(0,r.mdx)("dt",{className:"field-odd"},"Raises:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,r.mdx)("strong",null,"ProjectError"))," – If no project is opened."))),(0,r.mdx)("div",{className:"admonition seealso"},(0,r.mdx)("p",{className:!0},"See also"),(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"#substance_painter.textureset.TextureSet.has_uv_tiles",title:"substance_painter.textureset.TextureSet.has_uv_tiles"},(0,r.mdx)("code",{className:"xref py py-meth docutils literal notranslate"},"has_uv_tiles()")))))),(0,r.mdx)("dl",{className:"py method"},(0,r.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.textureset.TextureSet.get_uvtiles_resolution"},"get_uvtiles_resolution() → Dict[",(0,r.mdx)("a",{className:"reference internal",href:"uvtile.html#substance_painter.textureset.UVTile",title:"substance_painter.textureset.UVTile"},"UVTile"),", ",(0,r.mdx)("a",{className:"reference internal",href:"index.html#substance_painter.textureset.Resolution",title:"substance_painter.textureset.Resolution"},"Resolution"),"]",(0,r.mdx)("a",{className:"headerlink",href:"#substance_painter.textureset.TextureSet.get_uvtiles_resolution",title:"Link to this definition"}," ")),(0,r.mdx)("dd",null,(0,r.mdx)("p",{className:!0},"Get all UV Tiles that have a different resolution from the Texture Set, associated to their effective resolution."),(0,r.mdx)("dl",{className:"field-list simple"},(0,r.mdx)("dt",{className:"field-odd"},"Returns:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},"The dictionary of uvtiles and their                associated resolution.")),(0,r.mdx)("dt",{className:"field-even"},"Return type:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("em",null,"Dict"),"[",(0,r.mdx)("a",{className:"reference internal",href:"uvtile.html#substance_painter.textureset.UVTile",title:"substance_painter.textureset.UVTile"},"UVTile"),", ",(0,r.mdx)("a",{className:"reference internal",href:"index.html#substance_painter.textureset.Resolution",title:"substance_painter.textureset.Resolution"},"Resolution"),"]")),(0,r.mdx)("dt",{className:"field-odd"},"Raises:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,r.mdx)("strong",null,"ProjectError"))," – If no project is opened."))),(0,r.mdx)("div",{className:"admonition seealso"},(0,r.mdx)("p",{className:!0},"See also"),(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"uvtile.html#substance_painter.textureset.UVTile.get_resolution",title:"substance_painter.textureset.UVTile.get_resolution"},(0,r.mdx)("code",{className:"xref py py-meth docutils literal notranslate"},"UVTile.get_resolution()")))))),(0,r.mdx)("dl",{className:"py method"},(0,r.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.textureset.TextureSet.set_uvtiles_resolution"},"set_uvtiles_resolution(",(0,r.mdx)("em",{className:"sig-param"},"resolutions: Dict[",(0,r.mdx)("a",{className:"reference internal",href:"uvtile.html#substance_painter.textureset.UVTile",title:"substance_painter.textureset.UVTile"},"UVTile"),", ",(0,r.mdx)("a",{className:"reference internal",href:"index.html#substance_painter.textureset.Resolution",title:"substance_painter.textureset.Resolution"},"Resolution"),"]"),")",(0,r.mdx)("a",{className:"headerlink",href:"#substance_painter.textureset.TextureSet.set_uvtiles_resolution",title:"Link to this definition"}," ")),(0,r.mdx)("dd",null,(0,r.mdx)("p",{className:!0},"Set the resolution of the given UV Tiles to the associated resolution."),(0,r.mdx)("dl",{className:"field-list simple"},(0,r.mdx)("dt",{className:"field-odd"},"Parameters:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("strong",null,"resolutions")," (",(0,r.mdx)("em",null,"Dict"),(0,r.mdx)("em",null,"["),(0,r.mdx)("a",{className:"reference internal",href:"uvtile.html#substance_painter.textureset.UVTile",title:"substance_painter.textureset.UVTile"},(0,r.mdx)("em",null,"UVTile")),(0,r.mdx)("em",null,", "),(0,r.mdx)("a",{className:"reference internal",href:"index.html#substance_painter.textureset.Resolution",title:"substance_painter.textureset.Resolution"},(0,r.mdx)("em",null,"Resolution")),(0,r.mdx)("em",null,"]"),") – The dictionary of UV Tiles and their associated resolution.")),(0,r.mdx)("dt",{className:"field-even"},"Raises:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,r.mdx)("strong",null,"ProjectError"))," – If no project is opened."))),(0,r.mdx)("div",{className:"admonition seealso"},(0,r.mdx)("p",{className:!0},"See also"),(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"uvtile.html#substance_painter.textureset.UVTile.set_resolution",title:"substance_painter.textureset.UVTile.set_resolution"},(0,r.mdx)("code",{className:"xref py py-meth docutils literal notranslate"},"UVTile.set_resolution()")))))),(0,r.mdx)("dl",{className:"py method"},(0,r.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.textureset.TextureSet.reset_uvtiles_resolution"},"reset_uvtiles_resolution(",(0,r.mdx)("em",{className:"sig-param"},"uvtiles: List[",(0,r.mdx)("a",{className:"reference internal",href:"uvtile.html#substance_painter.textureset.UVTile",title:"substance_painter.textureset.UVTile"},"UVTile"),"]"),")",(0,r.mdx)("a",{className:"headerlink",href:"#substance_painter.textureset.TextureSet.reset_uvtiles_resolution",title:"Link to this definition"}," ")),(0,r.mdx)("dd",null,(0,r.mdx)("p",{className:!0},"Reset the resolution of the given UV Tiles to the parent Texture Set’s resolution."),(0,r.mdx)("dl",{className:"field-list simple"},(0,r.mdx)("dt",{className:"field-odd"},"Parameters:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("strong",null,"uvtiles")," (",(0,r.mdx)("em",null,"List"),(0,r.mdx)("em",null,"["),(0,r.mdx)("a",{className:"reference internal",href:"uvtile.html#substance_painter.textureset.UVTile",title:"substance_painter.textureset.UVTile"},(0,r.mdx)("em",null,"UVTile")),(0,r.mdx)("em",null,"]"),") – The list of UV Tiles to be reset.")),(0,r.mdx)("dt",{className:"field-even"},"Raises:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,r.mdx)("strong",null,"ProjectError"))," – If no project is opened."))),(0,r.mdx)("div",{className:"admonition seealso"},(0,r.mdx)("p",{className:!0},"See also"),(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"uvtile.html#substance_painter.textureset.UVTile.reset_resolution",title:"substance_painter.textureset.UVTile.reset_resolution"},(0,r.mdx)("code",{className:"xref py py-meth docutils literal notranslate"},"UVTile.reset_resolution()")))))),(0,r.mdx)("dl",{className:"py method"},(0,r.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.textureset.TextureSet.all_mesh_names"},"all_mesh_names() → List[str]",(0,r.mdx)("a",{className:"headerlink",href:"#substance_painter.textureset.TextureSet.all_mesh_names",title:"Link to this definition"}," ")),(0,r.mdx)("dd",null,(0,r.mdx)("p",{className:!0},"Get the list of meshes of the Texture Set. When using UV Tiles, the result is the union of the mesh names of every UV Tiles."),(0,r.mdx)("dl",{className:"field-list simple"},(0,r.mdx)("dt",{className:"field-odd"},"Raises:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("ul",{className:"simple"},(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ProjectError",title:"substance_painter.exception.ProjectError"},(0,r.mdx)("strong",null,"ProjectError"))," – If no project is opened.")),(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ServiceNotFoundError",title:"substance_painter.exception.ServiceNotFoundError"},(0,r.mdx)("strong",null,"ServiceNotFoundError"))," – If Substance Painter has not started all its services yet."))))),(0,r.mdx)("div",{className:"admonition seealso"},(0,r.mdx)("p",{className:!0},"See also"),(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"uvtile.html#substance_painter.textureset.UVTile.all_mesh_names",title:"substance_painter.textureset.UVTile.all_mesh_names"},(0,r.mdx)("code",{className:"xref py py-meth docutils literal notranslate"},"UVTile.all_mesh_names()")))))),(0,r.mdx)("dl",{className:"py method"},(0,r.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.textureset.TextureSet.get_mesh_map_resource"},"get_mesh_map_resource(",(0,r.mdx)("em",{className:"sig-param"},"usage: ",(0,r.mdx)("a",{className:"reference internal",href:"index.html#substance_painter.textureset.MeshMapUsage",title:"substance_painter.textureset.MeshMapUsage"},"MeshMapUsage")),") → ",(0,r.mdx)("a",{className:"reference internal",href:"../resource.html#substance_painter.resource.ResourceID",title:"substance_painter.resource.ResourceID"},"ResourceID")," | None",(0,r.mdx)("a",{className:"headerlink",href:"#substance_painter.textureset.TextureSet.get_mesh_map_resource",title:"Link to this definition"}," ")),(0,r.mdx)("dd",null,(0,r.mdx)("p",{className:!0},"Query the Mesh map for the given usage of the Texture Set."),(0,r.mdx)("dl",{className:"field-list simple"},(0,r.mdx)("dt",{className:"field-odd"},"Parameters:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("strong",null,"usage")," (",(0,r.mdx)("a",{className:"reference internal",href:"index.html#substance_painter.textureset.MeshMapUsage",title:"substance_painter.textureset.MeshMapUsage"},(0,r.mdx)("em",null,"MeshMapUsage")),") – Which Mesh map usage is queried.")),(0,r.mdx)("dt",{className:"field-even"},"Returns:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("p",{className:!0},"The Mesh map resource or None.")),(0,r.mdx)("dt",{className:"field-odd"},"Return type:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"../resource.html#substance_painter.resource.ResourceID",title:"substance_painter.resource.ResourceID"},"ResourceID")))))),(0,r.mdx)("dl",{className:"py method"},(0,r.mdx)("dt",{className:"sig sig-object py",id:"substance_painter.textureset.TextureSet.set_mesh_map_resource"},"set_mesh_map_resource(",(0,r.mdx)("em",{className:"sig-param"},"usage: ",(0,r.mdx)("a",{className:"reference internal",href:"index.html#substance_painter.textureset.MeshMapUsage",title:"substance_painter.textureset.MeshMapUsage"},"MeshMapUsage")),", ",(0,r.mdx)("em",{className:"sig-param"},"new_mesh_map: ",(0,r.mdx)("a",{className:"reference internal",href:"../resource.html#substance_painter.resource.ResourceID",title:"substance_painter.resource.ResourceID"},"ResourceID")," | None"),") → None",(0,r.mdx)("a",{className:"headerlink",href:"#substance_painter.textureset.TextureSet.set_mesh_map_resource",title:"Link to this definition"}," ")),(0,r.mdx)("dd",null,(0,r.mdx)("p",{className:!0},"Replace the Mesh map for the given usage of the Texture Set."),(0,r.mdx)("dl",{className:"field-list simple"},(0,r.mdx)("dt",{className:"field-odd"},"Parameters:"),(0,r.mdx)("dd",{className:"field-odd"},(0,r.mdx)("ul",{className:"simple"},(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("strong",null,"usage")," (",(0,r.mdx)("a",{className:"reference internal",href:"index.html#substance_painter.textureset.MeshMapUsage",title:"substance_painter.textureset.MeshMapUsage"},(0,r.mdx)("em",null,"MeshMapUsage")),") – Which Mesh map usage to replace.")),(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("strong",null,"new_mesh_map")," (",(0,r.mdx)("a",{className:"reference internal",href:"../resource.html#substance_painter.resource.ResourceID",title:"substance_painter.resource.ResourceID"},(0,r.mdx)("em",null,"ResourceID")),(0,r.mdx)("em",null,", "),(0,r.mdx)("em",null,"optional"),") – The new Mesh map or None to unset.")))),(0,r.mdx)("dt",{className:"field-even"},"Raises:"),(0,r.mdx)("dd",{className:"field-even"},(0,r.mdx)("ul",{className:"simple"},(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("a",{className:"reference internal",href:"../exception.html#substance_painter.exception.ResourceNotFoundError",title:"substance_painter.exception.ResourceNotFoundError"},(0,r.mdx)("strong",null,"ResourceNotFoundError"))," – If the resource ",(0,r.mdx)("code",{className:"docutils literal notranslate"},"new_mesh_map")," is not found or is not of type IMAGE.")),(0,r.mdx)("li",null,(0,r.mdx)("p",{className:!0},(0,r.mdx)("strong",null,"ValueError")," – If the resource is already used for another Mesh map usage for the Texture Set."))))))))}o.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-api-substance-painter-textureset-textureset-md-3cbb37dd56fbdfeb2c85.js.map