{"version":3,"file":"component---src-pages-api-substance-painter-textureset-stack-md-d5c724194f2f14183f1a.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/api/substance_painter/textureset/stack.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/painter-python-api/painter-python-api/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>Stack class<a className=\"headerlink\" href=\"#stack-class\" title=\"Link to this heading\"> </a></h1>\n    <dt className=\"sig sig-object py\" id=\"substance_painter.textureset.Stack\">\n      <em className=\"property\">class </em>substance_painter.textureset.Stack(<em className=\"sig-param\">stack_id: int | None = None</em>)<a className=\"headerlink\" href=\"#substance_painter.textureset.Stack\" title=\"Link to this definition\"> </a></dt>\n    <p className>A <cite>Substance 3D Painter</cite> paintable stack.</p>\n    <p className>A stack can contain a number of channels (BaseColor, Specular, Roughness,\netc.), that correspond to the material. The stack belongs to a Texture Set,\nwhich may contain one or more stacks.</p>\n    <p className>Typically, only one stack is used and that stack is transparent to the user.\nSelecting the Texture Set will select its stack. However, a Texture Set can\nuse layered materials with custom shaders, in which case a specific stack\nneeds to be selected.</p>\n    <p className>If the Texture Set doesn’t use material layering, you can retrieve its stack\nas follows:</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`import substance_painter.textureset\n\n# Get the unnamed stack of \"TextureSetName\":\npaintable_stack = substance_painter.textureset.Stack.from_name(\"TextureSetName\")\n\n# Alternatively, get the stack from a Texture Set instance:\nmy_texture_set = substance_painter.textureset.TextureSet.from_name(\"TextureSetName\")\npaintable_stack = my_texture_set.get_stack()\n`}</code></pre>\n    <p className>If the Texture Set <cite>does</cite> use material layering, you can retrieve its stacks\nas follows:</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`import substance_painter.textureset\n\n# Get the stack called \"Mask1\" from the Texture Set \"TextureSetName\":\npaintable_stack = substance_painter.textureset.Stack.from_name(\"TextureSetName\",\n                                                               \"Mask1\")\n\n# Alternatively, get the stack from a Texture Set instance:\nmy_texture_set = substance_painter.textureset.TextureSet.from_name(\"TextureSetName\")\npaintable_stack = my_texture_set.get_stack(\"Mask1\")\n\n# Show the name of the stack:\nprint(paintable_stack.name())\n`}</code></pre>\n    <p className>It is possible to query, add, remove or edit the channels of a stack:</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`import substance_painter.textureset\n\n# Get the unnamed stack of \"TextureSetName\":\npaintable_stack = substance_painter.textureset.Stack.from_name(\"TextureSetName\")\n\n# List all the channels of the \"TextureSetName\" Texture Set:\nfor k,v in paintable_stack.all_channels().items():\n    print(\"{0}: {1}\".format(k, str(v.format())))\n\n# Add a scattering channel to the \"TextureSetName\" Texture Set:\npaintable_stack.add_channel(substance_painter.textureset.ChannelType.Scattering,\n                            substance_painter.textureset.ChannelFormat.L8)\n\n# Query details of the added scattering channel:\nif paintable_stack.has_channel(substance_painter.textureset.ChannelType.Scattering):\n    channel = paintable_stack.get_channel(\n        substance_painter.textureset.ChannelType.Scattering)\n    print(\"The Texture Set now has a scattering channel with {0} bits per pixel.\"\n        .format(channel.bit_depth()))\n\n# Change the scattering channel to 16 bits inside the \"TextureSetName\" Texture Set:\npaintable_stack.edit_channel(\n    channel_type = substance_painter.textureset.ChannelType.Scattering,\n    channel_format = substance_painter.textureset.ChannelFormat.L16)\n\n# Remove the scattering channel from \"TextureSetName\":\npaintable_stack.remove_channel(substance_painter.textureset.ChannelType.Scattering)\n`}</code></pre>\n    <div className=\"admonition seealso\">\n      <p className>See also</p>\n      <p className><a className=\"reference internal\" href=\"textureset.html#substance_painter.textureset.TextureSet\" title=\"substance_painter.textureset.TextureSet\"><code className=\"xref py py-class docutils literal notranslate\">TextureSet</code></a>,\n        <a className=\"reference external\" href=\"https://www.adobe.com/go/painter-texture-set\">Texture Set documentation</a>.</p>\n    </div>\n    <dl className=\"py method\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter.textureset.Stack.from_name\">\n        <em className=\"property\">static </em>from_name(<em className=\"sig-param\">texture_set_name: str</em>, <em className=\"sig-param\">stack_name: str = ''</em>)<a className=\"headerlink\" href=\"#substance_painter.textureset.Stack.from_name\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>Get a stack from its name.</p>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Parameters:</dt>\n          <dd className=\"field-odd\"><ul className=\"simple\">\n              <li><p className><strong>texture_set_name</strong> (<em>str</em>) – Texture Set name.</p></li>\n              <li><p className><strong>stack_name</strong> (<em>str</em>) – Stack name.\nLeave empty if the Texture Set does not use material layering.</p></li>\n            </ul>\n          </dd>\n        </dl>\n        <div className=\"admonition note\">\n          <p className>Note</p>\n          <p className>The Texture Set and stack names are case sensitive.</p>\n        </div>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Raises:</dt>\n          <dd className=\"field-odd\"><ul className=\"simple\">\n              <li><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ProjectError\" title=\"substance_painter.exception.ProjectError\"><strong>ProjectError</strong></a> – If no project is opened.</p></li>\n              <li><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ServiceNotFoundError\" title=\"substance_painter.exception.ServiceNotFoundError\"><strong>ServiceNotFoundError</strong></a> – If Substance 3D Painter has not started all its services yet.</p></li>\n              <li><p className><strong>ValueError</strong> – If <code className=\"docutils literal notranslate\">texture_set_name</code> is not string.</p></li>\n              <li><p className><strong>ValueError</strong> – If there is no Texture Set with the name <code className=\"docutils literal notranslate\">texture_set_name</code>.</p></li>\n              <li><p className><strong>ValueError</strong> – If there is no stack with the name <code className=\"docutils literal notranslate\">stack_name</code>.</p></li>\n            </ul>\n          </dd>\n        </dl>\n        <div className=\"admonition seealso\">\n          <p className>See also</p>\n          <p className><a className=\"reference internal\" href=\"textureset.html#substance_painter.textureset.TextureSet.all_stacks\" title=\"substance_painter.textureset.TextureSet.all_stacks\"><code className=\"xref py py-meth docutils literal notranslate\">TextureSet.all_stacks()</code></a>,\n            <a className=\"reference internal\" href=\"textureset.html#substance_painter.textureset.TextureSet.get_stack\" title=\"substance_painter.textureset.TextureSet.get_stack\"><code className=\"xref py py-meth docutils literal notranslate\">TextureSet.get_stack()</code></a>.</p>\n        </div>\n      </dd></dl>\n    <dl className=\"py method\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter.textureset.Stack.name\">\nname() → str<a className=\"headerlink\" href=\"#substance_painter.textureset.Stack.name\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>Get the stack name.\nA stack name is empty if the Texture Set it belongs to uses material layering.</p>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Returns:</dt>\n          <dd className=\"field-odd\"><p className>The stack name.</p>\n          </dd>\n          <dt className=\"field-even\">Return type:</dt>\n          <dd className=\"field-even\"><p className>str</p>\n          </dd>\n          <dt className=\"field-odd\">Raises:</dt>\n          <dd className=\"field-odd\"><ul className=\"simple\">\n              <li><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ProjectError\" title=\"substance_painter.exception.ProjectError\"><strong>ProjectError</strong></a> – If no project is opened.</p></li>\n              <li><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ServiceNotFoundError\" title=\"substance_painter.exception.ServiceNotFoundError\"><strong>ServiceNotFoundError</strong></a> – If Substance 3D Painter has not started all its services yet.</p></li>\n              <li><p className><strong>ValueError</strong> – If the stack is invalid.</p></li>\n            </ul>\n          </dd>\n        </dl>\n      </dd></dl>\n    <dl className=\"py method\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter.textureset.Stack.material\">\nmaterial()<a className=\"headerlink\" href=\"#substance_painter.textureset.Stack.material\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>Get the Texture Set this stack belongs to.</p>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Returns:</dt>\n          <dd className=\"field-odd\"><p className>The Texture Set this stack belongs to.</p>\n          </dd>\n          <dt className=\"field-even\">Return type:</dt>\n          <dd className=\"field-even\"><p className><a className=\"reference internal\" href=\"textureset.html#substance_painter.textureset.TextureSet\" title=\"substance_painter.textureset.TextureSet\">TextureSet</a></p>\n          </dd>\n          <dt className=\"field-odd\">Raises:</dt>\n          <dd className=\"field-odd\"><ul className=\"simple\">\n              <li><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ProjectError\" title=\"substance_painter.exception.ProjectError\"><strong>ProjectError</strong></a> – If no project is opened.</p></li>\n              <li><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ServiceNotFoundError\" title=\"substance_painter.exception.ServiceNotFoundError\"><strong>ServiceNotFoundError</strong></a> – If Substance 3D Painter has not started all its services yet.</p></li>\n              <li><p className><strong>ValueError</strong> – If the stack is invalid.</p></li>\n            </ul>\n          </dd>\n        </dl>\n        <div className=\"admonition seealso\">\n          <p className>See also</p>\n          <p className><a className=\"reference internal\" href=\"textureset.html#substance_painter.textureset.TextureSet\" title=\"substance_painter.textureset.TextureSet\"><code className=\"xref py py-class docutils literal notranslate\">TextureSet</code></a>,\n            <a className=\"reference internal\" href=\"index.html#substance_painter.textureset.all_texture_sets\" title=\"substance_painter.textureset.all_texture_sets\"><code className=\"xref py py-func docutils literal notranslate\">all_texture_sets()</code></a>.</p>\n        </div>\n      </dd></dl>\n    <dl className=\"py method\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter.textureset.Stack.all_channels\">\nall_channels() → Dict[<a className=\"reference internal\" href=\"index.html#substance_painter.textureset.ChannelType\" title=\"substance_painter.textureset.ChannelType\">ChannelType</a>, <a className=\"reference internal\" href=\"channel.html#substance_painter.textureset.Channel\" title=\"substance_painter.textureset.Channel\">Channel</a>]<a className=\"headerlink\" href=\"#substance_painter.textureset.Stack.all_channels\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>List all the channels of a stack.</p>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Returns:</dt>\n          <dd className=\"field-odd\"><p className>Map of all the channels of the stack.</p>\n          </dd>\n          <dt className=\"field-even\">Return type:</dt>\n          <dd className=\"field-even\"><p className>dict[<a className=\"reference internal\" href=\"index.html#substance_painter.textureset.ChannelType\" title=\"substance_painter.textureset.ChannelType\">ChannelType</a>, <a className=\"reference internal\" href=\"channel.html#substance_painter.textureset.Channel\" title=\"substance_painter.textureset.Channel\">Channel</a>]</p>\n          </dd>\n          <dt className=\"field-odd\">Raises:</dt>\n          <dd className=\"field-odd\"><ul className=\"simple\">\n              <li><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ProjectError\" title=\"substance_painter.exception.ProjectError\"><strong>ProjectError</strong></a> – If no project is opened.</p></li>\n              <li><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ServiceNotFoundError\" title=\"substance_painter.exception.ServiceNotFoundError\"><strong>ServiceNotFoundError</strong></a> – If Substance 3D Painter has not started all its services yet.</p></li>\n            </ul>\n          </dd>\n        </dl>\n        <div className=\"admonition seealso\">\n          <p className>See also</p>\n          <p className><a className=\"reference internal\" href=\"#substance_painter.textureset.Stack.add_channel\" title=\"substance_painter.textureset.Stack.add_channel\"><code className=\"xref py py-meth docutils literal notranslate\">Stack.add_channel()</code></a>,\n            <a className=\"reference internal\" href=\"#substance_painter.textureset.Stack.remove_channel\" title=\"substance_painter.textureset.Stack.remove_channel\"><code className=\"xref py py-meth docutils literal notranslate\">Stack.remove_channel()</code></a>.</p>\n        </div>\n      </dd></dl>\n    <dl className=\"py method\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter.textureset.Stack.add_channel\">\nadd_channel(<em className=\"sig-param\">channel_type: <a className=\"reference internal\" href=\"index.html#substance_painter.textureset.ChannelType\" title=\"substance_painter.textureset.ChannelType\">ChannelType</a></em>, <em className=\"sig-param\">channel_format: <a className=\"reference internal\" href=\"index.html#substance_painter.textureset.ChannelFormat\" title=\"substance_painter.textureset.ChannelFormat\">ChannelFormat</a></em>, <em className=\"sig-param\">label: str | None = None</em>) → <a className=\"reference internal\" href=\"channel.html#substance_painter.textureset.Channel\" title=\"substance_painter.textureset.Channel\">Channel</a><a className=\"headerlink\" href=\"#substance_painter.textureset.Stack.add_channel\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>Add a new channel to a stack.</p>\n        <div className=\"admonition note\">\n          <p className>Note</p>\n          <p className><cite>add_channel</cite> is not available with material layering.</p>\n        </div>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Parameters:</dt>\n          <dd className=\"field-odd\"><ul className=\"simple\">\n              <li><p className><strong>channel_type</strong> (<a className=\"reference internal\" href=\"index.html#substance_painter.textureset.ChannelType\" title=\"substance_painter.textureset.ChannelType\"><em>ChannelType</em></a>) – The channel type.</p></li>\n              <li><p className><strong>channel_format</strong> (<a className=\"reference internal\" href=\"index.html#substance_painter.textureset.ChannelFormat\" title=\"substance_painter.textureset.ChannelFormat\"><em>ChannelFormat</em></a>) – The texture format of the new channel.</p></li>\n              <li><p className><strong>label</strong> (<em>str</em><em>, </em><em>optional</em>) – The label of the channel in case of User channel as type.</p></li>\n            </ul>\n          </dd>\n          <dt className=\"field-even\">Returns:</dt>\n          <dd className=\"field-even\"><p className>The created channel.</p>\n          </dd>\n          <dt className=\"field-odd\">Return type:</dt>\n          <dd className=\"field-odd\"><p className><a className=\"reference internal\" href=\"channel.html#substance_painter.textureset.Channel\" title=\"substance_painter.textureset.Channel\">Channel</a></p>\n          </dd>\n          <dt className=\"field-even\">Raises:</dt>\n          <dd className=\"field-even\"><ul className=\"simple\">\n              <li><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ProjectError\" title=\"substance_painter.exception.ProjectError\"><strong>ProjectError</strong></a> – If no project is opened.</p></li>\n              <li><p className><strong>ValueError</strong> – If a channel of type <code className=\"docutils literal notranslate\">channel_type</code> already exists in this Texture Set.</p></li>\n              <li><p className><strong>ValueError</strong> – If a label was provided but <code className=\"docutils literal notranslate\">channel_type</code> is not a user type.\n    Standard channel types have fixed labels.</p></li>\n              <li><p className><strong>ValueError</strong> – If the stack is invalid.</p></li>\n              <li><p className><strong>ValueError</strong> – If the Texture Set uses material layering.</p></li>\n            </ul>\n          </dd>\n        </dl>\n        <div className=\"admonition seealso\">\n          <p className>See also</p>\n          <p className><a className=\"reference internal\" href=\"#substance_painter.textureset.Stack.all_channels\" title=\"substance_painter.textureset.Stack.all_channels\"><code className=\"xref py py-meth docutils literal notranslate\">Stack.all_channels()</code></a>,\n            <a className=\"reference internal\" href=\"#substance_painter.textureset.Stack.remove_channel\" title=\"substance_painter.textureset.Stack.remove_channel\"><code className=\"xref py py-meth docutils literal notranslate\">Stack.remove_channel()</code></a>,\n            <a className=\"reference internal\" href=\"#substance_painter.textureset.Stack.edit_channel\" title=\"substance_painter.textureset.Stack.edit_channel\"><code className=\"xref py py-meth docutils literal notranslate\">Stack.edit_channel()</code></a>.</p>\n        </div>\n      </dd></dl>\n    <dl className=\"py method\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter.textureset.Stack.remove_channel\">\nremove_channel(<em className=\"sig-param\">channel_type: <a className=\"reference internal\" href=\"index.html#substance_painter.textureset.ChannelType\" title=\"substance_painter.textureset.ChannelType\">ChannelType</a></em>) → None<a className=\"headerlink\" href=\"#substance_painter.textureset.Stack.remove_channel\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>Remove a channel from a stack.</p>\n        <div className=\"admonition note\">\n          <p className>Note</p>\n          <p className><cite>remove_channel</cite> is not available with material layering.</p>\n        </div>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Parameters:</dt>\n          <dd className=\"field-odd\"><p className><strong>channel_type</strong> (<a className=\"reference internal\" href=\"index.html#substance_painter.textureset.ChannelType\" title=\"substance_painter.textureset.ChannelType\"><em>ChannelType</em></a>) – The channel type.</p>\n          </dd>\n          <dt className=\"field-even\">Raises:</dt>\n          <dd className=\"field-even\"><ul className=\"simple\">\n              <li><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ProjectError\" title=\"substance_painter.exception.ProjectError\"><strong>ProjectError</strong></a> – If no project is opened.</p></li>\n              <li><p className><strong>ValueError</strong> – If there is no channel of type <code className=\"docutils literal notranslate\">channel_type</code> in this Texture Set.</p></li>\n              <li><p className><strong>ValueError</strong> – If the stack is invalid.</p></li>\n              <li><p className><strong>ValueError</strong> – If the Texture Set uses material layering.</p></li>\n            </ul>\n          </dd>\n        </dl>\n        <div className=\"admonition seealso\">\n          <p className>See also</p>\n          <p className><a className=\"reference internal\" href=\"#substance_painter.textureset.Stack.all_channels\" title=\"substance_painter.textureset.Stack.all_channels\"><code className=\"xref py py-meth docutils literal notranslate\">Stack.all_channels()</code></a>,\n            <a className=\"reference internal\" href=\"#substance_painter.textureset.Stack.add_channel\" title=\"substance_painter.textureset.Stack.add_channel\"><code className=\"xref py py-meth docutils literal notranslate\">Stack.add_channel()</code></a>,\n            <a className=\"reference internal\" href=\"#substance_painter.textureset.Stack.edit_channel\" title=\"substance_painter.textureset.Stack.edit_channel\"><code className=\"xref py py-meth docutils literal notranslate\">Stack.edit_channel()</code></a>.</p>\n        </div>\n      </dd></dl>\n    <dl className=\"py method\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter.textureset.Stack.edit_channel\">\nedit_channel(<em className=\"sig-param\">channel_type: <a className=\"reference internal\" href=\"index.html#substance_painter.textureset.ChannelType\" title=\"substance_painter.textureset.ChannelType\">ChannelType</a></em>, <em className=\"sig-param\">channel_format: <a className=\"reference internal\" href=\"index.html#substance_painter.textureset.ChannelFormat\" title=\"substance_painter.textureset.ChannelFormat\">ChannelFormat</a></em>, <em className=\"sig-param\">label: str | None = None</em>) → None<a className=\"headerlink\" href=\"#substance_painter.textureset.Stack.edit_channel\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>Change the texture format and label of a channel.</p>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Parameters:</dt>\n          <dd className=\"field-odd\"><ul className=\"simple\">\n              <li><p className><strong>channel_type</strong> (<a className=\"reference internal\" href=\"index.html#substance_painter.textureset.ChannelType\" title=\"substance_painter.textureset.ChannelType\"><em>ChannelType</em></a>) – The channel type.</p></li>\n              <li><p className><strong>channel_format</strong> (<a className=\"reference internal\" href=\"index.html#substance_painter.textureset.ChannelFormat\" title=\"substance_painter.textureset.ChannelFormat\"><em>ChannelFormat</em></a>) – The new texture format of the channel.</p></li>\n              <li><p className><strong>label</strong> (<em>str</em><em>, </em><em>optional</em>) – The label of the channel in case of User channel as type.</p></li>\n            </ul>\n          </dd>\n          <dt className=\"field-even\">Raises:</dt>\n          <dd className=\"field-even\"><ul className=\"simple\">\n              <li><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ProjectError\" title=\"substance_painter.exception.ProjectError\"><strong>ProjectError</strong></a> – If no project is opened.</p></li>\n              <li><p className><strong>ValueError</strong> – If there is no stack labeled <code className=\"docutils literal notranslate\">stack_id</code> in this Texture Set.</p></li>\n              <li><p className><strong>ValueError</strong> – If there is no channel of type <code className=\"docutils literal notranslate\">channel_type</code> in this Texture Set.</p></li>\n              <li><p className><strong>ValueError</strong> – If a label was provided but <code className=\"docutils literal notranslate\">channel_type</code> is not a user type.\n    Standard channel types have fixed labels.</p></li>\n              <li><p className><strong>ValueError</strong> – If the stack is invalid.</p></li>\n            </ul>\n          </dd>\n        </dl>\n        <div className=\"admonition seealso\">\n          <p className>See also</p>\n          <p className><a className=\"reference internal\" href=\"#substance_painter.textureset.Stack.add_channel\" title=\"substance_painter.textureset.Stack.add_channel\"><code className=\"xref py py-meth docutils literal notranslate\">Stack.add_channel()</code></a>,\n            <a className=\"reference internal\" href=\"#substance_painter.textureset.Stack.remove_channel\" title=\"substance_painter.textureset.Stack.remove_channel\"><code className=\"xref py py-meth docutils literal notranslate\">Stack.remove_channel()</code></a>.</p>\n        </div>\n      </dd></dl>\n    <dl className=\"py method\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter.textureset.Stack.has_channel\">\nhas_channel(<em className=\"sig-param\">channel_type: <a className=\"reference internal\" href=\"index.html#substance_painter.textureset.ChannelType\" title=\"substance_painter.textureset.ChannelType\">ChannelType</a></em>) → bool<a className=\"headerlink\" href=\"#substance_painter.textureset.Stack.has_channel\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>Check if a channel exists in a stack.</p>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Parameters:</dt>\n          <dd className=\"field-odd\"><p className><strong>channel_type</strong> (<a className=\"reference internal\" href=\"index.html#substance_painter.textureset.ChannelType\" title=\"substance_painter.textureset.ChannelType\"><em>ChannelType</em></a>) – The channel type.</p>\n          </dd>\n          <dt className=\"field-even\">Returns:</dt>\n          <dd className=\"field-even\"><p className><code className=\"docutils literal notranslate\">True</code> if the stack has a channel of the given type, <code className=\"docutils literal notranslate\">False</code> otherwise.</p>\n          </dd>\n          <dt className=\"field-odd\">Return type:</dt>\n          <dd className=\"field-odd\"><p className>bool</p>\n          </dd>\n          <dt className=\"field-even\">Raises:</dt>\n          <dd className=\"field-even\"><ul className=\"simple\">\n              <li><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ProjectError\" title=\"substance_painter.exception.ProjectError\"><strong>ProjectError</strong></a> – If no project is opened.</p></li>\n              <li><p className><strong>ValueError</strong> – If the stack is invalid.</p></li>\n            </ul>\n          </dd>\n        </dl>\n        <div className=\"admonition seealso\">\n          <p className>See also</p>\n          <p className><a className=\"reference internal\" href=\"#substance_painter.textureset.Stack.add_channel\" title=\"substance_painter.textureset.Stack.add_channel\"><code className=\"xref py py-meth docutils literal notranslate\">Stack.add_channel()</code></a>,\n            <a className=\"reference internal\" href=\"#substance_painter.textureset.Stack.remove_channel\" title=\"substance_painter.textureset.Stack.remove_channel\"><code className=\"xref py py-meth docutils literal notranslate\">Stack.remove_channel()</code></a>.</p>\n        </div>\n      </dd></dl>\n    <dl className=\"py method\">\n      <dt className=\"sig sig-object py\" id=\"substance_painter.textureset.Stack.get_channel\">\nget_channel(<em className=\"sig-param\">channel_type: <a className=\"reference internal\" href=\"index.html#substance_painter.textureset.ChannelType\" title=\"substance_painter.textureset.ChannelType\">ChannelType</a></em>) → <a className=\"reference internal\" href=\"channel.html#substance_painter.textureset.Channel\" title=\"substance_painter.textureset.Channel\">Channel</a><a className=\"headerlink\" href=\"#substance_painter.textureset.Stack.get_channel\" title=\"Link to this definition\"> </a></dt>\n      <dd><p className>Get an existing channel from its type.</p>\n        <dl className=\"field-list simple\">\n          <dt className=\"field-odd\">Parameters:</dt>\n          <dd className=\"field-odd\"><p className><strong>channel_type</strong> (<a className=\"reference internal\" href=\"channel.html#substance_painter.textureset.Channel\" title=\"substance_painter.textureset.Channel\"><em>Channel</em></a>) – The channel type.</p>\n          </dd>\n          <dt className=\"field-even\">Returns:</dt>\n          <dd className=\"field-even\"><p className>The channel.</p>\n          </dd>\n          <dt className=\"field-odd\">Return type:</dt>\n          <dd className=\"field-odd\"><p className><a className=\"reference internal\" href=\"channel.html#substance_painter.textureset.Channel\" title=\"substance_painter.textureset.Channel\">Channel</a></p>\n          </dd>\n          <dt className=\"field-even\">Raises:</dt>\n          <dd className=\"field-even\"><ul className=\"simple\">\n              <li><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ProjectError\" title=\"substance_painter.exception.ProjectError\"><strong>ProjectError</strong></a> – If no project is opened.</p></li>\n              <li><p className><a className=\"reference internal\" href=\"../exception.html#substance_painter.exception.ServiceNotFoundError\" title=\"substance_painter.exception.ServiceNotFoundError\"><strong>ServiceNotFoundError</strong></a> – If Substance 3D Painter has not started all its services yet.</p></li>\n              <li><p className><strong>ValueError</strong> – If the channel doesn’t exists.</p></li>\n            </ul>\n          </dd>\n        </dl>\n        <div className=\"admonition seealso\">\n          <p className>See also</p>\n          <p className><a className=\"reference internal\" href=\"#substance_painter.textureset.Stack.has_channel\" title=\"substance_painter.textureset.Stack.has_channel\"><code className=\"xref py py-meth docutils literal notranslate\">Stack.has_channel()</code></a>,\n            <a className=\"reference internal\" href=\"#substance_painter.textureset.Stack.add_channel\" title=\"substance_painter.textureset.Stack.add_channel\"><code className=\"xref py py-meth docutils literal notranslate\">Stack.add_channel()</code></a>,\n            <a className=\"reference internal\" href=\"#substance_painter.textureset.Stack.remove_channel\" title=\"substance_painter.textureset.Stack.remove_channel\"><code className=\"xref py py-meth docutils literal notranslate\">Stack.remove_channel()</code></a>.</p>\n        </div>\n      </dd></dl>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","_excluded","mdx","_extends","mdxType","className","href","title","id","parentName","isMDXComponent"],"sourceRoot":""}