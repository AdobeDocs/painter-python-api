{"version":3,"file":"component---src-pages-api-substance-painter-textureset-stack-md-ec37127bfd65b1f758a1.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/api/substance_painter/textureset/stack.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/painter-python-api/painter-python-api/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`Stack class — Substance 3D Painter Python API 0.2.11 documentation`}</p>\n    <h1 {...{\n      \"id\": \"stack-class\"\n    }}>{`Stack class`}</h1>\n    <blockquote>\n    </blockquote>\n    <hr></hr>\n    <blockquote>\n      <p parentName=\"blockquote\"><em parentName=\"p\">{`class`}</em>{` substance_painter.textureset.Stack(`}<em parentName=\"p\">{`stack_id: int | None = None`}</em>{`)\nA Substance 3D Painter paintable stack.`}</p>\n      <p parentName=\"blockquote\">{`A stack can contain a number of channels (BaseColor, Specular, Roughness,\netc.), that correspond to the material. The stack belongs to a Texture Set,\nwhich may contain one or more stacks.`}</p>\n      <p parentName=\"blockquote\">{`Typically, only one stack is used and that stack is transparent to the user.\nSelecting the Texture Set will select its stack. However, a Texture Set can\nuse layered materials with custom shaders, in which case a specific stack\nneeds to be selected.`}</p>\n      <p parentName=\"blockquote\">{`If the Texture Set doesn’t use material layering, you can retrieve its stack\nas follows:`}</p>\n      <pre parentName=\"blockquote\"><code parentName=\"pre\" {...{\n          \"className\": \"language-python\"\n        }}>{`import substance_painter.textureset\n\n# Get the unnamed stack of \"TextureSetName\":\npaintable_stack = substance_painter.textureset.Stack.from_name(\"TextureSetName\")\n\n# Alternatively, get the stack from a Texture Set instance:\nmy_texture_set = substance_painter.textureset.TextureSet.from_name(\"TextureSetName\")\npaintable_stack = my_texture_set.get_stack()\n\n`}</code></pre>\n      <p parentName=\"blockquote\">{`If the Texture Set does use material layering, you can retrieve its stacks\nas follows:`}</p>\n      <pre parentName=\"blockquote\"><code parentName=\"pre\" {...{\n          \"className\": \"language-python\"\n        }}>{`import substance_painter.textureset\n\n# Get the stack called \"Mask1\" from the Texture Set \"TextureSetName\":\npaintable_stack = substance_painter.textureset.Stack.from_name(\"TextureSetName\",\n                                                               \"Mask1\")\n\n# Alternatively, get the stack from a Texture Set instance:\nmy_texture_set = substance_painter.textureset.TextureSet.from_name(\"TextureSetName\")\npaintable_stack = my_texture_set.get_stack(\"Mask1\")\n\n# Show the name of the stack:\nprint(paintable_stack.name())\n\n`}</code></pre>\n      <p parentName=\"blockquote\">{`It is possible to query, add, remove or edit the channels of a stack:`}</p>\n      <pre parentName=\"blockquote\"><code parentName=\"pre\" {...{\n          \"className\": \"language-python\"\n        }}>{`import substance_painter.textureset\n\n# Get the unnamed stack of \"TextureSetName\":\npaintable_stack = substance_painter.textureset.Stack.from_name(\"TextureSetName\")\n\n# List all the channels of the \"TextureSetName\" Texture Set:\nfor k,v in paintable_stack.all_channels().items():\n    print(\"{0}: {1}\".format(k, str(v.format())))\n\n# Add a scattering channel to the \"TextureSetName\" Texture Set:\npaintable_stack.add_channel(substance_painter.textureset.ChannelType.Scattering,\n                            substance_painter.textureset.ChannelFormat.L8)\n\n# Query details of the added scattering channel:\nif paintable_stack.has_channel(substance_painter.textureset.ChannelType.Scattering):\n    channel = paintable_stack.get_channel(\n        substance_painter.textureset.ChannelType.Scattering)\n    print(\"The Texture Set now has a scattering channel with {0} bits per pixel.\"\n        .format(channel.bit_depth()))\n\n# Change the scattering channel to 16 bits inside the \"TextureSetName\" Texture Set:\npaintable_stack.edit_channel(\n    channel_type = substance_painter.textureset.ChannelType.Scattering,\n    channel_format = substance_painter.textureset.ChannelFormat.L16)\n\n# Remove the scattering channel from \"TextureSetName\":\npaintable_stack.remove_channel(substance_painter.textureset.ChannelType.Scattering)\n\n`}</code></pre>\n      <p parentName=\"blockquote\">{`See also`}</p>\n      <p parentName=\"blockquote\"><a parentName=\"p\" {...{\n          \"href\": \"textureset.html#substance_painter.textureset.TextureSet\",\n          \"title\": \"substance_painter.textureset.TextureSet\"\n        }}><inlineCode parentName=\"a\">{`TextureSet`}</inlineCode></a>{`,\n`}<a parentName=\"p\" {...{\n          \"href\": \"https://www.adobe.com/go/painter-texture-set\"\n        }}>{`Texture Set documentation`}</a>{`.`}</p>\n      <p parentName=\"blockquote\"><em parentName=\"p\">{`static`}</em>{` from_name(`}<em parentName=\"p\">{`texture_set_name: str`}</em>{`, `}<em parentName=\"p\">{`stack_name: str = ''`}</em>{`)\nGet a stack from its name.`}</p>\n      <p parentName=\"blockquote\">{`Parameters:`}</p>\n      <ul parentName=\"blockquote\">\n        <li parentName=\"ul\"><strong parentName=\"li\">{`texture_set_name`}</strong>{` (`}<em parentName=\"li\">{`str`}</em>{`) – Texture Set name.`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`stack_name`}</strong>{` (`}<em parentName=\"li\">{`str`}</em>{`) – Stack name.\nLeave empty if the Texture Set does not use material layering.`}</li>\n      </ul>\n      <p parentName=\"blockquote\">{`Note`}</p>\n      <p parentName=\"blockquote\">{`The Texture Set and stack names are case sensitive.`}</p>\n      <p parentName=\"blockquote\">{`Raises:`}</p>\n      <ul parentName=\"blockquote\">\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"../exception.html#substance_painter.exception.ProjectError\",\n            \"title\": \"substance_painter.exception.ProjectError\"\n          }}><strong parentName=\"a\">{`ProjectError`}</strong></a>{` – If no project is opened.`}</li>\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"../exception.html#substance_painter.exception.ServiceNotFoundError\",\n            \"title\": \"substance_painter.exception.ServiceNotFoundError\"\n          }}><strong parentName=\"a\">{`ServiceNotFoundError`}</strong></a>{` – If Substance 3D Painter has not started all its services yet.`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If `}<inlineCode parentName=\"li\">{`texture_set_name`}</inlineCode>{` is not string.`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If there is no Texture Set with the name `}<inlineCode parentName=\"li\">{`texture_set_name`}</inlineCode>{`.`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If there is no stack with the name `}<inlineCode parentName=\"li\">{`stack_name`}</inlineCode>{`.`}</li>\n      </ul>\n      <p parentName=\"blockquote\">{`See also`}</p>\n      <p parentName=\"blockquote\"><a parentName=\"p\" {...{\n          \"href\": \"textureset.html#substance_painter.textureset.TextureSet.all_stacks\",\n          \"title\": \"substance_painter.textureset.TextureSet.all_stacks\"\n        }}><inlineCode parentName=\"a\">{`TextureSet.all_stacks()`}</inlineCode></a>{`,\n`}<a parentName=\"p\" {...{\n          \"href\": \"textureset.html#substance_painter.textureset.TextureSet.get_stack\",\n          \"title\": \"substance_painter.textureset.TextureSet.get_stack\"\n        }}><inlineCode parentName=\"a\">{`TextureSet.get_stack()`}</inlineCode></a>{`.`}</p>\n      <p parentName=\"blockquote\">{`name() → str\nGet the stack name.\nA stack name is empty if the Texture Set it belongs to uses material layering.`}</p>\n      <p parentName=\"blockquote\">{`Returns:\nThe stack name.`}</p>\n      <p parentName=\"blockquote\">{`Return type:\nstr`}</p>\n      <p parentName=\"blockquote\">{`Raises:`}</p>\n      <ul parentName=\"blockquote\">\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"../exception.html#substance_painter.exception.ProjectError\",\n            \"title\": \"substance_painter.exception.ProjectError\"\n          }}><strong parentName=\"a\">{`ProjectError`}</strong></a>{` – If no project is opened.`}</li>\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"../exception.html#substance_painter.exception.ServiceNotFoundError\",\n            \"title\": \"substance_painter.exception.ServiceNotFoundError\"\n          }}><strong parentName=\"a\">{`ServiceNotFoundError`}</strong></a>{` – If Substance 3D Painter has not started all its services yet.`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If the stack is invalid.`}</li>\n      </ul>\n      <p parentName=\"blockquote\">{`material()\nGet the Texture Set this stack belongs to.`}</p>\n      <p parentName=\"blockquote\">{`Returns:\nThe Texture Set this stack belongs to.`}</p>\n      <p parentName=\"blockquote\">{`Return type:\n`}<a parentName=\"p\" {...{\n          \"href\": \"textureset.html#substance_painter.textureset.TextureSet\",\n          \"title\": \"substance_painter.textureset.TextureSet\"\n        }}>{`TextureSet`}</a></p>\n      <p parentName=\"blockquote\">{`Raises:`}</p>\n      <ul parentName=\"blockquote\">\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"../exception.html#substance_painter.exception.ProjectError\",\n            \"title\": \"substance_painter.exception.ProjectError\"\n          }}><strong parentName=\"a\">{`ProjectError`}</strong></a>{` – If no project is opened.`}</li>\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"../exception.html#substance_painter.exception.ServiceNotFoundError\",\n            \"title\": \"substance_painter.exception.ServiceNotFoundError\"\n          }}><strong parentName=\"a\">{`ServiceNotFoundError`}</strong></a>{` – If Substance 3D Painter has not started all its services yet.`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If the stack is invalid.`}</li>\n      </ul>\n      <p parentName=\"blockquote\">{`See also`}</p>\n      <p parentName=\"blockquote\"><a parentName=\"p\" {...{\n          \"href\": \"textureset.html#substance_painter.textureset.TextureSet\",\n          \"title\": \"substance_painter.textureset.TextureSet\"\n        }}><inlineCode parentName=\"a\">{`TextureSet`}</inlineCode></a>{`,\n`}<a parentName=\"p\" {...{\n          \"href\": \"index.html#substance_painter.textureset.all_texture_sets\",\n          \"title\": \"substance_painter.textureset.all_texture_sets\"\n        }}><inlineCode parentName=\"a\">{`all_texture_sets()`}</inlineCode></a>{`.`}</p>\n      <p parentName=\"blockquote\">{`all_channels() → Dict[`}<a parentName=\"p\" {...{\n          \"href\": \"index.html#substance_painter.textureset.ChannelType\",\n          \"title\": \"substance_painter.textureset.ChannelType\"\n        }}>{`ChannelType`}</a>{`, `}<a parentName=\"p\" {...{\n          \"href\": \"channel.html#substance_painter.textureset.Channel\",\n          \"title\": \"substance_painter.textureset.Channel\"\n        }}>{`Channel`}</a>{`]\nList all the channels of a stack.`}</p>\n      <p parentName=\"blockquote\">{`Returns:\nMap of all the channels of the stack.`}</p>\n      <p parentName=\"blockquote\">{`Return type:\ndict[`}<a parentName=\"p\" {...{\n          \"href\": \"index.html#substance_painter.textureset.ChannelType\",\n          \"title\": \"substance_painter.textureset.ChannelType\"\n        }}>{`ChannelType`}</a>{`, `}<a parentName=\"p\" {...{\n          \"href\": \"channel.html#substance_painter.textureset.Channel\",\n          \"title\": \"substance_painter.textureset.Channel\"\n        }}>{`Channel`}</a>{`]`}</p>\n      <p parentName=\"blockquote\">{`Raises:`}</p>\n      <ul parentName=\"blockquote\">\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"../exception.html#substance_painter.exception.ProjectError\",\n            \"title\": \"substance_painter.exception.ProjectError\"\n          }}><strong parentName=\"a\">{`ProjectError`}</strong></a>{` – If no project is opened.`}</li>\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"../exception.html#substance_painter.exception.ServiceNotFoundError\",\n            \"title\": \"substance_painter.exception.ServiceNotFoundError\"\n          }}><strong parentName=\"a\">{`ServiceNotFoundError`}</strong></a>{` – If Substance 3D Painter has not started all its services yet.`}</li>\n      </ul>\n      <p parentName=\"blockquote\">{`See also`}</p>\n      <p parentName=\"blockquote\"><a parentName=\"p\" {...{\n          \"href\": \"#substance_painter.textureset.Stack.add_channel\",\n          \"title\": \"substance_painter.textureset.Stack.add_channel\"\n        }}><inlineCode parentName=\"a\">{`Stack.add_channel()`}</inlineCode></a>{`,\n`}<a parentName=\"p\" {...{\n          \"href\": \"#substance_painter.textureset.Stack.remove_channel\",\n          \"title\": \"substance_painter.textureset.Stack.remove_channel\"\n        }}><inlineCode parentName=\"a\">{`Stack.remove_channel()`}</inlineCode></a>{`.`}</p>\n      <p parentName=\"blockquote\">{`add_channel(`}<em parentName=\"p\">{`channel_type: `}<a parentName=\"em\" {...{\n            \"href\": \"index.html#substance_painter.textureset.ChannelType\",\n            \"title\": \"substance_painter.textureset.ChannelType\"\n          }}>{`ChannelType`}</a></em>{`, `}<em parentName=\"p\">{`channel_format: `}<a parentName=\"em\" {...{\n            \"href\": \"index.html#substance_painter.textureset.ChannelFormat\",\n            \"title\": \"substance_painter.textureset.ChannelFormat\"\n          }}>{`ChannelFormat`}</a></em>{`, `}<em parentName=\"p\">{`label: str | None = None`}</em>{`) → `}<a parentName=\"p\" {...{\n          \"href\": \"channel.html#substance_painter.textureset.Channel\",\n          \"title\": \"substance_painter.textureset.Channel\"\n        }}>{`Channel`}</a>{`\nAdd a new channel to a stack.`}</p>\n      <p parentName=\"blockquote\">{`Note`}</p>\n      <p parentName=\"blockquote\">{`add_channel is not available with material layering.`}</p>\n      <p parentName=\"blockquote\">{`Parameters:`}</p>\n      <ul parentName=\"blockquote\">\n        <li parentName=\"ul\"><strong parentName=\"li\">{`channel_type`}</strong>{` (`}<a parentName=\"li\" {...{\n            \"href\": \"index.html#substance_painter.textureset.ChannelType\",\n            \"title\": \"substance_painter.textureset.ChannelType\"\n          }}><em parentName=\"a\">{`ChannelType`}</em></a>{`) – The channel type.`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`channel_format`}</strong>{` (`}<a parentName=\"li\" {...{\n            \"href\": \"index.html#substance_painter.textureset.ChannelFormat\",\n            \"title\": \"substance_painter.textureset.ChannelFormat\"\n          }}><em parentName=\"a\">{`ChannelFormat`}</em></a>{`) – The texture format of the new channel.`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`label`}</strong>{` (`}<em parentName=\"li\">{`str**,`}</em>{` `}<em parentName=\"li\">{`optional`}</em>{`) – The label of the channel in case of User channel as type.`}</li>\n      </ul>\n      <p parentName=\"blockquote\">{`Returns:\nThe created channel.`}</p>\n      <p parentName=\"blockquote\">{`Return type:\n`}<a parentName=\"p\" {...{\n          \"href\": \"channel.html#substance_painter.textureset.Channel\",\n          \"title\": \"substance_painter.textureset.Channel\"\n        }}>{`Channel`}</a></p>\n      <p parentName=\"blockquote\">{`Raises:`}</p>\n      <ul parentName=\"blockquote\">\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"../exception.html#substance_painter.exception.ProjectError\",\n            \"title\": \"substance_painter.exception.ProjectError\"\n          }}><strong parentName=\"a\">{`ProjectError`}</strong></a>{` – If no project is opened.`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If a channel of type `}<inlineCode parentName=\"li\">{`channel_type`}</inlineCode>{` already exists in this Texture Set.`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If a label was provided but `}<inlineCode parentName=\"li\">{`channel_type`}</inlineCode>{` is not a user type.\nStandard channel types have fixed labels.`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If the stack is invalid.`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If the Texture Set uses material layering.`}</li>\n      </ul>\n      <p parentName=\"blockquote\">{`See also`}</p>\n      <p parentName=\"blockquote\"><a parentName=\"p\" {...{\n          \"href\": \"#substance_painter.textureset.Stack.all_channels\",\n          \"title\": \"substance_painter.textureset.Stack.all_channels\"\n        }}><inlineCode parentName=\"a\">{`Stack.all_channels()`}</inlineCode></a>{`,\n`}<a parentName=\"p\" {...{\n          \"href\": \"#substance_painter.textureset.Stack.remove_channel\",\n          \"title\": \"substance_painter.textureset.Stack.remove_channel\"\n        }}><inlineCode parentName=\"a\">{`Stack.remove_channel()`}</inlineCode></a>{`,\n`}<a parentName=\"p\" {...{\n          \"href\": \"#substance_painter.textureset.Stack.edit_channel\",\n          \"title\": \"substance_painter.textureset.Stack.edit_channel\"\n        }}><inlineCode parentName=\"a\">{`Stack.edit_channel()`}</inlineCode></a>{`.`}</p>\n      <p parentName=\"blockquote\">{`remove_channel(`}<em parentName=\"p\">{`channel_type: `}<a parentName=\"em\" {...{\n            \"href\": \"index.html#substance_painter.textureset.ChannelType\",\n            \"title\": \"substance_painter.textureset.ChannelType\"\n          }}>{`ChannelType`}</a></em>{`) → None\nRemove a channel from a stack.`}</p>\n      <p parentName=\"blockquote\">{`Note`}</p>\n      <p parentName=\"blockquote\">{`remove_channel is not available with material layering.`}</p>\n      <p parentName=\"blockquote\">{`Parameters:\n`}<strong parentName=\"p\">{`channel_type`}</strong>{` (`}<a parentName=\"p\" {...{\n          \"href\": \"index.html#substance_painter.textureset.ChannelType\",\n          \"title\": \"substance_painter.textureset.ChannelType\"\n        }}><em parentName=\"a\">{`ChannelType`}</em></a>{`) – The channel type.`}</p>\n      <p parentName=\"blockquote\">{`Raises:`}</p>\n      <ul parentName=\"blockquote\">\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"../exception.html#substance_painter.exception.ProjectError\",\n            \"title\": \"substance_painter.exception.ProjectError\"\n          }}><strong parentName=\"a\">{`ProjectError`}</strong></a>{` – If no project is opened.`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If there is no channel of type `}<inlineCode parentName=\"li\">{`channel_type`}</inlineCode>{` in this Texture Set.`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If the stack is invalid.`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If the Texture Set uses material layering.`}</li>\n      </ul>\n      <p parentName=\"blockquote\">{`See also`}</p>\n      <p parentName=\"blockquote\"><a parentName=\"p\" {...{\n          \"href\": \"#substance_painter.textureset.Stack.all_channels\",\n          \"title\": \"substance_painter.textureset.Stack.all_channels\"\n        }}><inlineCode parentName=\"a\">{`Stack.all_channels()`}</inlineCode></a>{`,\n`}<a parentName=\"p\" {...{\n          \"href\": \"#substance_painter.textureset.Stack.add_channel\",\n          \"title\": \"substance_painter.textureset.Stack.add_channel\"\n        }}><inlineCode parentName=\"a\">{`Stack.add_channel()`}</inlineCode></a>{`,\n`}<a parentName=\"p\" {...{\n          \"href\": \"#substance_painter.textureset.Stack.edit_channel\",\n          \"title\": \"substance_painter.textureset.Stack.edit_channel\"\n        }}><inlineCode parentName=\"a\">{`Stack.edit_channel()`}</inlineCode></a>{`.`}</p>\n      <p parentName=\"blockquote\">{`edit_channel(`}<em parentName=\"p\">{`channel_type: `}<a parentName=\"em\" {...{\n            \"href\": \"index.html#substance_painter.textureset.ChannelType\",\n            \"title\": \"substance_painter.textureset.ChannelType\"\n          }}>{`ChannelType`}</a></em>{`, `}<em parentName=\"p\">{`channel_format: `}<a parentName=\"em\" {...{\n            \"href\": \"index.html#substance_painter.textureset.ChannelFormat\",\n            \"title\": \"substance_painter.textureset.ChannelFormat\"\n          }}>{`ChannelFormat`}</a></em>{`, `}<em parentName=\"p\">{`label: str | None = None`}</em>{`) → None\nChange the texture format and label of a channel.`}</p>\n      <p parentName=\"blockquote\">{`Parameters:`}</p>\n      <ul parentName=\"blockquote\">\n        <li parentName=\"ul\"><strong parentName=\"li\">{`channel_type`}</strong>{` (`}<a parentName=\"li\" {...{\n            \"href\": \"index.html#substance_painter.textureset.ChannelType\",\n            \"title\": \"substance_painter.textureset.ChannelType\"\n          }}><em parentName=\"a\">{`ChannelType`}</em></a>{`) – The channel type.`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`channel_format`}</strong>{` (`}<a parentName=\"li\" {...{\n            \"href\": \"index.html#substance_painter.textureset.ChannelFormat\",\n            \"title\": \"substance_painter.textureset.ChannelFormat\"\n          }}><em parentName=\"a\">{`ChannelFormat`}</em></a>{`) – The new texture format of the channel.`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`label`}</strong>{` (`}<em parentName=\"li\">{`str**,`}</em>{` `}<em parentName=\"li\">{`optional`}</em>{`) – The label of the channel in case of User channel as type.`}</li>\n      </ul>\n      <p parentName=\"blockquote\">{`Raises:`}</p>\n      <ul parentName=\"blockquote\">\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"../exception.html#substance_painter.exception.ProjectError\",\n            \"title\": \"substance_painter.exception.ProjectError\"\n          }}><strong parentName=\"a\">{`ProjectError`}</strong></a>{` – If no project is opened.`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If there is no stack labeled `}<inlineCode parentName=\"li\">{`stack_id`}</inlineCode>{` in this Texture Set.`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If there is no channel of type `}<inlineCode parentName=\"li\">{`channel_type`}</inlineCode>{` in this Texture Set.`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If a label was provided but `}<inlineCode parentName=\"li\">{`channel_type`}</inlineCode>{` is not a user type.\nStandard channel types have fixed labels.`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If the stack is invalid.`}</li>\n      </ul>\n      <p parentName=\"blockquote\">{`See also`}</p>\n      <p parentName=\"blockquote\"><a parentName=\"p\" {...{\n          \"href\": \"#substance_painter.textureset.Stack.add_channel\",\n          \"title\": \"substance_painter.textureset.Stack.add_channel\"\n        }}><inlineCode parentName=\"a\">{`Stack.add_channel()`}</inlineCode></a>{`,\n`}<a parentName=\"p\" {...{\n          \"href\": \"#substance_painter.textureset.Stack.remove_channel\",\n          \"title\": \"substance_painter.textureset.Stack.remove_channel\"\n        }}><inlineCode parentName=\"a\">{`Stack.remove_channel()`}</inlineCode></a>{`.`}</p>\n      <p parentName=\"blockquote\">{`has_channel(`}<em parentName=\"p\">{`channel_type: `}<a parentName=\"em\" {...{\n            \"href\": \"index.html#substance_painter.textureset.ChannelType\",\n            \"title\": \"substance_painter.textureset.ChannelType\"\n          }}>{`ChannelType`}</a></em>{`) → bool\nCheck if a channel exists in a stack.`}</p>\n      <p parentName=\"blockquote\">{`Parameters:\n`}<strong parentName=\"p\">{`channel_type`}</strong>{` (`}<a parentName=\"p\" {...{\n          \"href\": \"index.html#substance_painter.textureset.ChannelType\",\n          \"title\": \"substance_painter.textureset.ChannelType\"\n        }}><em parentName=\"a\">{`ChannelType`}</em></a>{`) – The channel type.`}</p>\n      <p parentName=\"blockquote\">{`Returns:\n`}<inlineCode parentName=\"p\">{`True`}</inlineCode>{` if the stack has a channel of the given type, `}<inlineCode parentName=\"p\">{`False`}</inlineCode>{` otherwise.`}</p>\n      <p parentName=\"blockquote\">{`Return type:\nbool`}</p>\n      <p parentName=\"blockquote\">{`Raises:`}</p>\n      <ul parentName=\"blockquote\">\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"../exception.html#substance_painter.exception.ProjectError\",\n            \"title\": \"substance_painter.exception.ProjectError\"\n          }}><strong parentName=\"a\">{`ProjectError`}</strong></a>{` – If no project is opened.`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If the stack is invalid.`}</li>\n      </ul>\n      <p parentName=\"blockquote\">{`See also`}</p>\n      <p parentName=\"blockquote\"><a parentName=\"p\" {...{\n          \"href\": \"#substance_painter.textureset.Stack.add_channel\",\n          \"title\": \"substance_painter.textureset.Stack.add_channel\"\n        }}><inlineCode parentName=\"a\">{`Stack.add_channel()`}</inlineCode></a>{`,\n`}<a parentName=\"p\" {...{\n          \"href\": \"#substance_painter.textureset.Stack.remove_channel\",\n          \"title\": \"substance_painter.textureset.Stack.remove_channel\"\n        }}><inlineCode parentName=\"a\">{`Stack.remove_channel()`}</inlineCode></a>{`.`}</p>\n      <p parentName=\"blockquote\">{`get_channel(`}<em parentName=\"p\">{`channel_type: `}<a parentName=\"em\" {...{\n            \"href\": \"index.html#substance_painter.textureset.ChannelType\",\n            \"title\": \"substance_painter.textureset.ChannelType\"\n          }}>{`ChannelType`}</a></em>{`) → `}<a parentName=\"p\" {...{\n          \"href\": \"channel.html#substance_painter.textureset.Channel\",\n          \"title\": \"substance_painter.textureset.Channel\"\n        }}>{`Channel`}</a>{`\nGet an existing channel from its type.`}</p>\n      <p parentName=\"blockquote\">{`Parameters:\n`}<strong parentName=\"p\">{`channel_type`}</strong>{` (`}<a parentName=\"p\" {...{\n          \"href\": \"channel.html#substance_painter.textureset.Channel\",\n          \"title\": \"substance_painter.textureset.Channel\"\n        }}><em parentName=\"a\">{`Channel`}</em></a>{`) – The channel type.`}</p>\n      <p parentName=\"blockquote\">{`Returns:\nThe channel.`}</p>\n      <p parentName=\"blockquote\">{`Return type:\n`}<a parentName=\"p\" {...{\n          \"href\": \"channel.html#substance_painter.textureset.Channel\",\n          \"title\": \"substance_painter.textureset.Channel\"\n        }}>{`Channel`}</a></p>\n      <p parentName=\"blockquote\">{`Raises:`}</p>\n      <ul parentName=\"blockquote\">\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"../exception.html#substance_painter.exception.ProjectError\",\n            \"title\": \"substance_painter.exception.ProjectError\"\n          }}><strong parentName=\"a\">{`ProjectError`}</strong></a>{` – If no project is opened.`}</li>\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"../exception.html#substance_painter.exception.ServiceNotFoundError\",\n            \"title\": \"substance_painter.exception.ServiceNotFoundError\"\n          }}><strong parentName=\"a\">{`ServiceNotFoundError`}</strong></a>{` – If Substance 3D Painter has not started all its services yet.`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If the channel doesn’t exists.`}</li>\n      </ul>\n      <p parentName=\"blockquote\">{`See also`}</p>\n      <p parentName=\"blockquote\"><a parentName=\"p\" {...{\n          \"href\": \"#substance_painter.textureset.Stack.has_channel\",\n          \"title\": \"substance_painter.textureset.Stack.has_channel\"\n        }}><inlineCode parentName=\"a\">{`Stack.has_channel()`}</inlineCode></a>{`,\n`}<a parentName=\"p\" {...{\n          \"href\": \"#substance_painter.textureset.Stack.add_channel\",\n          \"title\": \"substance_painter.textureset.Stack.add_channel\"\n        }}><inlineCode parentName=\"a\">{`Stack.add_channel()`}</inlineCode></a>{`,\n`}<a parentName=\"p\" {...{\n          \"href\": \"#substance_painter.textureset.Stack.remove_channel\",\n          \"title\": \"substance_painter.textureset.Stack.remove_channel\"\n        }}><inlineCode parentName=\"a\">{`Stack.remove_channel()`}</inlineCode></a>{`.`}</p>\n    </blockquote>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}