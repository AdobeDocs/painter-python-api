{"version":3,"file":"component---src-pages-api-substance-painter-properties-md-04a35e96af6509c64687.js","mappings":"oTAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAFDC,EAAUD,EAAVC,WACGC,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GAER,OAAOC,EAAAA,EAAAA,KAACR,GAASS,EAAAA,EAAAA,GAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,eAG5EF,EAAAA,EAAAA,KAAA,sFACAA,EAAAA,EAAAA,KAAA,MACE,GAAM,qBAAmB,sBAE3BA,EAAAA,EAAAA,KAAA,iBAAWA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,cAA4B,8DACjEH,EAAAA,EAAAA,KAAA,YACAA,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KAAG,SAAe,2CAA2CH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KAAG,qDAA2D,4CAE5JH,EAAAA,EAAAA,KAAA,iRAEAA,EAAAA,EAAAA,KAAA,0CAEAA,EAAAA,EAAAA,KAAA,yCAEAA,EAAAA,EAAAA,KAAA,kDAEAA,EAAAA,EAAAA,KAAA,0CAEAA,EAAAA,EAAAA,KAAA,+BAEAA,EAAAA,EAAAA,KAAA,kEAEAA,EAAAA,EAAAA,KAAA,gDAEAA,EAAAA,EAAAA,KAAA,+BAEAA,EAAAA,EAAAA,KAAA,oDAEAA,EAAAA,EAAAA,KAAA,2CAEAA,EAAAA,EAAAA,KAAA,+BAEAA,EAAAA,EAAAA,KAAA,gGAEAA,EAAAA,EAAAA,KAAA,+JAIAA,EAAAA,EAAAA,KAAA,+BAEAA,EAAAA,EAAAA,KAAA,iIAGAA,EAAAA,EAAAA,KAAA,4DAEAA,EAAAA,EAAAA,KAAA,2BACFA,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KAAG,QAAc,eAC9BH,EAAAA,EAAAA,KAAA,wBAAkBA,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KAAG,mBAAyB,sFAG7DH,EAAAA,EAAAA,KAAA,0BACFA,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,cAAwB,MAAMH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KAAG,OAAa,4BACjFH,EAAAA,EAAAA,KAAA,mEAEAA,EAAAA,EAAAA,KAAA,2BACFA,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KAAG,QAAc,eAC9BH,EAAAA,EAAAA,KAAA,0MAGAA,EAAAA,EAAAA,KAAA,sCAEAA,EAAAA,EAAAA,KAAA,2BACFA,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KAAG,QAAc,UAAUH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KAAG,OAAa,KAG3E,CAEAT,EAAWU,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/api/substance_painter/properties.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/painter-python-api/painter-python-api/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`properties module — Substance 3D Painter Python API 0.2.11 documentation`}</p>\n    <h1 {...{\n      \"id\": \"properties-module\"\n    }}>{`properties module`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`properties`}</inlineCode>{` module introduces the description of dynamic attributes.`}</p>\n    <hr></hr>\n    <p><em parentName=\"p\">{`class`}</em>{` substance_painter.properties.Property(`}<em parentName=\"p\">{`handle: _substance_painter.data_tweak.PythonTweak`}</em>{`)\nRead only access to a property data.`}</p>\n    <p>{`value() → bool | int | Tuple`}{`[int, int]`}{` | Tuple`}{`[int, int, int]`}{` | Tuple`}{`[int, int, int, int]`}{` | float | Tuple`}{`[float, float]`}{` | Tuple`}{`[float, float, float]`}{` | Tuple`}{`[float, float, float, float]`}{` | str\nGet the current porperty value.`}</p>\n    <p>{`Returns:\nthe current value.`}</p>\n    <p>{`Return type:\nPropertyValue`}</p>\n    <p>{`name() → str\nGet the porperty name.`}</p>\n    <p>{`Returns:\nThe property name.`}</p>\n    <p>{`Return type:\nstr`}</p>\n    <p>{`short_name() → str\nGet the shortened property name.`}</p>\n    <p>{`Returns:\nThe property short name.`}</p>\n    <p>{`Return type:\nstr`}</p>\n    <p>{`label() → str\nGet the property label.`}</p>\n    <p>{`Returns:\nThe property label.`}</p>\n    <p>{`Return type:\nstr`}</p>\n    <p>{`widget_type() → str\nGet the widget type that should be used to edit the property.`}</p>\n    <p>{`Returns:\nOne of: ‘Slider’, ‘Angle’, ‘Color’, ‘Togglebutton’,\n‘Combobox’, ‘RandomSeed’, ‘File’, ‘FileList’, ‘LineEdit’,\n‘Resource’, ‘TextEdit’.`}</p>\n    <p>{`Return type:\nstr`}</p>\n    <p>{`enum_values() → Dict`}{`[str, int]`}{`\nThe possible enum values with corresponding text for ‘Combobox’\nwidget type.`}</p>\n    <p>{`Returns:\nEnum label to enum value dictionary.`}</p>\n    <p>{`Return type:\n`}<em parentName=\"p\">{`Dict`}</em>{`[str, int]`}</p>\n    <p>{`enum_value(`}<em parentName=\"p\">{`enum_label: str`}</em>{`) → int\nGet the enum value for the given enum label for ‘Combobox’\nwidget type.`}</p>\n    <p>{`Parameters:\n`}<strong parentName=\"p\">{`enum_label`}</strong>{` (`}<em parentName=\"p\">{`str`}</em>{`) – A valid enum label.`}</p>\n    <p>{`Returns:\nThe enum value for the corresponding label.`}</p>\n    <p>{`Return type:\n`}<em parentName=\"p\">{`Dict`}</em>{`[str, int]`}</p>\n    <p>{`properties() → Dict`}{`[str, Any]`}{`\nGet a json object that describes all available meta properties of this\nproperty. For example: value range, editor step, possible values, tooltip, etc.`}</p>\n    <p>{`Returns:\nA json object.`}</p>\n    <p>{`Return type:\n`}<em parentName=\"p\">{`Dict`}</em>{`[str, `}<em parentName=\"p\">{`Any`}</em>{`]`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}