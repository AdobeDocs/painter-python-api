{"version":3,"file":"component---src-pages-api-substance-painter-resource-md-eed58e7a1a563d6a63c6.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/api/substance_painter/resource.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/painter-python-api/painter-python-api/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`resource module — Substance 3D Painter Python API 0.2.11 documentation`}</p>\n    <h1 {...{\n      \"id\": \"resource-module\"\n    }}>{`resource module`}</h1>\n    <p>{`This module allows to manipulate Substance 3D Painter resources and shelves.`}</p>\n    <p>{`Substance 3D Painter treats textures, materials, brushes, etc. as resources,\nand uses URLs to identify them. Resources can be in the shelf, or can be\nembedded directly in a project (like a baked ambient occlusion texture for\nexample).`}</p>\n    <hr></hr>\n    <p><em parentName=\"p\">{`class`}</em>{` substance_painter.resource.Type(`}<em parentName=\"p\">{`value`}</em>{`)\nEnumeration describing the type of a given resource.`}</p>\n    <p>{`Members:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Usage`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`SCRIPT`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A particle emitter script.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`PRESET`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A resource preset.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`SMART_MASK`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A smart mask.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`IMAGE`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`An image.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`SUBSTANCE`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A substance.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`SHADER`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A shader.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`EXPORT`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`An export preset.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`SMART_MATERIAL`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A smart material.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`BRUSH`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A brush.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`RESOURCE`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A resource.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`SUBSTANCE_PACKAGE`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A substance package.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ABR_PACKAGE`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A photoshop brushes package.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <h3 {...{\n      \"id\": \"manipulating-resources\"\n    }}>{`Manipulating resources`}</h3>\n    <p>{`The resource module exposes the class `}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Resource\",\n        \"title\": \"substance_painter.resource.Resource\"\n      }}><inlineCode parentName=\"a\">{`Resource`}</inlineCode></a>{`, which represents a\nresource currently available in Substance 3D Painter (either in the current\nproject, current session, or in a shelf).`}</p>\n    <p>{`Listing all the resources of a shelf can be done with `}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Shelf.resources\",\n        \"title\": \"substance_painter.resource.Shelf.resources\"\n      }}><inlineCode parentName=\"a\">{`Shelf.resources()`}</inlineCode></a>{`,\nwhile `}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.search\",\n        \"title\": \"substance_painter.resource.search\"\n      }}><inlineCode parentName=\"a\">{`search()`}</inlineCode></a>{` allows to search for specific resources. Specific resources\ncan be shown with a filter directly in the Assets window with\n`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Resource.show_in_ui\",\n        \"title\": \"substance_painter.resource.Resource.show_in_ui\"\n      }}><inlineCode parentName=\"a\">{`Resource.show_in_ui()`}</inlineCode></a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.show_resources_in_ui\",\n        \"title\": \"substance_painter.resource.show_resources_in_ui\"\n      }}><inlineCode parentName=\"a\">{`show_resources_in_ui()`}</inlineCode></a>{`.`}</p>\n    <blockquote>\n      <pre parentName=\"blockquote\"><code parentName=\"pre\" {...{\n          \"className\": \"language-python\"\n        }}>{`import substance_painter.resource\n\n# Get all the resources of a shelf:\nmy_shelf = substance_painter.resource.Shelf(\"myshelf\")\nall_shelf_resources = my_shelf.resources()\n\nfor resource in all_shelf_resources:\n    print(resource.identifier().name)\n\n# Find all resources that match a name:\naluminium_resources = substance_painter.resource.search(\"aluminium\")\n\nfor resource in aluminium_resources:\n    print(resource.identifier().name)\n\n# Show a single resource in the shelf:\naluminium_resources[0].show_in_ui()\n\n# Show the list of resources found in the shelf:\nsubstance_painter.resource.show_resources_in_ui(aluminium_resources)\n\n`}</code></pre>\n    </blockquote>\n    <p>{`Internally, resources are identified with a URL; `}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.ResourceID\",\n        \"title\": \"substance_painter.resource.ResourceID\"\n      }}><inlineCode parentName=\"a\">{`ResourceID`}</inlineCode></a>{` contains\nthat URL. It can be manipulated directly, with no guaranty that the URL is\nreferring to an actual resource.`}</p>\n    <blockquote>\n      <pre parentName=\"blockquote\"><code parentName=\"pre\" {...{\n          \"className\": \"language-python\"\n        }}>{`import substance_painter.resource\n\n# Display the URL of a resource:\nenvmap_resources = substance_painter.resource.search(\"bonifacio\")\nfor envmap in envmap_resources:\n    envmap_id = envmap.identifier()\n    print(\"The URL of the resource \\`{0}\\` is {1}\"\n        .format(envmap_id.name, envmap_id.url()))\n    print(\"The location of the resource \\`{0}\\` is {1}\"\n        .format(envmap_id.name, envmap_id.location()))\n\n# It is possible to create a ResourceID from a URL. If there is no\n# resource corresponding to the URL, the ResourceID is still valid\n# but refers to a resource that doesn't exist.\nenvmap2_id = substance_painter.resource.ResourceID.from_url(\n    \"resource://starter_assets/Bonifacio Street\");\n\n# It is possible to create a ResourceID from a context, a name and\n# a version (optional). This is equivalent to the above, with the\n# same caveat.\nenvmap3_id = substance_painter.resource.ResourceID(\n    context=\"starter_assets\", name=\"Bonifacio Street\")\nenvmap4_id = substance_painter.resource.ResourceID(\n    context=\"starter_assets\", name=\"Bonifacio Street\",\n    version=\"d30facd8d860fc212f864065641cdca4e8006510.image\");\n\n# It is possible to get the ResourceID of a resource embedded in the\n# current project. This time it refers to an actual resource.\nenvmap5_id = substance_painter.resource.ResourceID.from_project(\n    name=\"Bonifacio Street\");\n\n# Finally, it is possible to get the ResourceID of a resource that\n# was imported in the current session:\nenvmap6_id = substance_painter.resource.ResourceID.from_session(\n    name=\"Bonifacio Street\");\n\n`}</code></pre>\n    </blockquote>\n    <p>{`If the resource exists, it can be retrieved from its identifier with\n`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Resource.retrieve\",\n        \"title\": \"substance_painter.resource.Resource.retrieve\"\n      }}><inlineCode parentName=\"a\">{`Resource.retrieve()`}</inlineCode></a>{`. When there are several versions of the same resource,\n`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Resource.retrieve\",\n        \"title\": \"substance_painter.resource.Resource.retrieve\"\n      }}><inlineCode parentName=\"a\">{`Resource.retrieve()`}</inlineCode></a>{` will return the entire list, starting with the most\nrecent one. On the contrary, if the resource doesn’t exist or was deleted,\n`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Resource.retrieve\",\n        \"title\": \"substance_painter.resource.Resource.retrieve\"\n      }}><inlineCode parentName=\"a\">{`Resource.retrieve()`}</inlineCode></a>{` will return an empty list.`}</p>\n    <blockquote>\n      <pre parentName=\"blockquote\"><code parentName=\"pre\" {...{\n          \"className\": \"language-python\"\n        }}>{`import substance_painter.resource\n\n# Create a ResourceID:\nenvmap_id = substance_painter.resource.ResourceID(context=\"starter_assets\",\n                                                  name=\"Bonifacio Street\")\n\n# Get the resources corresponding to the ResourceID. There can be 0 if there\n# is no such resource, or more than 1 if there are multiple versions of the\n# resource.\nenvmap_resources = substance_painter.resource.Resource.retrieve(envmap_id)\nprint(\"{} resource(s) with that ID\".format(len(envmap_resources)))\n\n`}</code></pre>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"importing-resources\"\n    }}>{`Importing resources`}</h3>\n    <p>{`New resources can be imported, either\nto the current project with `}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.import_project_resource\",\n        \"title\": \"substance_painter.resource.import_project_resource\"\n      }}><inlineCode parentName=\"a\">{`import_project_resource()`}</inlineCode></a>{`,\nto the current session with `}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.import_session_resource\",\n        \"title\": \"substance_painter.resource.import_session_resource\"\n      }}><inlineCode parentName=\"a\">{`import_session_resource()`}</inlineCode></a>{`,\nor to a shelf with `}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Shelf.import_resource\",\n        \"title\": \"substance_painter.resource.Shelf.import_resource\"\n      }}><inlineCode parentName=\"a\">{`Shelf.import_resource()`}</inlineCode></a>{`.\nAll three functions take a path to the resource to be imported, a `}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Usage\",\n        \"title\": \"substance_painter.resource.Usage\"\n      }}><inlineCode parentName=\"a\">{`Usage`}</inlineCode></a>{`\nindicating the type of that resource, and optionally a name and a group.\nThis feature corresponds to the “Import resources” window.`}</p>\n    <p>{`Resources can be imported into a shelf, as long as it is not a read-only shelf.\nThe Substance shelf, installed along the application, is read-only.\nA shelf is also read-only if its path on the file system is read-only.\nThis can be checked with `}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Shelf.can_import_resources\",\n        \"title\": \"substance_painter.resource.Shelf.can_import_resources\"\n      }}><inlineCode parentName=\"a\">{`Shelf.can_import_resources()`}</inlineCode></a>{`.`}</p>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`import substance_painter.resource\n\n# Open a project we want to import into (see substance_painter.project\n# for details). This step is not necessary if there is already a project\n# opened in Substance 3D Painter.\nimport substance_painter.project\nsubstance_painter.project.open(\"C:/projects/MeetMat.spp\")\n\n# Import a normal map to the project:\nnew_resource = substance_painter.resource.import_project_resource(\n    \"C:/textures/MyBakedNormalMap.png\",\n    substance_painter.resource.Usage.TEXTURE)\n\n# Import a color LUT to the session:\nnew_color_lut = substance_painter.resource.import_session_resource(\n    \"C:/textures/sepia.exr\",\n    substance_painter.resource.Usage.COLOR_LUT)\n\n# Set that color LUT (see substance_painter.display for details).\n# This step is unrelated to import, and just meant to show how the\n# imported resource can be used.\nimport substance_painter.display\nsubstance_painter.display.set_color_lut_resource(new_color_lut.identifier())\n\n# Import an environment map to the shelf.\nmy_shelf = substance_painter.resource.Shelf(\"myshelf\")\nif my_shelf.can_import_resources():\n    new_resource = my_shelf.import_resource(\n        \"C:/textures/Bonifacio Street.exr\",\n        substance_painter.resource.Usage.ENVIRONMENT)\nelse:\n    print(\"The shelf is read-only.\")\n\n`}</code></pre>\n    <p>{`See also:`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.adobe.com/go/painter-adding-content-import-window\"\n      }}>{`Adding content via the import window`}</a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"resources-used-by-a-project\"\n    }}>{`Resources used by a project`}</h3>\n    <p>{`It is possible to list the resources used by the layer stacks and mesh maps of\na project with `}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.list_layer_stack_resources\",\n        \"title\": \"substance_painter.resource.list_layer_stack_resources\"\n      }}><inlineCode parentName=\"a\">{`list_layer_stack_resources()`}</inlineCode></a>{`, and to update them with\n`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.update_layer_stack_resource\",\n        \"title\": \"substance_painter.resource.update_layer_stack_resource\"\n      }}><inlineCode parentName=\"a\">{`update_layer_stack_resource()`}</inlineCode></a>{`.`}</p>\n    <p>{`There may be other resources referenced by a project outside of the layer\nstack and mesh maps: see the `}<a parentName=\"p\" {...{\n        \"href\": \"display.html#module-substance_painter.display\",\n        \"title\": \"substance_painter.display\"\n      }}><inlineCode parentName=\"a\">{`substance_painter.display`}</inlineCode></a>{` module to\nquery and modify them.`}</p>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`import substance_painter.resource\n\n# Open a project we want to manipulate resources from (see\n# substance_painter.project for details). This step is not necessary\n# if there is already a project opened in Substance Painter.\nimport substance_painter.project\nsubstance_painter.project.open(\"C:/projects/MeetMat.spp\")\n\n# List all the resources referenced by all the layer stacks and\n# mesh maps:\nused_resources_ids = substance_painter.resource.list_layer_stack_resources()\nfor resource_id in used_resources_ids:\n    print(resource_id.name)\n\n# Import a normal map to the project:\nnew_resource = substance_painter.resource.import_project_resource(\n    \"C:/textures/MyBakedNormalMap.png\",\n    substance_painter.resource.Usage.TEXTURE)\n\n# Replace one of the resources with the new imported resource:\nsubstance_painter.resource.update_layer_stack_resource(used_resources_ids[0], new_resource)\n\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"custom-preview\"\n    }}>{`Custom preview`}</h3>\n    <p>{`When a resource is imported, a thumbnail is automatically generated for it.\nIt is possible to replace that thumbnail with a custom preview by using\n`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Resource.set_custom_preview\",\n        \"title\": \"substance_painter.resource.Resource.set_custom_preview\"\n      }}><inlineCode parentName=\"a\">{`Resource.set_custom_preview()`}</inlineCode></a>{`, or reset the preview with\n`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Resource.reset_preview\",\n        \"title\": \"substance_painter.resource.Resource.reset_preview\"\n      }}><inlineCode parentName=\"a\">{`Resource.reset_preview()`}</inlineCode></a>{`.`}</p>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`import substance_painter.resource\n\naluminium_resources = substance_painter.resource.search(\"aluminium\")\nresource = aluminium_resources[0]\n\n# Set the custom preview:\nresource.set_custom_preview(\"C:/textures/MyCustomPreview.png\")\n\n# Remove the custom preview:\nresource.reset_preview()\n\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"resource-crawling\"\n    }}>{`Resource crawling`}</h3>\n    <p>{`When Substance 3D Painter is opened, it will browse the different shelves\nto discover and index resources, and display their thumbnail. When it regains\nfocus after switching to another application, it will do so again, in case\nthe user added a new asset to their shelf folder. This process is referred\nto as `}<strong parentName=\"p\">{`resource crawling`}</strong>{`.`}</p>\n    <p>{`When a shelf starts crawling, an event\n`}<a parentName=\"p\" {...{\n        \"href\": \"event.html#substance_painter.event.ShelfCrawlingStarted\",\n        \"title\": \"substance_painter.event.ShelfCrawlingStarted\"\n      }}><inlineCode parentName=\"a\">{`substance_painter.event.ShelfCrawlingStarted`}</inlineCode></a>{` is emitted for that\nshelf. When crawling is finished, an event\n`}<a parentName=\"p\" {...{\n        \"href\": \"event.html#substance_painter.event.ShelfCrawlingEnded\",\n        \"title\": \"substance_painter.event.ShelfCrawlingEnded\"\n      }}><inlineCode parentName=\"a\">{`substance_painter.event.ShelfCrawlingEnded`}</inlineCode></a>{` is emitted for that\nshelf. At any time, `}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Shelf.is_crawling\",\n        \"title\": \"substance_painter.resource.Shelf.is_crawling\"\n      }}><inlineCode parentName=\"a\">{`Shelf.is_crawling()`}</inlineCode></a>{` will tell if a shelf is\ncrawling or not.`}</p>\n    <p>{`It is possible from a Python script to explicitly trigger a new resource\ncrawling with `}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Shelves.refresh_all\",\n        \"title\": \"substance_painter.resource.Shelves.refresh_all\"\n      }}><inlineCode parentName=\"a\">{`Shelves.refresh_all()`}</inlineCode></a>{`.`}</p>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`import substance_painter.resource\nimport substance_painter.event\n\n# Two event handlers to show when crawling starts and ends:\ndef on_start_crawl(e):\n    print(\"Shelf \\`{}\\` started crawling.\".format(e.shelf_name))\n\ndef on_end_crawl(e):\n    print(\"Shelf \\`{}\\` finished crawling.\".format(e.shelf_name))\n\n# Use the event handler to listen to ShelfCrawlingStarted and\n# ShelfCrawlingEnded:\nsubstance_painter.event.DISPATCHER.connect(\n    substance_painter.event.ShelfCrawlingStarted,\n    on_start_crawl)\n\nsubstance_painter.event.DISPATCHER.connect(\n    substance_painter.event.ShelfCrawlingEnded,\n    on_end_crawl)\n\n# At this point, the event handlers may or may not print something,\n# depending on what the shelves are doing. It is possible to trigger\n# a crawling by switching to another application, and coming back\n# to Substance 3D Painter.\n\n# It is also possible to trigger a crawling with this call:\nsubstance_painter.resource.Shelves.refresh_all()\n\nmy_shelf = substance_painter.resource.Shelf(\"myshelf\")\n\n# Running this bloc at different moments will give different\n# results:\nif my_shelf.is_crawling():\n    print(\"The shelf is crawling...\")\nelse:\n    print(\"The shelf is idle.\")\n\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <hr></hr>\n    <p><em parentName=\"p\">{`class`}</em>{` substance_painter.resource.Resource(`}<em parentName=\"p\">{`handle: _substance_painter.resource.ResourceHandle`}</em>{`)\nA Substance 3D Painter resource.`}</p>\n    <p>{`identifier() → `}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.ResourceID\",\n        \"title\": \"substance_painter.resource.ResourceID\"\n      }}>{`ResourceID`}</a>{`\nGet this resource identifier.`}</p>\n    <p>{`Returns:\nThe resource identifier.`}</p>\n    <p>{`Return type:\n`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.ResourceID\",\n        \"title\": \"substance_painter.resource.ResourceID\"\n      }}>{`ResourceID`}</a></p>\n    <p>{`Raises:\n`}<strong parentName=\"p\">{`RuntimeError`}</strong>{` – If the resource is invalid.`}</p>\n    <p>{`See also`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.ResourceID\",\n        \"title\": \"substance_painter.resource.ResourceID\"\n      }}><inlineCode parentName=\"a\">{`ResourceID`}</inlineCode></a>{`.`}</p>\n    <p>{`location() → `}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.ResourceLocation\",\n        \"title\": \"substance_painter.resource.ResourceLocation\"\n      }}>{`ResourceLocation`}</a>{`\nGet the location of this Resource.`}</p>\n    <p>{`Returns:\nThe location of this resource.`}</p>\n    <p>{`Return type:\n`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.ResourceLocation\",\n        \"title\": \"substance_painter.resource.ResourceLocation\"\n      }}>{`ResourceLocation`}</a></p>\n    <p>{`Raises:\n`}<strong parentName=\"p\">{`RuntimeError`}</strong>{` – If the resource is invalid.`}</p>\n    <p><em parentName=\"p\">{`static`}</em>{` retrieve(`}<em parentName=\"p\">{`identifier: `}<a parentName=\"em\" {...{\n          \"href\": \"#substance_painter.resource.ResourceID\",\n          \"title\": \"substance_painter.resource.ResourceID\"\n        }}>{`ResourceID`}</a></em>{`)\nRetrieve a list of resources matching the given identifier.`}</p>\n    <p>{`Parameters:\n`}<strong parentName=\"p\">{`identifier`}</strong>{` (`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.ResourceID\",\n        \"title\": \"substance_painter.resource.ResourceID\"\n      }}><em parentName=\"a\">{`ResourceID`}</em></a>{`) – A resource identifier.`}</p>\n    <p>{`Raises:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If the name of the identifier is empty\nor if the context of the identifier doesn’t exists.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"exception.html#substance_painter.exception.ServiceNotFoundError\",\n          \"title\": \"substance_painter.exception.ServiceNotFoundError\"\n        }}><strong parentName=\"a\">{`ServiceNotFoundError`}</strong></a>{` – If Substance 3D Painter has not started all its\nservices yet.`}</li>\n    </ul>\n    <p>{`Returns:\nThe list of resources matching the given identifier.\nIf the identifier has a valid version, this method will return only one or\nzero resources, otherwise the list may contain several resources. In case\nof several resources are returned, the most up to date resource will be at\nthe begining of the list.`}</p>\n    <p>{`Return type:\n`}<em parentName=\"p\">{`List`}</em>{`[`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Resource\",\n        \"title\": \"substance_painter.resource.Resource\"\n      }}>{`Resource`}</a>{`]`}</p>\n    <p>{`set_custom_preview(`}<em parentName=\"p\">{`preview_image: str`}</em>{`) → None\nReplace the current preview of this resource with a custom image.`}</p>\n    <p>{`Parameters:\n`}<strong parentName=\"p\">{`preview_image`}</strong>{` (`}<em parentName=\"p\">{`str`}</em>{`) – File path to an image on the disk to use as the new\npreview.`}</p>\n    <p>{`Raises:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If the resource metadata cannot be modified.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If `}<inlineCode parentName=\"li\">{`preview_image`}</inlineCode>{` is not a valid path to a valid image.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"exception.html#substance_painter.exception.ServiceNotFoundError\",\n          \"title\": \"substance_painter.exception.ServiceNotFoundError\"\n        }}><strong parentName=\"a\">{`ServiceNotFoundError`}</strong></a>{` – If Substance 3D Painter has not started all its\nservices yet.`}</li>\n    </ul>\n    <p>{`Note`}</p>\n    <p>{`The preview image can be a JPEG, a PNG or an XPM.`}</p>\n    <p>{`category() → str\nGet the category of this resource, ex: “wood” for a material.`}</p>\n    <p>{`Raises:\n`}<strong parentName=\"p\">{`RuntimeError`}</strong>{` – If the resource is invalid.`}</p>\n    <p>{`Returns:\nthe category of this resource`}</p>\n    <p>{`Return type:\nstr`}</p>\n    <p>{`usages() → List[`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Usage\",\n        \"title\": \"substance_painter.resource.Usage\"\n      }}>{`Usage`}</a>{`]\nGet the usages of this resource.`}</p>\n    <p>{`Raises:\n`}<strong parentName=\"p\">{`RuntimeError`}</strong>{` – If the resource is invalid.`}</p>\n    <p>{`Returns:\nthe usages of this resource`}</p>\n    <p>{`Return type:\n`}<em parentName=\"p\">{`List`}</em>{`[`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Usage\",\n        \"title\": \"substance_painter.resource.Usage\"\n      }}>{`Usage`}</a>{`]`}</p>\n    <p>{`See also`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Usage\",\n        \"title\": \"substance_painter.resource.Usage\"\n      }}><inlineCode parentName=\"a\">{`Usage`}</inlineCode></a></p>\n    <p>{`gui_name() → str\nGet the GUI name of this resource.`}</p>\n    <p>{`Raises:\n`}<strong parentName=\"p\">{`RuntimeError`}</strong>{` – If the resource is invalid.`}</p>\n    <p>{`Returns:\nthe GUI name of this resource`}</p>\n    <p>{`Return type:\nstr`}</p>\n    <p>{`type() → `}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Type\",\n        \"title\": \"substance_painter.resource.Type\"\n      }}>{`Type`}</a>{`\nGet the type of this resource.`}</p>\n    <p>{`Raises:\n`}<strong parentName=\"p\">{`RuntimeError`}</strong>{` – If the resource is invalid.`}</p>\n    <p>{`Returns:\nthe type of this resource`}</p>\n    <p>{`Return type:\n`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Type\",\n        \"title\": \"substance_painter.resource.Type\"\n      }}>{`Type`}</a></p>\n    <p>{`See also`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Type\",\n        \"title\": \"substance_painter.resource.Type\"\n      }}><inlineCode parentName=\"a\">{`Type`}</inlineCode></a></p>\n    <p>{`tags() → List`}{`[str]`}{`\nGet the tags of this resource.`}</p>\n    <p>{`Raises:\n`}<strong parentName=\"p\">{`RuntimeError`}</strong>{` – If the resource is invalid.`}</p>\n    <p>{`Returns:\nthe tags of this resource`}</p>\n    <p>{`Return type:\n`}<em parentName=\"p\">{`List`}</em>{`[str]`}</p>\n    <p>{`internal_properties() → dict\nGet a dictionnary of the resource internal properties.\nThe current implementation only extracts metadata on Substance resources.`}</p>\n    <p>{`Raises:\n`}<strong parentName=\"p\">{`RuntimeError`}</strong>{` – If the resource is invalid.`}</p>\n    <p>{`Returns:\na dictionnary containing internal properties about this resource`}</p>\n    <p>{`Return type:\ndict`}</p>\n    <p>{`children() → List[`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Resource\",\n        \"title\": \"substance_painter.resource.Resource\"\n      }}>{`Resource`}</a>{`]\nGet child resources.\nFor example substance graphs of a substance package.`}</p>\n    <p>{`Raises:\n`}<strong parentName=\"p\">{`RuntimeError`}</strong>{` – If the resource is invalid.`}</p>\n    <p>{`Returns:\nResources contained in this resource.`}</p>\n    <p>{`Return type:\n`}<em parentName=\"p\">{`List`}</em>{`[`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Resource\",\n        \"title\": \"substance_painter.resource.Resource\"\n      }}>{`Resource`}</a>{`]`}</p>\n    <p>{`parent() → `}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Resource\",\n        \"title\": \"substance_painter.resource.Resource\"\n      }}>{`Resource`}</a>{` | None\nGet parent resource.\nFor example the substance package a substance graph is originating from.`}</p>\n    <p>{`Raises:\n`}<strong parentName=\"p\">{`RuntimeError`}</strong>{` – If the resource is invalid.`}</p>\n    <p>{`Returns:\nThe parent resource that owns this resource.`}</p>\n    <p>{`Return type:\n`}<em parentName=\"p\">{`Optional`}</em>{`[`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Resource\",\n        \"title\": \"substance_painter.resource.Resource\"\n      }}>{`Resource`}</a>{`]`}</p>\n    <p>{`reset_preview() → None\nRemove any custom preview for this resource and resets to the default one.`}</p>\n    <p>{`Raises:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If the resource metadata cannot be modified.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"exception.html#substance_painter.exception.ServiceNotFoundError\",\n          \"title\": \"substance_painter.exception.ServiceNotFoundError\"\n        }}><strong parentName=\"a\">{`ServiceNotFoundError`}</strong></a>{` – If Substance 3D Painter has not started all its\nservices yet.`}</li>\n    </ul>\n    <p>{`show_in_ui() → None\nHighlight this resource in the application shelf UI (Assets window).`}</p>\n    <p>{`Raises:\n`}<a parentName=\"p\" {...{\n        \"href\": \"exception.html#substance_painter.exception.ServiceNotFoundError\",\n        \"title\": \"substance_painter.exception.ServiceNotFoundError\"\n      }}><strong parentName=\"a\">{`ServiceNotFoundError`}</strong></a>{` – If Substance 3D Painter has not started all its\nservices yet.`}</p>\n    <p>{`See also`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.show_resources_in_ui\",\n        \"title\": \"substance_painter.resource.show_resources_in_ui\"\n      }}><inlineCode parentName=\"a\">{`show_resources_in_ui()`}</inlineCode></a>{`.`}</p>\n    <hr></hr>\n    <p><em parentName=\"p\">{`class`}</em>{` substance_painter.resource.ResourceID(`}<em parentName=\"p\">{`context: str`}</em>{`, `}<em parentName=\"p\">{`name: str`}</em>{`, `}<em parentName=\"p\">{`version: str | None = None`}</em>{`)\nA Substance 3D Painter resource identifier.`}</p>\n    <p>{`The resource is identified by a context, a name, and a version. The context\nand the name are mandatory while the version is optional. The version is a\nstring that looks like a hash, and may also contain an extension.`}</p>\n    <p>{`Note`}</p>\n    <p>{`A ResourceID object is only an identifier. It provides no guarantees that\nthe resource actually exists.`}</p>\n    <p>{`See also`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"display.html#module-substance_painter.display\",\n        \"title\": \"substance_painter.display\"\n      }}><inlineCode parentName=\"a\">{`substance_painter.display`}</inlineCode></a>{`.`}</p>\n    <p><em parentName=\"p\">{`classmethod`}</em>{` from_project(`}<em parentName=\"p\">{`name: str`}</em>{`, `}<em parentName=\"p\">{`version: str | None = None`}</em>{`)\nCreate a ResourceID object for a resource located in the current project.`}</p>\n    <p>{`Parameters:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`name`}</strong>{` (`}<em parentName=\"li\">{`str`}</em>{`) – The resource name.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`version`}</strong>{` (`}<em parentName=\"li\">{`str**,`}</em>{` `}<em parentName=\"li\">{`optional`}</em>{`) – The resource version (hash-like string).`}</li>\n    </ul>\n    <p>{`Returns:\nThe resource corresponding to the given name.`}</p>\n    <p>{`Return type:\n`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.ResourceID\",\n        \"title\": \"substance_painter.resource.ResourceID\"\n      }}>{`ResourceID`}</a></p>\n    <p><em parentName=\"p\">{`classmethod`}</em>{` from_session(`}<em parentName=\"p\">{`name: str`}</em>{`, `}<em parentName=\"p\">{`version: str | None = None`}</em>{`)\nCreate a ResourceID object for a resource located in the current session.`}</p>\n    <p>{`Parameters:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`name`}</strong>{` (`}<em parentName=\"li\">{`str`}</em>{`) – The resource name.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`version`}</strong>{` (`}<em parentName=\"li\">{`str**,`}</em>{` `}<em parentName=\"li\">{`optional`}</em>{`) – The resource version (hash-like string).`}</li>\n    </ul>\n    <p>{`Returns:\nThe resource corresponding to the given name.`}</p>\n    <p>{`Return type:\n`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.ResourceID\",\n        \"title\": \"substance_painter.resource.ResourceID\"\n      }}>{`ResourceID`}</a></p>\n    <p><em parentName=\"p\">{`classmethod`}</em>{` from_url(`}<em parentName=\"p\">{`url: str`}</em>{`)\nCreate a ResourceID object from its URL.\nURLs must have `}<inlineCode parentName=\"p\">{`resource://`}</inlineCode>{` as a scheme. The version is encoded as a query\nstring, that looks like a hash.`}</p>\n    <p>{`A resource URL looks like this:`}</p>\n    <p><inlineCode parentName=\"p\">{`resource://context/name?version=0123456789abcdef0123456789abcdef01234567.image`}</inlineCode></p>\n    <p>{`Parameters:\n`}<strong parentName=\"p\">{`url`}</strong>{` (`}<em parentName=\"p\">{`str`}</em>{`) – The resource URL.`}</p>\n    <p>{`Returns:\nThe resource corresponding to the given URL.`}</p>\n    <p>{`Return type:\n`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.ResourceID\",\n        \"title\": \"substance_painter.resource.ResourceID\"\n      }}>{`ResourceID`}</a></p>\n    <p>{`Raises:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If `}<inlineCode parentName=\"li\">{`url`}</inlineCode>{` is not a valid URL.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If the URL scheme is not `}<inlineCode parentName=\"li\">{`resource://`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If the resource name is invalid.`}</li>\n    </ul>\n    <p>{`location() → `}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.ResourceLocation\",\n        \"title\": \"substance_painter.resource.ResourceLocation\"\n      }}>{`ResourceLocation`}</a>{`\nGet the location of this ResourceID.`}</p>\n    <p>{`Returns:\nThe location of this resource.`}</p>\n    <p>{`Return type:\n`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.ResourceLocation\",\n        \"title\": \"substance_painter.resource.ResourceLocation\"\n      }}>{`ResourceLocation`}</a></p>\n    <p>{`url() → str\nGet the URL form of this ResourceID.`}</p>\n    <p>{`Returns:\nThe URL of the resource.`}</p>\n    <p>{`Return type:\nstr`}</p>\n    <p>{`Raises:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If the ResourceID doesn’t have a context.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If the ResourceID doesn’t have a name.`}</li>\n    </ul>\n    <p>{`context`}<em parentName=\"p\">{`: str`}</em>{`\nContext of the resource.`}</p>\n    <p>{`Type:\nstr`}</p>\n    <p>{`name`}<em parentName=\"p\">{`: str`}</em>{`\nName of the resource.`}</p>\n    <p>{`Type:\nstr`}</p>\n    <p>{`version`}<em parentName=\"p\">{`: str`}</em>{` `}<em parentName=\"p\">{`= None`}</em>{`\nHash identifying the version of the resource.`}</p>\n    <p>{`Type:\nstr`}</p>\n    <hr></hr>\n    <p><em parentName=\"p\">{`class`}</em>{` substance_painter.resource.ResourceLocation(`}<em parentName=\"p\">{`value`}</em>{`)\nEach resource has a location determined by where its data lives.`}</p>\n    <p>{`Members:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Data location`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`SESSION`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Current session; those ressources will be lost after a restart of the application.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`PROJECT`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A Substance 3D Painter project; those resources are embedded in the spp file.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`SHELF`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`One of the Substance 3D Painter Shelves.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Example`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`import substance_painter.resource\n\n# For a resource from the default shelf\naluminium = substance_painter.resource.ResourceID(\n    context=\"starter_assets\", name=\"Aluminium Insulator\");\n\n# This will print:\n# ResourceLocation.SHELF\nprint(aluminium.location())\n\n# For an embedded resource, like a baked map\naomap = substance_painter.resource.ResourceID.from_project(\n    name=\"ambient_occlusion\");\n\n# This will print:\n# ResourceLocation.PROJECT\nprint(aomap.location())\n\n# Finally, for a temporary resource\ntest_envmap = substance_painter.resource.ResourceID.from_session(\n    name=\"Test Envmap\");\n\n# This will print:\n# ResourceLocation.SESSION\nprint(test_envmap.location())\n\n`}</code></pre>\n    <hr></hr>\n    <p><em parentName=\"p\">{`class`}</em>{` substance_painter.resource.StandardQuery\nStandard resource queries.`}</p>\n    <p>{`Members:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Query`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ALL_RESOURCES`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`All resources.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`PROJECT_RESOURCES`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Resources that belongs to the current project.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`SESSION_RESOURCES`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Resources that belongs to the current session.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`SHELVES_RESOURCES`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`All shelves resources.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`See also`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.search\",\n        \"title\": \"substance_painter.resource.search\"\n      }}><inlineCode parentName=\"a\">{`search()`}</inlineCode></a>{`.`}</p>\n    <hr></hr>\n    <p><em parentName=\"p\">{`class`}</em>{` substance_painter.resource.Usage(`}<em parentName=\"p\">{`value`}</em>{`)\nEnumeration describing how a given resource is meant to be used.`}</p>\n    <p>{`Members:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Usage`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`BASE_MATERIAL`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A material.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ENVIRONMENT`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`An environment map.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ALPHA`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A brush alpha.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`TEXTURE`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A UV space map like bakes.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`FILTER`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A layer stack filter.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`EMITTER`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A particle emitter script.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`RECEIVER`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A particle receiver script.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`PROCEDURAL`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A procedural substance, like a noise.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`BRUSH`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A brush definition.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`PARTICLE`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A particles effect.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`TOOL`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A painting tool preset.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`SHADER`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A shader.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`EXPORT`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`An export preset.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`GENERATOR`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A mask generator.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`SMART_MATERIAL`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A smart material.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`SMART_MASK`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A smart mask.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`COLOR_LUT`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A color look-up table.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`See also`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.import_project_resource\",\n        \"title\": \"substance_painter.resource.import_project_resource\"\n      }}><inlineCode parentName=\"a\">{`import_project_resource()`}</inlineCode></a>{`,\n`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.import_session_resource\",\n        \"title\": \"substance_painter.resource.import_session_resource\"\n      }}><inlineCode parentName=\"a\">{`import_session_resource()`}</inlineCode></a>{`,\n`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Shelf.import_resource\",\n        \"title\": \"substance_painter.resource.Shelf.import_resource\"\n      }}><inlineCode parentName=\"a\">{`Shelf.import_resource()`}</inlineCode></a>{`.`}</p>\n    <p>{`substance_painter.resource.search(`}<em parentName=\"p\">{`query: str`}</em>{`) → List[`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Resource\",\n        \"title\": \"substance_painter.resource.Resource\"\n      }}>{`Resource`}</a>{`]\nList Substance 3D Painter resources that match the given query.`}</p>\n    <p>{`Parameters:\n`}<strong parentName=\"p\">{`query`}</strong>{` (`}<em parentName=\"p\">{`str`}</em>{`) – A resource query string. See `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.adobe.com/go/painter-filtering-shelf-content\"\n      }}>{`text query documentation`}</a>{`.`}</p>\n    <p>{`Returns:\nThe list of resources that match the given query.`}</p>\n    <p>{`Return type:\nList[`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Resource\",\n        \"title\": \"substance_painter.resource.Resource\"\n      }}>{`Resource`}</a>{`]`}</p>\n    <p>{`Raises:\n`}<a parentName=\"p\" {...{\n        \"href\": \"exception.html#substance_painter.exception.ServiceNotFoundError\",\n        \"title\": \"substance_painter.exception.ServiceNotFoundError\"\n      }}><strong parentName=\"a\">{`ServiceNotFoundError`}</strong></a>{` – If Substance 3D Painter has not started all its\nservices yet.`}</p>\n    <p>{`See also`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.StandardQuery\",\n        \"title\": \"substance_painter.resource.StandardQuery\"\n      }}><inlineCode parentName=\"a\">{`StandardQuery`}</inlineCode></a>{`.`}</p>\n    <p>{`substance_painter.resource.list_layer_stack_resources() → List[`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.ResourceID\",\n        \"title\": \"substance_painter.resource.ResourceID\"\n      }}>{`ResourceID`}</a>{`]\nList the resources referenced by the layer stacks and mesh maps of the current\nproject.`}</p>\n    <p>{`Returns:\nThe list of resource identifiers referenced.`}</p>\n    <p>{`Return type:\nList[`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.ResourceID\",\n        \"title\": \"substance_painter.resource.ResourceID\"\n      }}>{`ResourceID`}</a>{`]`}</p>\n    <p>{`Raises:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"exception.html#substance_painter.exception.ProjectError\",\n          \"title\": \"substance_painter.exception.ProjectError\"\n        }}><strong parentName=\"a\">{`ProjectError`}</strong></a>{` – If no project is opened.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"exception.html#substance_painter.exception.ServiceNotFoundError\",\n          \"title\": \"substance_painter.exception.ServiceNotFoundError\"\n        }}><strong parentName=\"a\">{`ServiceNotFoundError`}</strong></a>{` – If Substance 3D Painter has not started all its\nservices yet.`}</li>\n    </ul>\n    <p>{`See also`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.update_layer_stack_resource\",\n        \"title\": \"substance_painter.resource.update_layer_stack_resource\"\n      }}><inlineCode parentName=\"a\">{`update_layer_stack_resource()`}</inlineCode></a>{`,\n`}<a parentName=\"p\" {...{\n        \"href\": \"display.html#module-substance_painter.display\",\n        \"title\": \"substance_painter.display\"\n      }}><inlineCode parentName=\"a\">{`substance_painter.display`}</inlineCode></a>{`.`}</p>\n    <p>{`substance_painter.resource.update_layer_stack_resource(`}<em parentName=\"p\">{`old_resource_id: `}<a parentName=\"em\" {...{\n          \"href\": \"#substance_painter.resource.ResourceID\",\n          \"title\": \"substance_painter.resource.ResourceID\"\n        }}>{`ResourceID`}</a></em>{`, `}<em parentName=\"p\">{`new_resource: `}<a parentName=\"em\" {...{\n          \"href\": \"#substance_painter.resource.Resource\",\n          \"title\": \"substance_painter.resource.Resource\"\n        }}>{`Resource`}</a></em>{`) → List[`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.ResourceID\",\n        \"title\": \"substance_painter.resource.ResourceID\"\n      }}>{`ResourceID`}</a>{`]\nReplace resources from the layer stacks and mesh maps in the current project.`}</p>\n    <p>{`Given a resource identifier, replace any resource having the same identifier\nwith the new resource. The new resource must be compatible with the ones it\nreplaces (see note); otherwise, an error is thrown.`}</p>\n    <p>{`Note`}</p>\n    <p>{`The new resource must be of the same type as the resources it replaces.\nFor example a base material resource cannot be updated with a smart\nmaterial resource.`}</p>\n    <p>{`Moreover:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`If the resource is a Substance material, it must have the same number\nand names of outputs.`}</li>\n      <li parentName=\"ul\">{`If the resource is a Substance filter, it must have the same number\nand names of inputs and outputs.`}</li>\n    </ul>\n    <p>{`Returns:\nThe list of identifiers of all the resources that have\nbeen replaced.`}</p>\n    <p>{`Return type:\nList[`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.ResourceID\",\n        \"title\": \"substance_painter.resource.ResourceID\"\n      }}>{`ResourceID`}</a>{`]`}</p>\n    <p>{`Parameters:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`old_resource_id`}</strong>{` (`}<a parentName=\"li\" {...{\n          \"href\": \"#substance_painter.resource.ResourceID\",\n          \"title\": \"substance_painter.resource.ResourceID\"\n        }}><em parentName=\"a\">{`ResourceID`}</em></a>{`) – The identifier of the resource(s) to update.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`new_resource`}</strong>{` (`}<a parentName=\"li\" {...{\n          \"href\": \"#substance_painter.resource.Resource\",\n          \"title\": \"substance_painter.resource.Resource\"\n        }}><em parentName=\"a\">{`Resource`}</em></a>{`) – The new resource to use instead.`}</li>\n    </ul>\n    <p>{`Raises:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"exception.html#substance_painter.exception.ProjectError\",\n          \"title\": \"substance_painter.exception.ProjectError\"\n        }}><strong parentName=\"a\">{`ProjectError`}</strong></a>{` – If no project is opened.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`TypeError`}</strong>{` – If `}<inlineCode parentName=\"li\">{`old_resource_id`}</inlineCode>{` is not a ResourceID.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`TypeError`}</strong>{` – If `}<inlineCode parentName=\"li\">{`new_resource`}</inlineCode>{` is not a Resource.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`RuntimeError`}</strong>{` – If `}<inlineCode parentName=\"li\">{`new_resource`}</inlineCode>{` is not a valid resource.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`RuntimeError`}</strong>{` – If `}<inlineCode parentName=\"li\">{`new_resource`}</inlineCode>{` cannot be used in place of\n`}<inlineCode parentName=\"li\">{`old_resource_id`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"exception.html#substance_painter.exception.ServiceNotFoundError\",\n          \"title\": \"substance_painter.exception.ServiceNotFoundError\"\n        }}><strong parentName=\"a\">{`ServiceNotFoundError`}</strong></a>{` – If Substance 3D Painter has not started all its\nservices yet.`}</li>\n    </ul>\n    <p>{`See also`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.list_layer_stack_resources\",\n        \"title\": \"substance_painter.resource.list_layer_stack_resources\"\n      }}><inlineCode parentName=\"a\">{`list_layer_stack_resources()`}</inlineCode></a>{`,\n`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Usage\",\n        \"title\": \"substance_painter.resource.Usage\"\n      }}><inlineCode parentName=\"a\">{`Usage`}</inlineCode></a>{`,\n`}<a parentName=\"p\" {...{\n        \"href\": \"display.html#module-substance_painter.display\",\n        \"title\": \"substance_painter.display\"\n      }}><inlineCode parentName=\"a\">{`substance_painter.display`}</inlineCode></a>{`.`}</p>\n    <p>{`substance_painter.resource.import_project_resource(`}<em parentName=\"p\">{`file_path: str`}</em>{`, `}<em parentName=\"p\">{`resource_usage: `}<a parentName=\"em\" {...{\n          \"href\": \"#substance_painter.resource.Usage\",\n          \"title\": \"substance_painter.resource.Usage\"\n        }}>{`Usage`}</a></em>{`, `}<em parentName=\"p\">{`name: str | None = None`}</em>{`, `}<em parentName=\"p\">{`group: str | None = None`}</em>{`) → `}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Resource\",\n        \"title\": \"substance_painter.resource.Resource\"\n      }}>{`Resource`}</a>{`\nImport a resource into the current opened project.`}</p>\n    <p>{`Parameters:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`file_path`}</strong>{` (`}<em parentName=\"li\">{`str`}</em>{`) – The file path to the resource to be imported.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`resource_usage`}</strong>{` (`}<a parentName=\"li\" {...{\n          \"href\": \"#substance_painter.resource.Usage\",\n          \"title\": \"substance_painter.resource.Usage\"\n        }}><em parentName=\"a\">{`Usage`}</em></a>{`) – The resource usage.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`name`}</strong>{` (`}<em parentName=\"li\">{`str**,`}</em>{` `}<em parentName=\"li\">{`optional`}</em>{`) – The name of the resource if different from the\nfile name.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`group`}</strong>{` (`}<em parentName=\"li\">{`str**,`}</em>{` `}<em parentName=\"li\">{`opional`}</em>{`) – An optional group name, can be used in resource\nqueries.`}</li>\n    </ul>\n    <p>{`Returns:\nThe imported resource object.`}</p>\n    <p>{`Return type:\n`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Resource\",\n        \"title\": \"substance_painter.resource.Resource\"\n      }}>{`Resource`}</a></p>\n    <p>{`Raises:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"exception.html#substance_painter.exception.ProjectError\",\n          \"title\": \"substance_painter.exception.ProjectError\"\n        }}><strong parentName=\"a\">{`ProjectError`}</strong></a>{` – If no project is opened.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If parameters validation failed.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`RuntimeError`}</strong>{` – If import failed.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"exception.html#substance_painter.exception.ServiceNotFoundError\",\n          \"title\": \"substance_painter.exception.ServiceNotFoundError\"\n        }}><strong parentName=\"a\">{`ServiceNotFoundError`}</strong></a>{` – If Substance 3D Painter has not started all its\nservices yet.`}</li>\n    </ul>\n    <p>{`substance_painter.resource.import_session_resource(`}<em parentName=\"p\">{`file_path: str`}</em>{`, `}<em parentName=\"p\">{`resource_usage: `}<a parentName=\"em\" {...{\n          \"href\": \"#substance_painter.resource.Usage\",\n          \"title\": \"substance_painter.resource.Usage\"\n        }}>{`Usage`}</a></em>{`, `}<em parentName=\"p\">{`name: str | None = None`}</em>{`, `}<em parentName=\"p\">{`group: str | None = None`}</em>{`) → `}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Resource\",\n        \"title\": \"substance_painter.resource.Resource\"\n      }}>{`Resource`}</a>{`\nImport a resource into the current session.`}</p>\n    <p>{`Parameters:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`file_path`}</strong>{` (`}<em parentName=\"li\">{`str`}</em>{`) – The file path to the resource to be imported.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`resource_usage`}</strong>{` (`}<a parentName=\"li\" {...{\n          \"href\": \"#substance_painter.resource.Usage\",\n          \"title\": \"substance_painter.resource.Usage\"\n        }}><em parentName=\"a\">{`Usage`}</em></a>{`) – The resource usage.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`name`}</strong>{` (`}<em parentName=\"li\">{`str**,`}</em>{` `}<em parentName=\"li\">{`optional`}</em>{`) – The name of the resource if different from the\nfile name.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`group`}</strong>{` (`}<em parentName=\"li\">{`str**,`}</em>{` `}<em parentName=\"li\">{`opional`}</em>{`) – An optional group name, can be used in resource\nqueries.`}</li>\n    </ul>\n    <p>{`Returns:\nThe imported resource object.`}</p>\n    <p>{`Return type:\n`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Resource\",\n        \"title\": \"substance_painter.resource.Resource\"\n      }}>{`Resource`}</a></p>\n    <p>{`Raises:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If parameters validation failed.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`RuntimeError`}</strong>{` – If import failed.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"exception.html#substance_painter.exception.ServiceNotFoundError\",\n          \"title\": \"substance_painter.exception.ServiceNotFoundError\"\n        }}><strong parentName=\"a\">{`ServiceNotFoundError`}</strong></a>{` – If Substance 3D Painter has not started all its\nservices yet.`}</li>\n    </ul>\n    <p>{`substance_painter.resource.show_resources_in_ui(`}<em parentName=\"p\">{`resources: List[`}<a parentName=\"em\" {...{\n          \"href\": \"#substance_painter.resource.Resource\",\n          \"title\": \"substance_painter.resource.Resource\"\n        }}>{`Resource`}</a>{`]`}</em>{`) → None\nHighlight a list of resources in the application shelf UI (Assets window).`}</p>\n    <p>{`Parameters:\n`}<strong parentName=\"p\">{`resources`}</strong>{` (`}<em parentName=\"p\">{`List**[`}</em><a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Resource\",\n        \"title\": \"substance_painter.resource.Resource\"\n      }}><em parentName=\"a\">{`Resource`}</em></a><em parentName=\"p\">{`]`}</em>{`) – Resources to highlight`}</p>\n    <p>{`Raises:\n`}<a parentName=\"p\" {...{\n        \"href\": \"exception.html#substance_painter.exception.ServiceNotFoundError\",\n        \"title\": \"substance_painter.exception.ServiceNotFoundError\"\n      }}><strong parentName=\"a\">{`ServiceNotFoundError`}</strong></a>{` – If Substance 3D Painter has not started all its\nservices yet.`}</p>\n    <p>{`See also`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Resource.show_in_ui\",\n        \"title\": \"substance_painter.resource.Resource.show_in_ui\"\n      }}><inlineCode parentName=\"a\">{`Resource.show_in_ui()`}</inlineCode></a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"shelves\"\n    }}>{`Shelves`}</h2>\n    <p>{`See also:`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.adobe.com/go/painter-shelf-configuration\"\n      }}>{`Shelf configuration`}</a>{`.`}</p>\n    <hr></hr>\n    <p><em parentName=\"p\">{`class`}</em>{` substance_painter.resource.Shelf(`}<em parentName=\"p\">{`_name: str`}</em>{`)\nClass providing information on a given Substance 3D Painter shelf. A shelf\nis identified by a unique name.`}</p>\n    <p>{`can_import_resources() → bool\nCheck if resources can be imported into this shelf.\nResources can be imported into a shelf, as long as it is not a read-only shelf.\nThe Substance shelf, installed along the application, is read-only. A shelf is\nalso read-only if its path on the file system is read-only.`}</p>\n    <p>{`Returns:\n`}<inlineCode parentName=\"p\">{`True`}</inlineCode>{` if resources can be imported.`}</p>\n    <p>{`Return type:\nbool`}</p>\n    <p>{`Raises:\n`}<a parentName=\"p\" {...{\n        \"href\": \"exception.html#substance_painter.exception.ServiceNotFoundError\",\n        \"title\": \"substance_painter.exception.ServiceNotFoundError\"\n      }}><strong parentName=\"a\">{`ServiceNotFoundError`}</strong></a>{` – If Substance 3D Painter has not started all its\nservices yet.`}</p>\n    <p>{`See also`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"event.html#substance_painter.event.ShelfCrawlingEnded\",\n        \"title\": \"substance_painter.event.ShelfCrawlingEnded\"\n      }}><inlineCode parentName=\"a\">{`substance_painter.event.ShelfCrawlingEnded`}</inlineCode></a>{`.`}</p>\n    <p>{`import_resource(`}<em parentName=\"p\">{`file_path: str`}</em>{`, `}<em parentName=\"p\">{`resource_usage: `}<a parentName=\"em\" {...{\n          \"href\": \"#substance_painter.resource.Usage\",\n          \"title\": \"substance_painter.resource.Usage\"\n        }}>{`Usage`}</a></em>{`, `}<em parentName=\"p\">{`name: str | None = None`}</em>{`, `}<em parentName=\"p\">{`group: str | None = None`}</em>{`, `}<em parentName=\"p\">{`uuid: str | None = None`}</em>{`) → `}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Resource\",\n        \"title\": \"substance_painter.resource.Resource\"\n      }}>{`Resource`}</a>{`\nImport a resource into this shelf.`}</p>\n    <p>{`Parameters:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`file_path`}</strong>{` (`}<em parentName=\"li\">{`str`}</em>{`) – The file path to the resource to be imported.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`resource_usage`}</strong>{` (`}<a parentName=\"li\" {...{\n          \"href\": \"#substance_painter.resource.Usage\",\n          \"title\": \"substance_painter.resource.Usage\"\n        }}><em parentName=\"a\">{`Usage`}</em></a>{`) – The resource usage.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`name`}</strong>{` (`}<em parentName=\"li\">{`str**,`}</em>{` `}<em parentName=\"li\">{`optional`}</em>{`) – The name of the resource if different from the\nfile name.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`group`}</strong>{` (`}<em parentName=\"li\">{`str**,`}</em>{` `}<em parentName=\"li\">{`opional`}</em>{`) – An optional group name, can be used in resource\nqueries.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`uuid`}</strong>{` (`}<em parentName=\"li\">{`str**,`}</em>{` `}<em parentName=\"li\">{`opional`}</em>{`) – An optional uuid. If a resource already exists with\nthe same uuid, it will be replaced.`}</li>\n    </ul>\n    <p>{`Returns:\nThe imported resource object.`}</p>\n    <p>{`Return type:\n`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Resource\",\n        \"title\": \"substance_painter.resource.Resource\"\n      }}>{`Resource`}</a></p>\n    <p>{`Raises:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If parameters validation failed.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`RuntimeError`}</strong>{` – If import failed.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"exception.html#substance_painter.exception.ServiceNotFoundError\",\n          \"title\": \"substance_painter.exception.ServiceNotFoundError\"\n        }}><strong parentName=\"a\">{`ServiceNotFoundError`}</strong></a>{` – If Substance 3D Painter has not started all its\nservices yet.`}</li>\n    </ul>\n    <p>{`is_crawling() → bool\nCheck if this shelf is currently discovering resources in folders.`}</p>\n    <p>{`Returns:\n`}<inlineCode parentName=\"p\">{`True`}</inlineCode>{` if this shelf is discovering resources, `}<inlineCode parentName=\"p\">{`False`}</inlineCode>{` otherwise.`}</p>\n    <p>{`Return type:\nbool`}</p>\n    <p>{`Raises:\n`}<a parentName=\"p\" {...{\n        \"href\": \"exception.html#substance_painter.exception.ServiceNotFoundError\",\n        \"title\": \"substance_painter.exception.ServiceNotFoundError\"\n      }}><strong parentName=\"a\">{`ServiceNotFoundError`}</strong></a>{` – If Substance 3D Painter has not started all its\nservices yet.`}</p>\n    <p>{`See also`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"event.html#substance_painter.event.ShelfCrawlingEnded\",\n        \"title\": \"substance_painter.event.ShelfCrawlingEnded\"\n      }}><inlineCode parentName=\"a\">{`substance_painter.event.ShelfCrawlingEnded`}</inlineCode></a>{`.`}</p>\n    <p>{`name() → str`}</p>\n    <p>{`Returns:\nThe shelf name.\nEach shelf is identified by a unique name.`}</p>\n    <p>{`path() → str`}</p>\n    <p>{`Returns:\nThe associated path`}</p>\n    <p>{`Raises:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If the shelf doesn’t exist anymore.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"exception.html#substance_painter.exception.ServiceNotFoundError\",\n          \"title\": \"substance_painter.exception.ServiceNotFoundError\"\n        }}><strong parentName=\"a\">{`ServiceNotFoundError`}</strong></a>{` – If Substance 3D Painter has not started all its\nservices yet.`}</li>\n    </ul>\n    <p>{`resources(`}<em parentName=\"p\">{`query: str = ''`}</em>{`) → List[`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Resource\",\n        \"title\": \"substance_painter.resource.Resource\"\n      }}>{`Resource`}</a>{`]\nGet resources contained in this shelf. An optional query string can be given\nto narrow the results.`}</p>\n    <p>{`Parameters:\n`}<strong parentName=\"p\">{`query`}</strong>{` (`}<em parentName=\"p\">{`str**,`}</em>{` `}<em parentName=\"p\">{`optional`}</em>{`) – A resource query string.`}</p>\n    <p>{`Returns:\nThis shelf’s list of resources.`}</p>\n    <p>{`See also`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.search\",\n        \"title\": \"substance_painter.resource.search\"\n      }}><inlineCode parentName=\"a\">{`search()`}</inlineCode></a>{`.`}</p>\n    <hr></hr>\n    <p><em parentName=\"p\">{`class`}</em>{` substance_painter.resource.Shelves\nCollection of static methods to manipulate shelves.`}</p>\n    <p><em parentName=\"p\">{`static`}</em>{` add(`}<em parentName=\"p\">{`name: str`}</em>{`, `}<em parentName=\"p\">{`path: str`}</em>{`) → `}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Shelf\",\n        \"title\": \"substance_painter.resource.Shelf\"\n      }}>{`Shelf`}</a>{`\nAdd a new shelf. This shelf will only be valid during the application session.\nThe shelf will not be visible from application general settings menu.`}</p>\n    <p>{`Parameters:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`name`}</strong>{` (`}<em parentName=\"li\">{`str`}</em>{`) – Name of the new shelf. This name must be unique and must only\ncontain lowercase letters, numbers, underscores or hyphens.\nUse `}<a parentName=\"li\" {...{\n          \"href\": \"#substance_painter.resource.Shelves.exists\",\n          \"title\": \"substance_painter.resource.Shelves.exists\"\n        }}><inlineCode parentName=\"a\">{`Shelves.exists()`}</inlineCode></a>{` to check if name is already used.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`path`}</strong>{` (`}<em parentName=\"li\">{`str`}</em>{`) – Folder path to monitor.`}</li>\n    </ul>\n    <p>{`Returns:\nNewly added shelf.`}</p>\n    <p>{`Return type:\n`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Shelf\",\n        \"title\": \"substance_painter.resource.Shelf\"\n      }}>{`Shelf`}</a></p>\n    <p>{`Raises:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If `}<inlineCode parentName=\"li\">{`name`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`str`}</inlineCode>{` are invalid. See logs for details.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"exception.html#substance_painter.exception.ServiceNotFoundError\",\n          \"title\": \"substance_painter.exception.ServiceNotFoundError\"\n        }}><strong parentName=\"a\">{`ServiceNotFoundError`}</strong></a>{` – If Substance 3D Painter has not started all its\nservices yet.`}</li>\n    </ul>\n    <p>{`See also`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Shelves.exists\",\n        \"title\": \"substance_painter.resource.Shelves.exists\"\n      }}><inlineCode parentName=\"a\">{`Shelves.exists()`}</inlineCode></a>{`.`}</p>\n    <p><em parentName=\"p\">{`static`}</em>{` all() → List[`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Shelf\",\n        \"title\": \"substance_painter.resource.Shelf\"\n      }}>{`Shelf`}</a>{`]\nList all shelves.`}</p>\n    <p>{`Returns:\nList of existing shelves.`}</p>\n    <p>{`Return type:\n`}<em parentName=\"p\">{`List`}</em>{`[`}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Shelf\",\n        \"title\": \"substance_painter.resource.Shelf\"\n      }}>{`Shelf`}</a>{`]`}</p>\n    <p>{`Raises:\n`}<a parentName=\"p\" {...{\n        \"href\": \"exception.html#substance_painter.exception.ServiceNotFoundError\",\n        \"title\": \"substance_painter.exception.ServiceNotFoundError\"\n      }}><strong parentName=\"a\">{`ServiceNotFoundError`}</strong></a>{` – If Substance 3D Painter has not started all its\nservices yet.`}</p>\n    <p><em parentName=\"p\">{`static`}</em>{` application_shelf() → `}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Shelf\",\n        \"title\": \"substance_painter.resource.Shelf\"\n      }}>{`Shelf`}</a>{`\nThis is the shelf containing the default content shipped with the application.`}</p>\n    <p><em parentName=\"p\">{`static`}</em>{` exists(`}<em parentName=\"p\">{`name: str`}</em>{`) → bool\nTell whether a shelf with the given name exists.`}</p>\n    <p>{`Parameters:\n`}<strong parentName=\"p\">{`name`}</strong>{` (`}<em parentName=\"p\">{`str`}</em>{`) – Shelf name to searh for.`}</p>\n    <p>{`Returns:\n`}<inlineCode parentName=\"p\">{`True`}</inlineCode>{` if a shelf with the given name exists.`}</p>\n    <p>{`Return type:\nbool`}</p>\n    <p>{`Raises:\n`}<a parentName=\"p\" {...{\n        \"href\": \"exception.html#substance_painter.exception.ServiceNotFoundError\",\n        \"title\": \"substance_painter.exception.ServiceNotFoundError\"\n      }}><strong parentName=\"a\">{`ServiceNotFoundError`}</strong></a>{` – If Substance 3D Painter has not started all its\nservices yet.`}</p>\n    <p><em parentName=\"p\">{`static`}</em>{` refresh_all()\nForces discovering of resources in all shelves folders.\nDiscovering is also done automatically when the application window gets focus.`}</p>\n    <p>{`Raises:\n`}<a parentName=\"p\" {...{\n        \"href\": \"exception.html#substance_painter.exception.ServiceNotFoundError\",\n        \"title\": \"substance_painter.exception.ServiceNotFoundError\"\n      }}><strong parentName=\"a\">{`ServiceNotFoundError`}</strong></a>{` – If Substance 3D Painter has not started all its\nservices yet.`}</p>\n    <p><em parentName=\"p\">{`static`}</em>{` remove(`}<em parentName=\"p\">{`name: str`}</em>{`)\nRemoves a shelf.\nNo project must be opened.\nDeleting a shelf which was not created by the Python API is not possible and\nwill raise an exception.`}</p>\n    <p>{`Parameters:\n`}<strong parentName=\"p\">{`name`}</strong>{` (`}<em parentName=\"p\">{`str`}</em>{`) – Name of the shelf to delete.\nUse `}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Shelves.exists\",\n        \"title\": \"substance_painter.resource.Shelves.exists\"\n      }}><inlineCode parentName=\"a\">{`Shelves.exists()`}</inlineCode></a>{` to check if a shelf exists.`}</p>\n    <p>{`Raises:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"exception.html#substance_painter.exception.ProjectError\",\n          \"title\": \"substance_painter.exception.ProjectError\"\n        }}><strong parentName=\"a\">{`ProjectError`}</strong></a>{` – If a project is opened.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If the shelf doesn’t exist.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`ValueError`}</strong>{` – If the shelf was not created with the Python API.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"exception.html#substance_painter.exception.ServiceNotFoundError\",\n          \"title\": \"substance_painter.exception.ServiceNotFoundError\"\n        }}><strong parentName=\"a\">{`ServiceNotFoundError`}</strong></a>{` – If Substance 3D Painter has not started all its\nservices yet.`}</li>\n    </ul>\n    <p>{`See also`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Shelves.exists\",\n        \"title\": \"substance_painter.resource.Shelves.exists\"\n      }}><inlineCode parentName=\"a\">{`Shelves.exists()`}</inlineCode></a>{`.`}</p>\n    <p><em parentName=\"p\">{`static`}</em>{` user_shelf() → `}<a parentName=\"p\" {...{\n        \"href\": \"#substance_painter.resource.Shelf\",\n        \"title\": \"substance_painter.resource.Shelf\"\n      }}>{`Shelf`}</a>{`\nThis is the shelf located in the user Documents folder where new resources\nare created by default. The user can select a different default shelf in the\nsettings, and this will be reflected when using this function.`}</p>\n    <p>{`Raises:\n`}<a parentName=\"p\" {...{\n        \"href\": \"exception.html#substance_painter.exception.ServiceNotFoundError\",\n        \"title\": \"substance_painter.exception.ServiceNotFoundError\"\n      }}><strong parentName=\"a\">{`ServiceNotFoundError`}</strong></a>{` – If Substance 3D Painter has not started all its\nservices yet.`}</p>\n    <p>{`See also`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://docs.substance3d.com/spdoc/shelf-configuration-124059665.html\"\n      }}>{`Default shelf documentation`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"events\"\n    }}>{`Events`}</h2>\n    <p>{`Project related operations, whether they are initiated through the Python API\nor in the UI, can trigger the following events.\nSee `}<a parentName=\"p\" {...{\n        \"href\": \"event.html#module-substance_painter.event\",\n        \"title\": \"substance_painter.event\"\n      }}><inlineCode parentName=\"a\">{`substance_painter.event`}</inlineCode></a>{` for more details.`}</p>\n    <hr></hr>\n    <p><em parentName=\"p\">{`class`}</em>{` substance_painter.event.ShelfCrawlingStarted(`}<em parentName=\"p\">{`shelf_name: str`}</em>{`)\nEvent triggered when a shelf starts reading the file system to discover\nnew resources.`}</p>\n    <p>{`See also`}</p>\n    <p><inlineCode parentName=\"p\">{`Shelf.is_crawling()`}</inlineCode>{`.`}</p>\n    <p>{`shelf_name`}<em parentName=\"p\">{`: str`}</em>{`\nName of the shelf discovering resources.`}</p>\n    <p>{`Type:\nstr`}</p>\n    <hr></hr>\n    <p><em parentName=\"p\">{`class`}</em>{` substance_painter.event.ShelfCrawlingEnded(`}<em parentName=\"p\">{`shelf_name: str`}</em>{`)\nEvent triggered when a shelf has finished discovering new resources and\nloading their thumbnails.`}</p>\n    <p>{`See also`}</p>\n    <p><inlineCode parentName=\"p\">{`Shelf.is_crawling()`}</inlineCode>{`.`}</p>\n    <p>{`shelf_name`}<em parentName=\"p\">{`: str`}</em>{`\nName of the shelf that has finished discovering resources.`}</p>\n    <p>{`Type:\nstr`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}