"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[3878],{87162:function(e,n,a){a.r(n),a.d(n,{_frontmatter:function(){return u},default:function(){return m}});var t=a(87462),l=a(63366),i=(a(15007),a(64983)),p=a(91515),s=["components"],u={},r={_frontmatter:u},d=p.Z;function m(e){var n=e.components,a=(0,l.Z)(e,s);return(0,i.mdx)(d,(0,t.Z)({},r,a,{components:n,mdxType:"MDXLayout"}),(0,i.mdx)("p",null,"substance_painter_plugins module — Substance 3D Painter Python API 0.2.11 documentation"),(0,i.mdx)("h1",{id:"substance_painter_plugins-module"},"substance_painter_plugins module"),(0,i.mdx)("p",null,"This module allows to manage the Substance 3D Painter Plugins: listing existing\nPlugins, loading or unloading a given Plugin, etc."),(0,i.mdx)("p",null,"A Substance 3D Painter Plugin is a standard Python module, placed in a path added\nto ",(0,i.mdx)("a",{parentName:"p",href:"#substance_painter_plugins.path",title:"substance_painter_plugins.path"},(0,i.mdx)("inlineCode",{parentName:"a"},"substance_painter_plugins.path")),", which can use the Substance 3D Painter\nPython API to do certain tasks."),(0,i.mdx)("p",null,"Example"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-python"},'import importlib\nimport substance_painter_plugins\n\n# Get the list of available Plugin names:\nall_plugins_names = substance_painter_plugins.plugin_module_names()\nfor name in all_plugins_names:\n    print(name)\n\n# Load the "hello world" Plugin:\nplugin = importlib.import_module("hello_plugin")\n\n# Start the Plugin if it wasn\'t already:\nif not substance_painter_plugins.is_plugin_started(plugin):\n    substance_painter_plugins.start_plugin(plugin)\n\n')),(0,i.mdx)("p",null,"substance_painter_plugins.path ",(0,i.mdx)("em",{parentName:"p"},"= []"),"\nA list of strings that specifies the search path for plugins.\nInitialized from ",(0,i.mdx)("inlineCode",{parentName:"p"},"SUBSTANCE_PAINTER_PLUGINS_PATH")," environment variable, Substance 3D Painter\ninstallation directory and Substance 3D Painter user resources directory."),(0,i.mdx)("p",null,"You need to call explicitly ",(0,i.mdx)("a",{parentName:"p",href:"#substance_painter_plugins.update_sys_path",title:"substance_painter_plugins.update_sys_path"},(0,i.mdx)("inlineCode",{parentName:"a"},"substance_painter_plugins.update_sys_path"))," after updating this\nvariable."),(0,i.mdx)("p",null,"A plugins directory is expected to contain three subdirectories, automatically added to\n",(0,i.mdx)("inlineCode",{parentName:"p"},"sys.path"),":"),(0,i.mdx)("blockquote",null,(0,i.mdx)("ul",{parentName:"blockquote"},(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("strong",{parentName:"li"},"plugins")," : Modules that are loaded as optional components."),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("strong",{parentName:"li"},"startup")," : Modules that are always loaded at application startup."),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("strong",{parentName:"li"},"modules")," : Utility modules, shared across plugins."))),(0,i.mdx)("p",null,"Modules in ",(0,i.mdx)("inlineCode",{parentName:"p"},"plugins/")," and ",(0,i.mdx)("inlineCode",{parentName:"p"},"startup/")," directories are expected to have a ",(0,i.mdx)("inlineCode",{parentName:"p"},"start_plugin()")," and\na ",(0,i.mdx)("inlineCode",{parentName:"p"},"close_plugin()")," methods, respectively called after loading the module and before unloading it.\nModules added in ",(0,i.mdx)("inlineCode",{parentName:"p"},"plugins/")," directory take precedence over modules added in ",(0,i.mdx)("inlineCode",{parentName:"p"},"startup/"),"\ndirectory."),(0,i.mdx)("p",null,"Type:\nlist"),(0,i.mdx)("p",null,"substance_painter_plugins.plugins ",(0,i.mdx)("em",{parentName:"p"},"= {}"),"\nCurrently started plugins."),(0,i.mdx)("p",null,"Type:\ndict"),(0,i.mdx)("p",null,"substance_painter_plugins.start_plugin(",(0,i.mdx)("em",{parentName:"p"},"module"),")\nStart the given Substance 3D Painter plugin."),(0,i.mdx)("p",null,"Parameters:\n",(0,i.mdx)("strong",{parentName:"p"},"module")," – A Python module that is expected to have a ",(0,i.mdx)("inlineCode",{parentName:"p"},"start_plugin")," method."),(0,i.mdx)("p",null,"substance_painter_plugins.close_plugin(",(0,i.mdx)("em",{parentName:"p"},"module"),", ",(0,i.mdx)("em",{parentName:"p"},"gc_collect=True"),")\nClose the given Substance 3D Painter plugin."),(0,i.mdx)("p",null,"Parameters:"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("strong",{parentName:"li"},"module")," – A Python module that is expected to have a ",(0,i.mdx)("inlineCode",{parentName:"li"},"close_plugin")," method."),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("strong",{parentName:"li"},"gc_collect")," – Run a full garbage collection if set to True.")),(0,i.mdx)("p",null,"substance_painter_plugins.is_plugin_started(",(0,i.mdx)("em",{parentName:"p"},"module"),")\nCheck if the given plugin is currently started."),(0,i.mdx)("p",null,"Parameters:\n",(0,i.mdx)("strong",{parentName:"p"},"module")," – A Python module."),(0,i.mdx)("p",null,"Returns:\n",(0,i.mdx)("inlineCode",{parentName:"p"},"True")," if the given module is currently started, ",(0,i.mdx)("inlineCode",{parentName:"p"},"False")," otherwise."),(0,i.mdx)("p",null,"substance_painter_plugins.reload_plugin(",(0,i.mdx)("em",{parentName:"p"},"module"),")\nReload a plugin and start it."),(0,i.mdx)("p",null,"Read ",(0,i.mdx)("a",{parentName:"p",href:"https://docs.python.org/3/library/importlib.html#importlib.reload"},"importlib.reload(module) documentation")," for possible caveats. See ",(0,i.mdx)("a",{parentName:"p",href:"#substance_painter_plugins.start_plugin",title:"substance_painter_plugins.start_plugin"},(0,i.mdx)("inlineCode",{parentName:"a"},"start_plugin()")),"\nand ",(0,i.mdx)("a",{parentName:"p",href:"#substance_painter_plugins.close_plugin",title:"substance_painter_plugins.close_plugin"},(0,i.mdx)("inlineCode",{parentName:"a"},"close_plugin()"))," for details about starting and closing a plugin. If the plugin has\na ",(0,i.mdx)("inlineCode",{parentName:"p"},"reload_plugin")," method, it will be executed after closing and before restarting the plugin.\nThe purpose of ",(0,i.mdx)("inlineCode",{parentName:"p"},"reload_plugin")," method is to reload manually all sub-modules the plugin\ndepends on (in case the plugin is a Python package for example)."),(0,i.mdx)("p",null,"Parameters:\n",(0,i.mdx)("strong",{parentName:"p"},"module")," – A Python module."),(0,i.mdx)("p",null,"Returns:\nThe reloaded plugin module."),(0,i.mdx)("p",null,"See also"),(0,i.mdx)("p",null,(0,i.mdx)("a",{parentName:"p",href:"#substance_painter_plugins.start_plugin",title:"substance_painter_plugins.start_plugin"},(0,i.mdx)("inlineCode",{parentName:"a"},"start_plugin()")),", ",(0,i.mdx)("a",{parentName:"p",href:"#substance_painter_plugins.close_plugin",title:"substance_painter_plugins.close_plugin"},(0,i.mdx)("inlineCode",{parentName:"a"},"close_plugin()")),", ",(0,i.mdx)("a",{parentName:"p",href:"https://docs.python.org/3/library/importlib.html#importlib.reload"},"importlib.reload(module) documentation"),"."),(0,i.mdx)("p",null,"substance_painter_plugins.startup_module_names()\nList the names of the available ",(0,i.mdx)("em",{parentName:"p"},"startup")," modules."),(0,i.mdx)("p",null,"Returns:\nThe names of all the available ",(0,i.mdx)("em",{parentName:"p"},"startup")," modules."),(0,i.mdx)("p",null,"Return type:\nlist","[str]"),(0,i.mdx)("p",null,"substance_painter_plugins.plugin_module_names()\nList the names of the available ",(0,i.mdx)("em",{parentName:"p"},"plugins")," modules."),(0,i.mdx)("p",null,"Returns:\nThe names of all the available ",(0,i.mdx)("em",{parentName:"p"},"plugins")," modules."),(0,i.mdx)("p",null,"Return type:\nlist","[str]"),(0,i.mdx)("p",null,"substance_painter_plugins.load_startup_modules()\nLoad all startup modules."),(0,i.mdx)("p",null,"substance_painter_plugins.close_all_plugins()\nClose all started plugins."),(0,i.mdx)("p",null,"substance_painter_plugins.update_sys_path()\nUpdate ",(0,i.mdx)("inlineCode",{parentName:"p"},"sys.path")," according to ",(0,i.mdx)("a",{parentName:"p",href:"#substance_painter_plugins.path",title:"substance_painter_plugins.path"},(0,i.mdx)("inlineCode",{parentName:"a"},"substance_painter_plugins.path"))," and\n",(0,i.mdx)("inlineCode",{parentName:"p"},"SUBSTANCE_PAINTER_PLUGINS_PATH")," environment variable."))}m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-api-plugins-substance-painter-plugins-md-e1edb4bfab708d6c268c.js.map