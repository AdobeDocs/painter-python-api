"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[7244],{88813:function(e,t,a){a.r(t),a.d(t,{_frontmatter:function(){return m},default:function(){return x}});var r=a(87462),n=a(63366),s=(a(15007),a(64983)),u=a(91515),p=["components"],m={},i={_frontmatter:m},l=u.Z;function x(e){var t=e.components,a=(0,n.Z)(e,p);return(0,s.mdx)(l,(0,r.Z)({},i,a,{components:t,mdxType:"MDXLayout"}),(0,s.mdx)("p",null,"baking module — Substance 3D Painter Python API 0.2.11 documentation"),(0,s.mdx)("h1",{id:"baking-module"},"baking module"),(0,s.mdx)("p",null,"The ",(0,s.mdx)("inlineCode",{parentName:"p"},"baking")," module allows to set baking parameters and launch baking\nof mesh maps."),(0,s.mdx)("p",null,"Example"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-python"},"import substance_painter.baking as baking\nimport substance_painter.textureset as textureset\nfrom substance_painter.baking import BakingParameters, MeshMapUsage, CurvatureMethod\n\n# set baking parameters\nbaking_params = BakingParameters.from_texture_set_name(\"Name for ts\")\ntexture_set = baking_params.texture_set()\ncommon_params = baking_params.common()\nao_params = baking_params.baker(MeshMapUsage.AO)\nBakingParameters.set({\n    common_params['OutputSize'] : (10,10),\n    ao_params['Distribution'] : ao_params['Distribution'].enum_value('Cosine')})\n\n# check if common parameters are shared between Texture Sets (True at project creation)\ncommon_params_are_shared = bool(baking.get_link_group_common_parameters())\n\n# unlink common parameters. The common parameters for all Texture Sets become independent\nbaking.unlink_all_common_parameters()\n\n# recheck whether common parameters are shared between Texture Sets (now False)\ncommon_params_are_linked = bool(baking.get_link_group_common_parameters())\n\nts1 = textureset.TextureSet.from_name(\"Name for ts1\")\nts2 = textureset.TextureSet.from_name(\"Name for ts2\")\n\n# get the list of Texture Sets which are linked for AO with ts1\n# it's not yet linked, so returns only [ts1]\nlinked_with_ts1 = baking.get_linked_texture_sets(ts1, MeshMapUsage.AO)\n\n# link AO baking parameters for ts1 and ts2 together into a group,\n# keeping ts1 parameters for both\nbaking.set_linked_group([ts1,ts2], ts1, MeshMapUsage.AO)\n\n# get the new list of Texture Sets which are linked with ts1\n# now they are linked, so it returns [ts1, ts2]\nlinked_with_ts1 = baking.get_linked_texture_sets(ts1, MeshMapUsage.AO)\n\n# finally unlink AO baking parameters\nbaking.unlink_all(MeshMapUsage.AO)\n\n# get curvature method\ncurvature_method = baking_params.get_curvature_method()\n\n# set curvature method\nbaking_params.set_curvature_method(CurvatureMethod.FromMesh)\n\n# check whether the baking is enabled on the Texture Set level and enable it\nbaking_params.is_textureset_enabled()\nbaking_params.set_textureset_enabled(True)\n\n# check if AO usage is enabled for baking and enable it\nbaking_params.is_baker_enabled(MeshMapUsage.AO)\nbaking_params.set_baker_enabled(MeshMapUsage.AO, True)\n\n# get all usages enabled for baking\nbaking_params.get_enabled_bakers()\n\n# set usages enabled for baking\nbaking_params.set_enabled_bakers([MeshMapUsage.AO, MeshMapUsage.Normal])\n\n# check if one UV Tile is enabled for baking, disable it\nbaking_params.is_uv_tile_enabled(texture_set.uv_tile(0,0))\nbaking_params.set_uv_tile_enabled(texture_set.uv_tile(0,0), False)\n\n# get all UV Tiles enabled for baking\nbaking_params.get_enabled_uv_tiles()\n# set UV Tiles enabled for baking\nbaking_params.set_enabled_uv_tiles([texture_set.uv_tile(0,0), texture_set.uv_tile(0,1)])\n\n")),(0,s.mdx)("p",null,"See also"),(0,s.mdx)("p",null,(0,s.mdx)("a",{parentName:"p",href:"textureset/textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},(0,s.mdx)("inlineCode",{parentName:"a"},"substance_painter.textureset.TextureSet")),",\n",(0,s.mdx)("a",{parentName:"p",href:"textureset/index.html#substance_painter.textureset.MeshMapUsage",title:"substance_painter.textureset.MeshMapUsage"},(0,s.mdx)("inlineCode",{parentName:"a"},"substance_painter.textureset.MeshMapUsage")),"\n",(0,s.mdx)("a",{parentName:"p",href:"textureset/uvtile.html#substance_painter.textureset.UVTile",title:"substance_painter.textureset.UVTile"},(0,s.mdx)("inlineCode",{parentName:"a"},"substance_painter.textureset.UVTile"))),(0,s.mdx)("hr",null),(0,s.mdx)("p",null,(0,s.mdx)("em",{parentName:"p"},"class")," substance_painter.baking.BakingStatus(",(0,s.mdx)("em",{parentName:"p"},"value"),")\nStatus code of the baking process."),(0,s.mdx)("p",null,"Members:"),(0,s.mdx)("table",null,(0,s.mdx)("thead",{parentName:"table"},(0,s.mdx)("tr",{parentName:"thead"},(0,s.mdx)("th",{parentName:"tr",align:null},"Name"),(0,s.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,s.mdx)("tbody",{parentName:"table"},(0,s.mdx)("tr",{parentName:"tbody"},(0,s.mdx)("td",{parentName:"tr",align:null},(0,s.mdx)("inlineCode",{parentName:"td"},"Success")),(0,s.mdx)("td",{parentName:"tr",align:null},"The baking was successful.")),(0,s.mdx)("tr",{parentName:"tbody"},(0,s.mdx)("td",{parentName:"tr",align:null},(0,s.mdx)("inlineCode",{parentName:"td"},"Cancel")),(0,s.mdx)("td",{parentName:"tr",align:null},"The baking was cancelled by the user.")),(0,s.mdx)("tr",{parentName:"tbody"},(0,s.mdx)("td",{parentName:"tr",align:null},(0,s.mdx)("inlineCode",{parentName:"td"},"Fail")),(0,s.mdx)("td",{parentName:"tr",align:null},"The baking could not complete; the cause is detailed in the log.")))),(0,s.mdx)("hr",null),(0,s.mdx)("p",null,(0,s.mdx)("em",{parentName:"p"},"class")," substance_painter.baking.CurvatureMethod(",(0,s.mdx)("em",{parentName:"p"},"value"),")\nMembers:"),(0,s.mdx)("p",null,(0,s.mdx)("inlineCode",{parentName:"p"},"FromMesh"),", ",(0,s.mdx)("inlineCode",{parentName:"p"},"FromNormalMap")),(0,s.mdx)("hr",null),(0,s.mdx)("p",null,(0,s.mdx)("em",{parentName:"p"},"class")," substance_painter.baking.BakingParameters(",(0,s.mdx)("em",{parentName:"p"},"material_id: int"),")\nBaking parameters for a given texture set."),(0,s.mdx)("p",null,"See also"),(0,s.mdx)("p",null,(0,s.mdx)("a",{parentName:"p",href:"textureset/textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},(0,s.mdx)("inlineCode",{parentName:"a"},"substance_painter.textureset.TextureSet")),",\n",(0,s.mdx)("a",{parentName:"p",href:"textureset/index.html#substance_painter.textureset.MeshMapUsage",title:"substance_painter.textureset.MeshMapUsage"},(0,s.mdx)("inlineCode",{parentName:"a"},"substance_painter.textureset.MeshMapUsage"))),(0,s.mdx)("p",null,(0,s.mdx)("em",{parentName:"p"},"static")," from_texture_set(",(0,s.mdx)("em",{parentName:"p"},"texture_set: ",(0,s.mdx)("a",{parentName:"em",href:"textureset/textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},"TextureSet")),") → ",(0,s.mdx)("a",{parentName:"p",href:"#substance_painter.baking.BakingParameters",title:"substance_painter.baking.BakingParameters"},"BakingParameters"),"\nGet the baking parameters for the given texture set object."),(0,s.mdx)("p",null,"Parameters:\n",(0,s.mdx)("strong",{parentName:"p"},"texture_set")," (",(0,s.mdx)("a",{parentName:"p",href:"textureset/textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},(0,s.mdx)("em",{parentName:"a"},"TextureSet")),") – The texture set."),(0,s.mdx)("p",null,"Returns:\nThe baking parameters for the given texure set."),(0,s.mdx)("p",null,"Return type:\n",(0,s.mdx)("a",{parentName:"p",href:"#substance_painter.baking.BakingParameters",title:"substance_painter.baking.BakingParameters"},"BakingParameters")),(0,s.mdx)("p",null,"See also"),(0,s.mdx)("p",null,(0,s.mdx)("a",{parentName:"p",href:"textureset/textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},(0,s.mdx)("inlineCode",{parentName:"a"},"substance_painter.textureset.TextureSet"))),(0,s.mdx)("p",null,(0,s.mdx)("em",{parentName:"p"},"static")," from_texture_set_name(",(0,s.mdx)("em",{parentName:"p"},"texture_set_name: str"),") → ",(0,s.mdx)("a",{parentName:"p",href:"#substance_painter.baking.BakingParameters",title:"substance_painter.baking.BakingParameters"},"BakingParameters"),"\nGet the baking parameters for the given texture set name."),(0,s.mdx)("p",null,"Parameters:\n",(0,s.mdx)("strong",{parentName:"p"},"texture_set_name")," (",(0,s.mdx)("em",{parentName:"p"},"str"),") – The texture set name."),(0,s.mdx)("p",null,"Returns:\nThe baking parameters for the given texure set."),(0,s.mdx)("p",null,"Return type:\n",(0,s.mdx)("a",{parentName:"p",href:"#substance_painter.baking.BakingParameters",title:"substance_painter.baking.BakingParameters"},"BakingParameters")),(0,s.mdx)("p",null,"See also"),(0,s.mdx)("p",null,(0,s.mdx)("a",{parentName:"p",href:"properties.html#substance_painter.properties.Property",title:"substance_painter.properties.Property"},(0,s.mdx)("inlineCode",{parentName:"a"},"substance_painter.properties.Property"))),(0,s.mdx)("p",null,"texture_set() → ",(0,s.mdx)("a",{parentName:"p",href:"textureset/textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},"TextureSet"),"\nGet the associated texture set."),(0,s.mdx)("p",null,"Returns:\nThe texture set associated with this BakingParameters instance."),(0,s.mdx)("p",null,"Return type:\n",(0,s.mdx)("a",{parentName:"p",href:"textureset/textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},"TextureSet")),(0,s.mdx)("p",null,"See also"),(0,s.mdx)("p",null,(0,s.mdx)("a",{parentName:"p",href:"textureset/textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},(0,s.mdx)("inlineCode",{parentName:"a"},"substance_painter.textureset.TextureSet"))),(0,s.mdx)("p",null,"common() → Dict[str, ",(0,s.mdx)("a",{parentName:"p",href:"properties.html#substance_painter.properties.Property",title:"substance_painter.properties.Property"},"Property"),"]\nGet the parameters common to all bakers, like baking resolution."),(0,s.mdx)("p",null,"Returns:\nThe common parameters."),(0,s.mdx)("p",null,"Return type:\nDict[str, ",(0,s.mdx)("a",{parentName:"p",href:"properties.html#substance_painter.properties.Property",title:"substance_painter.properties.Property"},"Property"),"]"),(0,s.mdx)("p",null,"See also"),(0,s.mdx)("p",null,(0,s.mdx)("a",{parentName:"p",href:"properties.html#substance_painter.properties.Property",title:"substance_painter.properties.Property"},(0,s.mdx)("inlineCode",{parentName:"a"},"substance_painter.properties.Property"))),(0,s.mdx)("p",null,"baker(",(0,s.mdx)("em",{parentName:"p"},"baked_map: ",(0,s.mdx)("a",{parentName:"em",href:"textureset/index.html#substance_painter.textureset.MeshMapUsage",title:"substance_painter.textureset.MeshMapUsage"},"MeshMapUsage")),") → Dict[str, ",(0,s.mdx)("a",{parentName:"p",href:"properties.html#substance_painter.properties.Property",title:"substance_painter.properties.Property"},"Property"),"]\nGet the parameters specific to a given baked map."),(0,s.mdx)("p",null,"Parameters:\n",(0,s.mdx)("strong",{parentName:"p"},"baked_map")," (",(0,s.mdx)("a",{parentName:"p",href:"textureset/index.html#substance_painter.textureset.MeshMapUsage",title:"substance_painter.textureset.MeshMapUsage"},(0,s.mdx)("em",{parentName:"a"},"MeshMapUsage")),") – The baked map usage."),(0,s.mdx)("p",null,"Returns:\nThe corresponding baked map parameters."),(0,s.mdx)("p",null,"Return type:\nDict[str, ",(0,s.mdx)("a",{parentName:"p",href:"properties.html#substance_painter.properties.Property",title:"substance_painter.properties.Property"},"Property"),"]"),(0,s.mdx)("p",null,"See also"),(0,s.mdx)("p",null,(0,s.mdx)("a",{parentName:"p",href:"textureset/index.html#substance_painter.textureset.MeshMapUsage",title:"substance_painter.textureset.MeshMapUsage"},(0,s.mdx)("inlineCode",{parentName:"a"},"substance_painter.textureset.MeshMapUsage")),",\n",(0,s.mdx)("a",{parentName:"p",href:"properties.html#substance_painter.properties.Property",title:"substance_painter.properties.Property"},(0,s.mdx)("inlineCode",{parentName:"a"},"substance_painter.properties.Property"))),(0,s.mdx)("p",null,(0,s.mdx)("em",{parentName:"p"},"static")," set(",(0,s.mdx)("em",{parentName:"p"},"property_values: Dict[",(0,s.mdx)("a",{parentName:"em",href:"properties.html#substance_painter.properties.Property",title:"substance_painter.properties.Property"},"Property"),", bool | int | Tuple","[int, int]"," | Tuple","[int, int, int]"," | Tuple","[int, int, int, int]"," | float | Tuple","[float, float]"," | Tuple","[float, float, float]"," | Tuple","[float, float, float, float]"," | str]"),") → None\nSet property values in batch."),(0,s.mdx)("p",null,"Parameters:"),(0,s.mdx)("ul",null,(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("strong",{parentName:"li"},"property_values")," (",(0,s.mdx)("em",{parentName:"li"},"Dict**["),(0,s.mdx)("a",{parentName:"li",href:"properties.html#substance_painter.properties.Property",title:"substance_painter.properties.Property"},(0,s.mdx)("em",{parentName:"a"},"Property")),(0,s.mdx)("em",{parentName:"li"},",")," ",(0,s.mdx)("em",{parentName:"li"},"PropertyValue**]"),") – A dict of properties"),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("strong",{parentName:"li"},"values.")," (",(0,s.mdx)("em",{parentName:"li"},"to be set with their corresponding new"),") –")),(0,s.mdx)("p",null,"See also"),(0,s.mdx)("p",null,(0,s.mdx)("a",{parentName:"p",href:"properties.html#substance_painter.properties.Property",title:"substance_painter.properties.Property"},(0,s.mdx)("inlineCode",{parentName:"a"},"substance_painter.properties.Property"))),(0,s.mdx)("p",null,"get_curvature_method() → ",(0,s.mdx)("a",{parentName:"p",href:"#substance_painter.baking.CurvatureMethod",title:"substance_painter.baking.CurvatureMethod"},"CurvatureMethod"),"\nGet the curvature method used for baking"),(0,s.mdx)("p",null,"Returns:\nThe curvature method used for baking"),(0,s.mdx)("p",null,"Return type:\n",(0,s.mdx)("a",{parentName:"p",href:"#substance_painter.baking.CurvatureMethod",title:"substance_painter.baking.CurvatureMethod"},"CurvatureMethod")),(0,s.mdx)("p",null,"See also"),(0,s.mdx)("p",null,"set_curvature_method"),(0,s.mdx)("p",null,"set_curvature_method(",(0,s.mdx)("em",{parentName:"p"},"method: ",(0,s.mdx)("a",{parentName:"em",href:"#substance_painter.baking.CurvatureMethod",title:"substance_painter.baking.CurvatureMethod"},"CurvatureMethod")),")\nSet the curvature method to use for baking"),(0,s.mdx)("p",null,"Parameters:\n",(0,s.mdx)("strong",{parentName:"p"},"method")," (",(0,s.mdx)("a",{parentName:"p",href:"#substance_painter.baking.CurvatureMethod",title:"substance_painter.baking.CurvatureMethod"},(0,s.mdx)("em",{parentName:"a"},"CurvatureMethod")),") – The new method to use for baking"),(0,s.mdx)("p",null,"See also"),(0,s.mdx)("p",null,"get_curvature_method"),(0,s.mdx)("p",null,"is_baker_enabled(",(0,s.mdx)("em",{parentName:"p"},"usage: ",(0,s.mdx)("a",{parentName:"em",href:"textureset/index.html#substance_painter.textureset.MeshMapUsage",title:"substance_painter.textureset.MeshMapUsage"},"MeshMapUsage")),") → bool\nWhether some usage is enabled for baking."),(0,s.mdx)("p",null,"Parameters:\n",(0,s.mdx)("strong",{parentName:"p"},"usage")," (",(0,s.mdx)("a",{parentName:"p",href:"textureset/index.html#substance_painter.textureset.MeshMapUsage",title:"substance_painter.textureset.MeshMapUsage"},(0,s.mdx)("em",{parentName:"a"},"MeshMapUsage")),") – The baked map usage."),(0,s.mdx)("p",null,"Returns:\nTrue if the corresponding usage is enabled for baking."),(0,s.mdx)("p",null,"Return type:\nbool"),(0,s.mdx)("p",null,"set_baker_enabled(",(0,s.mdx)("em",{parentName:"p"},"usage: ",(0,s.mdx)("a",{parentName:"em",href:"textureset/index.html#substance_painter.textureset.MeshMapUsage",title:"substance_painter.textureset.MeshMapUsage"},"MeshMapUsage")),", ",(0,s.mdx)("em",{parentName:"p"},"enable: bool"),") → None\nEnable or disable a usage for baking."),(0,s.mdx)("p",null,"Parameters:"),(0,s.mdx)("ul",null,(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("strong",{parentName:"li"},"usage")," (",(0,s.mdx)("a",{parentName:"li",href:"textureset/index.html#substance_painter.textureset.MeshMapUsage",title:"substance_painter.textureset.MeshMapUsage"},(0,s.mdx)("em",{parentName:"a"},"MeshMapUsage")),") – The baked map usage."),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("strong",{parentName:"li"},"enable")," (",(0,s.mdx)("em",{parentName:"li"},"bool"),") – Enable or disable.")),(0,s.mdx)("p",null,"get_enabled_bakers() → List[",(0,s.mdx)("a",{parentName:"p",href:"textureset/index.html#substance_painter.textureset.MeshMapUsage",title:"substance_painter.textureset.MeshMapUsage"},"MeshMapUsage"),"]\nGet all usages enabled for baking."),(0,s.mdx)("p",null,"Returns:\nEnabled usages."),(0,s.mdx)("p",null,"Return type:\nList[",(0,s.mdx)("a",{parentName:"p",href:"textureset/index.html#substance_painter.textureset.MeshMapUsage",title:"substance_painter.textureset.MeshMapUsage"},"MeshMapUsage"),"]"),(0,s.mdx)("p",null,"set_enabled_bakers(",(0,s.mdx)("em",{parentName:"p"},"enabled_usages: List[",(0,s.mdx)("a",{parentName:"em",href:"textureset/index.html#substance_painter.textureset.MeshMapUsage",title:"substance_painter.textureset.MeshMapUsage"},"MeshMapUsage"),"]"),") → None\nSet usages enabled for baking. Usages not in this list will be disabled."),(0,s.mdx)("p",null,"Parameters:\n",(0,s.mdx)("strong",{parentName:"p"},"enabled_usages")," (",(0,s.mdx)("em",{parentName:"p"},"List**["),(0,s.mdx)("a",{parentName:"p",href:"textureset/index.html#substance_painter.textureset.MeshMapUsage",title:"substance_painter.textureset.MeshMapUsage"},(0,s.mdx)("em",{parentName:"a"},"MeshMapUsage")),(0,s.mdx)("em",{parentName:"p"},"]"),") – Enabled usages."),(0,s.mdx)("p",null,"is_textureset_enabled() → bool\nWhether this Texture Set is enabled for baking."),(0,s.mdx)("p",null,"Returns:\nTrue if this Texture Set is enabled for baking."),(0,s.mdx)("p",null,"Return type:\nbool"),(0,s.mdx)("p",null,"set_textureset_enabled(",(0,s.mdx)("em",{parentName:"p"},"enable: bool"),") → None\nEnable or disable this Texture Set for baking."),(0,s.mdx)("p",null,"Parameters:\n",(0,s.mdx)("strong",{parentName:"p"},"enable")," (",(0,s.mdx)("em",{parentName:"p"},"bool"),") – Enable or disable."),(0,s.mdx)("p",null,"is_uv_tile_enabled(",(0,s.mdx)("em",{parentName:"p"},"uv_tile: ",(0,s.mdx)("a",{parentName:"em",href:"textureset/uvtile.html#substance_painter.textureset.UVTile",title:"substance_painter.textureset.UVTile"},"UVTile")),") → bool\nWhether a UV Tile is enabled for baking."),(0,s.mdx)("p",null,"Parameters:\n",(0,s.mdx)("strong",{parentName:"p"},"tile")," (",(0,s.mdx)("a",{parentName:"p",href:"textureset/uvtile.html#substance_painter.textureset.UVTile",title:"substance_painter.textureset.UVTile"},(0,s.mdx)("em",{parentName:"a"},"UVTile")),") – The UV Tile."),(0,s.mdx)("p",null,"Returns:\nTrue if the UV Tile is enabled for baking."),(0,s.mdx)("p",null,"Return type:\nbool"),(0,s.mdx)("p",null,"See also"),(0,s.mdx)("p",null,(0,s.mdx)("a",{parentName:"p",href:"textureset/textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},(0,s.mdx)("inlineCode",{parentName:"a"},"substance_painter.textureset.TextureSet")),",\n",(0,s.mdx)("a",{parentName:"p",href:"textureset/uvtile.html#substance_painter.textureset.UVTile",title:"substance_painter.textureset.UVTile"},(0,s.mdx)("inlineCode",{parentName:"a"},"substance_painter.textureset.UVTile"))),(0,s.mdx)("p",null,"set_uv_tile_enabled(",(0,s.mdx)("em",{parentName:"p"},"uv_tile: ",(0,s.mdx)("a",{parentName:"em",href:"textureset/uvtile.html#substance_painter.textureset.UVTile",title:"substance_painter.textureset.UVTile"},"UVTile")),", ",(0,s.mdx)("em",{parentName:"p"},"enable: bool"),") → None\nEnable or disable an UV Tile for baking."),(0,s.mdx)("p",null,"Parameters:"),(0,s.mdx)("ul",null,(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("strong",{parentName:"li"},"uv_tile")," (",(0,s.mdx)("a",{parentName:"li",href:"textureset/uvtile.html#substance_painter.textureset.UVTile",title:"substance_painter.textureset.UVTile"},(0,s.mdx)("em",{parentName:"a"},"UVTile")),") – The UV Tile."),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("strong",{parentName:"li"},"enable")," (",(0,s.mdx)("em",{parentName:"li"},"bool"),") – Enable or disable.")),(0,s.mdx)("p",null,"See also"),(0,s.mdx)("p",null,(0,s.mdx)("a",{parentName:"p",href:"textureset/textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},(0,s.mdx)("inlineCode",{parentName:"a"},"substance_painter.textureset.TextureSet")),",\n",(0,s.mdx)("a",{parentName:"p",href:"textureset/uvtile.html#substance_painter.textureset.UVTile",title:"substance_painter.textureset.UVTile"},(0,s.mdx)("inlineCode",{parentName:"a"},"substance_painter.textureset.UVTile"))),(0,s.mdx)("p",null,"get_enabled_uv_tiles() → List[",(0,s.mdx)("a",{parentName:"p",href:"textureset/uvtile.html#substance_painter.textureset.UVTile",title:"substance_painter.textureset.UVTile"},"UVTile"),"]\nGet all UV Tiles enabled for baking."),(0,s.mdx)("p",null,"Returns:\nEnabled UV Tiles."),(0,s.mdx)("p",null,"Return type:\nList[",(0,s.mdx)("a",{parentName:"p",href:"textureset/uvtile.html#substance_painter.textureset.UVTile",title:"substance_painter.textureset.UVTile"},"UVTile"),"]"),(0,s.mdx)("p",null,"See also"),(0,s.mdx)("p",null,(0,s.mdx)("a",{parentName:"p",href:"textureset/textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},(0,s.mdx)("inlineCode",{parentName:"a"},"substance_painter.textureset.TextureSet")),",\n",(0,s.mdx)("a",{parentName:"p",href:"textureset/uvtile.html#substance_painter.textureset.UVTile",title:"substance_painter.textureset.UVTile"},(0,s.mdx)("inlineCode",{parentName:"a"},"substance_painter.textureset.UVTile"))),(0,s.mdx)("p",null,"set_enabled_uv_tiles(",(0,s.mdx)("em",{parentName:"p"},"enabled_uv_tiles: List[",(0,s.mdx)("a",{parentName:"em",href:"textureset/uvtile.html#substance_painter.textureset.UVTile",title:"substance_painter.textureset.UVTile"},"UVTile"),"]"),") → None\nSet UV Tiles enabled for baking. All other tiles will be disabled."),(0,s.mdx)("p",null,"Parameters:\n",(0,s.mdx)("strong",{parentName:"p"},"enabled_uv_tiles")," (",(0,s.mdx)("em",{parentName:"p"},"List**["),(0,s.mdx)("a",{parentName:"p",href:"textureset/uvtile.html#substance_painter.textureset.UVTile",title:"substance_painter.textureset.UVTile"},(0,s.mdx)("em",{parentName:"a"},"UVTile")),(0,s.mdx)("em",{parentName:"p"},"]"),") – Enabled UV Tiles."),(0,s.mdx)("p",null,"See also"),(0,s.mdx)("p",null,(0,s.mdx)("a",{parentName:"p",href:"textureset/textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},(0,s.mdx)("inlineCode",{parentName:"a"},"substance_painter.textureset.TextureSet")),",\n",(0,s.mdx)("a",{parentName:"p",href:"textureset/uvtile.html#substance_painter.textureset.UVTile",title:"substance_painter.textureset.UVTile"},(0,s.mdx)("inlineCode",{parentName:"a"},"substance_painter.textureset.UVTile"))),(0,s.mdx)("p",null,"substance_painter.baking.set_linked_group(",(0,s.mdx)("em",{parentName:"p"},"group: List[",(0,s.mdx)("a",{parentName:"em",href:"textureset/textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},"TextureSet"),"]"),", ",(0,s.mdx)("em",{parentName:"p"},"reference: ",(0,s.mdx)("a",{parentName:"em",href:"textureset/textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},"TextureSet")),", ",(0,s.mdx)("em",{parentName:"p"},"usage: ",(0,s.mdx)("a",{parentName:"em",href:"textureset/index.html#substance_painter.textureset.MeshMapUsage",title:"substance_painter.textureset.MeshMapUsage"},"MeshMapUsage")),") → None\nMake a group of Texture Sets share the same baking parameters for the given ‘usage’. After that,\nediting the ‘usage’ parameters of one of the group’s Texture Set will impact the whole group."),(0,s.mdx)("p",null,"Parameters:"),(0,s.mdx)("ul",null,(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("strong",{parentName:"li"},"group")," (",(0,s.mdx)("em",{parentName:"li"},"List**["),(0,s.mdx)("a",{parentName:"li",href:"textureset/textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},(0,s.mdx)("em",{parentName:"a"},"TextureSet")),(0,s.mdx)("em",{parentName:"li"},"]"),") – Texture Sets to be included in the new group."),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("strong",{parentName:"li"},"reference")," (",(0,s.mdx)("a",{parentName:"li",href:"textureset/textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},(0,s.mdx)("em",{parentName:"a"},"TextureSet")),") – Texture Set which parameters are applied to the whole group."),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("strong",{parentName:"li"},"usage")," (",(0,s.mdx)("a",{parentName:"li",href:"textureset/index.html#substance_painter.textureset.MeshMapUsage",title:"substance_painter.textureset.MeshMapUsage"},(0,s.mdx)("em",{parentName:"a"},"MeshMapUsage")),") – Usage of the group.")),(0,s.mdx)("p",null,"substance_painter.baking.set_linked_group_common_parameters(",(0,s.mdx)("em",{parentName:"p"},"group: List[",(0,s.mdx)("a",{parentName:"em",href:"textureset/textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},"TextureSet"),"]"),", ",(0,s.mdx)("em",{parentName:"p"},"reference: ",(0,s.mdx)("a",{parentName:"em",href:"textureset/textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},"TextureSet")),") → None\nMake a group of Texture Sets share the same baking common parameters. After that, editing a\ncommon parameter of one of the group’s Texture Set will impact the whole group."),(0,s.mdx)("p",null,"Parameters:"),(0,s.mdx)("ul",null,(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("strong",{parentName:"li"},"group")," (",(0,s.mdx)("em",{parentName:"li"},"List**["),(0,s.mdx)("a",{parentName:"li",href:"textureset/textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},(0,s.mdx)("em",{parentName:"a"},"TextureSet")),(0,s.mdx)("em",{parentName:"li"},"]"),") – Texture Sets to be included in the new group."),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("strong",{parentName:"li"},"reference")," (",(0,s.mdx)("a",{parentName:"li",href:"textureset/textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},(0,s.mdx)("em",{parentName:"a"},"TextureSet")),") – Texture Set which parameters are applied to the whole group.")),(0,s.mdx)("p",null,"substance_painter.baking.unlink_all(",(0,s.mdx)("em",{parentName:"p"},"usage: ",(0,s.mdx)("a",{parentName:"em",href:"textureset/index.html#substance_painter.textureset.MeshMapUsage",title:"substance_painter.textureset.MeshMapUsage"},"MeshMapUsage")),") → None\nUnlink all Texture Sets for a given usage. That is, remove the group if it exists, so that all\nTexture Sets have their own copy of the parameters."),(0,s.mdx)("p",null,"Parameters:\n",(0,s.mdx)("strong",{parentName:"p"},"usage")," (",(0,s.mdx)("a",{parentName:"p",href:"textureset/index.html#substance_painter.textureset.MeshMapUsage",title:"substance_painter.textureset.MeshMapUsage"},(0,s.mdx)("em",{parentName:"a"},"MeshMapUsage")),") – Usage to unlink."),(0,s.mdx)("p",null,"substance_painter.baking.unlink_all_common_parameters() → None\nUnlink all Texture Sets for common parameters. That is, remove the group if exists, so that all\nTexture Sets have their own copy of the parameters."),(0,s.mdx)("p",null,"substance_painter.baking.get_link_group(",(0,s.mdx)("em",{parentName:"p"},"usage: ",(0,s.mdx)("a",{parentName:"em",href:"textureset/index.html#substance_painter.textureset.MeshMapUsage",title:"substance_painter.textureset.MeshMapUsage"},"MeshMapUsage")),") → List[",(0,s.mdx)("a",{parentName:"p",href:"textureset/textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},"TextureSet"),"]\nGet the list of Texture Sets that share baking parameters for a given usage."),(0,s.mdx)("p",null,"Parameters:\n",(0,s.mdx)("strong",{parentName:"p"},"usage")," (",(0,s.mdx)("a",{parentName:"p",href:"textureset/index.html#substance_painter.textureset.MeshMapUsage",title:"substance_painter.textureset.MeshMapUsage"},(0,s.mdx)("em",{parentName:"a"},"MeshMapUsage")),") – Usage to query."),(0,s.mdx)("p",null,"Returns:\nAll linked Texture Sets for the usage. Empty list if no Texture Set are\nlinked."),(0,s.mdx)("p",null,"Return type:\nList[",(0,s.mdx)("a",{parentName:"p",href:"textureset/textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},"TextureSet"),"]"),(0,s.mdx)("p",null,"substance_painter.baking.get_link_group_common_parameters() → List[",(0,s.mdx)("a",{parentName:"p",href:"textureset/textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},"TextureSet"),"]\nGet the list of Texture Sets that share common baking parameters."),(0,s.mdx)("p",null,"Returns:\nAll linked Texture Sets for common parameters. Empty list if no Texture\nSet are linked."),(0,s.mdx)("p",null,"Return type:\nList[",(0,s.mdx)("a",{parentName:"p",href:"textureset/textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},"TextureSet"),"]"),(0,s.mdx)("p",null,"substance_painter.baking.get_linked_texture_sets(",(0,s.mdx)("em",{parentName:"p"},"texture_set: ",(0,s.mdx)("a",{parentName:"em",href:"textureset/textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},"TextureSet")),", ",(0,s.mdx)("em",{parentName:"p"},"usage: ",(0,s.mdx)("a",{parentName:"em",href:"textureset/index.html#substance_painter.textureset.MeshMapUsage",title:"substance_painter.textureset.MeshMapUsage"},"MeshMapUsage")),") → List[",(0,s.mdx)("a",{parentName:"p",href:"textureset/textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},"TextureSet"),"]\nGet the list of Texture Sets that share the same parameters as some Texture Set, for a given\nusage."),(0,s.mdx)("p",null,"Parameters:"),(0,s.mdx)("ul",null,(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("strong",{parentName:"li"},"texture_set")," (",(0,s.mdx)("a",{parentName:"li",href:"textureset/textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},(0,s.mdx)("em",{parentName:"a"},"TextureSet")),") – The Texture Set to query"),(0,s.mdx)("li",{parentName:"ul"},(0,s.mdx)("strong",{parentName:"li"},"usage")," (",(0,s.mdx)("a",{parentName:"li",href:"textureset/index.html#substance_painter.textureset.MeshMapUsage",title:"substance_painter.textureset.MeshMapUsage"},(0,s.mdx)("em",{parentName:"a"},"MeshMapUsage")),") – The usage to query")),(0,s.mdx)("p",null,"Returns:\nThe list of Texture Sets sharing parameters with the input Texture Set.\nContains at least the input Texture Set if no group exists for the usage."),(0,s.mdx)("p",null,"Return type:\nList[",(0,s.mdx)("a",{parentName:"p",href:"textureset/textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},"TextureSet"),"]"),(0,s.mdx)("p",null,"substance_painter.baking.get_linked_texture_sets_common_parameters(",(0,s.mdx)("em",{parentName:"p"},"texture_set: ",(0,s.mdx)("a",{parentName:"em",href:"textureset/textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},"TextureSet")),") → List[",(0,s.mdx)("a",{parentName:"p",href:"textureset/textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},"TextureSet"),"]\nGet the list of Texture Sets that share the same parameters as some Texture Set, for common\nparameters."),(0,s.mdx)("p",null,"Parameters:\n",(0,s.mdx)("strong",{parentName:"p"},"texture_set")," (",(0,s.mdx)("a",{parentName:"p",href:"textureset/textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},(0,s.mdx)("em",{parentName:"a"},"TextureSet")),") – The Texture Set to query"),(0,s.mdx)("p",null,"Returns:\nThe list of Texture Sets sharing common parameters with the input Texture\nSet. Contains at least the input Texture Set if no group exists for common parameters."),(0,s.mdx)("p",null,"Return type:\nList[",(0,s.mdx)("a",{parentName:"p",href:"textureset/textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},"TextureSet"),"]"),(0,s.mdx)("p",null,"substance_painter.baking.bake_async(",(0,s.mdx)("em",{parentName:"p"},"texture_set: ",(0,s.mdx)("a",{parentName:"em",href:"textureset/textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},"TextureSet")),") → ",(0,s.mdx)("a",{parentName:"p",href:"async_utils.html#substance_painter.async_utils.StopSource",title:"substance_painter.async_utils.StopSource"},"StopSource"),"\nLaunch the baking process for a Texture Set, using the current baking configuration.\nThe configuration is set by setting baking parameters, enabling Texture Set, selecting UV Tiles\nfor baking, setting curvature method etc.\nThis function is asynchronous. When the baking process is finished, the\n",(0,s.mdx)("a",{parentName:"p",href:"event.html#substance_painter.event.BakingProcessEnded",title:"substance_painter.event.BakingProcessEnded"},(0,s.mdx)("inlineCode",{parentName:"a"},"substance_painter.event.BakingProcessEnded"))," event is sent."),(0,s.mdx)("p",null,"Parameters:\n",(0,s.mdx)("strong",{parentName:"p"},"texture_set")," (",(0,s.mdx)("a",{parentName:"p",href:"textureset/textureset.html#substance_painter.textureset.TextureSet",title:"substance_painter.textureset.TextureSet"},(0,s.mdx)("em",{parentName:"a"},"TextureSet")),") – The Texture Set to bake."),(0,s.mdx)("p",null,"Returns:\nCan be used to cancel the asynchronous computation."),(0,s.mdx)("p",null,"Return type:\n",(0,s.mdx)("a",{parentName:"p",href:"async_utils.html#substance_painter.async_utils.StopSource",title:"substance_painter.async_utils.StopSource"},"StopSource")),(0,s.mdx)("p",null,"See also"),(0,s.mdx)("p",null,(0,s.mdx)("a",{parentName:"p",href:"#substance_painter.baking.BakingParameters",title:"substance_painter.baking.BakingParameters"},(0,s.mdx)("inlineCode",{parentName:"a"},"BakingParameters")),"\n",(0,s.mdx)("a",{parentName:"p",href:"event.html#substance_painter.event.BakingProcessAboutToStart",title:"substance_painter.event.BakingProcessAboutToStart"},(0,s.mdx)("inlineCode",{parentName:"a"},"substance_painter.event.BakingProcessAboutToStart")),"\n",(0,s.mdx)("a",{parentName:"p",href:"event.html#substance_painter.event.BakingProcessProgress",title:"substance_painter.event.BakingProcessProgress"},(0,s.mdx)("inlineCode",{parentName:"a"},"substance_painter.event.BakingProcessProgress")),"\n",(0,s.mdx)("a",{parentName:"p",href:"event.html#substance_painter.event.BakingProcessEnded",title:"substance_painter.event.BakingProcessEnded"},(0,s.mdx)("inlineCode",{parentName:"a"},"substance_painter.event.BakingProcessEnded")),"\n",(0,s.mdx)("a",{parentName:"p",href:"async_utils.html#substance_painter.async_utils.StopSource",title:"substance_painter.async_utils.StopSource"},(0,s.mdx)("inlineCode",{parentName:"a"},"substance_painter.async_utils.StopSource"))),(0,s.mdx)("p",null,"substance_painter.baking.bake_selected_textures_async() → ",(0,s.mdx)("a",{parentName:"p",href:"async_utils.html#substance_painter.async_utils.StopSource",title:"substance_painter.async_utils.StopSource"},"StopSource"),"\nLaunch the baking process, using the current baking configuration.\nThe configuration is set by setting baking parameters, enabling Texture Set, selecting UV Tiles\nfor baking, setting curvature method etc.\nThis function is asynchronous. When the baking process is finished, the\n",(0,s.mdx)("a",{parentName:"p",href:"event.html#substance_painter.event.BakingProcessEnded",title:"substance_painter.event.BakingProcessEnded"},(0,s.mdx)("inlineCode",{parentName:"a"},"substance_painter.event.BakingProcessEnded"))," event is sent."),(0,s.mdx)("p",null,"Returns:\nCan be used to cancel the asynchronous computation."),(0,s.mdx)("p",null,"Return type:\n",(0,s.mdx)("a",{parentName:"p",href:"async_utils.html#substance_painter.async_utils.StopSource",title:"substance_painter.async_utils.StopSource"},"StopSource")),(0,s.mdx)("p",null,"See also"),(0,s.mdx)("p",null,(0,s.mdx)("a",{parentName:"p",href:"#substance_painter.baking.BakingParameters",title:"substance_painter.baking.BakingParameters"},(0,s.mdx)("inlineCode",{parentName:"a"},"BakingParameters")),"\n",(0,s.mdx)("a",{parentName:"p",href:"event.html#substance_painter.event.BakingProcessAboutToStart",title:"substance_painter.event.BakingProcessAboutToStart"},(0,s.mdx)("inlineCode",{parentName:"a"},"substance_painter.event.BakingProcessAboutToStart")),"\n",(0,s.mdx)("a",{parentName:"p",href:"event.html#substance_painter.event.BakingProcessProgress",title:"substance_painter.event.BakingProcessProgress"},(0,s.mdx)("inlineCode",{parentName:"a"},"substance_painter.event.BakingProcessProgress")),"\n",(0,s.mdx)("a",{parentName:"p",href:"event.html#substance_painter.event.BakingProcessEnded",title:"substance_painter.event.BakingProcessEnded"},(0,s.mdx)("inlineCode",{parentName:"a"},"substance_painter.event.BakingProcessEnded")),"\n",(0,s.mdx)("a",{parentName:"p",href:"async_utils.html#substance_painter.async_utils.StopSource",title:"substance_painter.async_utils.StopSource"},(0,s.mdx)("inlineCode",{parentName:"a"},"substance_painter.async_utils.StopSource"))))}x.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-api-substance-painter-baking-md-9ad96625e98f30cd8bd8.js.map